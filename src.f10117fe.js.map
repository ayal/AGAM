{"version":3,"sources":["node_modules/three/build/three.module.js","node_modules/three/examples/jsm/controls/TrackballControls.js","src/index.ts","node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","_catch","delegateYield","_classCallCheck","instance","Constructor","_defineProperties","target","props","descriptor","_toPropertyKey","key","_createClass","protoProps","staticProps","_toPrimitive","String","toPrimitive","Number","REVISION","exports","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","TwoPassDoubleSide","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","ConstantColorFactor","OneMinusConstantColorFactor","ConstantAlphaFactor","OneMinusConstantAlphaFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","AttachedBindMode","DetachedBindMode","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedInt248Type","AlphaFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","RGB_BPTC_SIGNED_Format","RGB_BPTC_UNSIGNED_Format","RED_RGTC1_Format","SIGNED_RED_RGTC1_Format","RED_GREEN_RGTC2_Format","SIGNED_RED_GREEN_RGTC2_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","NoColorSpace","SRGBColorSpace","LinearSRGBColorSpace","DisplayP3ColorSpace","LinearDisplayP3ColorSpace","LinearTransfer","SRGBTransfer","Rec709Primaries","P3Primaries","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","NeverCompare","LessCompare","EqualCompare","LessEqualCompare","GreaterCompare","NotEqualCompare","GreaterEqualCompare","AlwaysCompare","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","_SRGBAFormat","WebGLCoordinateSystem","WebGPUCoordinateSystem","EventDispatcher","addEventListener","listener","_listeners","undefined","listeners","indexOf","hasEventListener","removeEventListener","listenerArray","index","splice","dispatchEvent","event","array","_lut","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toLowerCase","clamp","min","max","euclideanModulo","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","lerp","damp","lambda","dt","exp","pingpong","arguments","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","imul","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","b","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","denormalize","Float32Array","Uint32Array","Uint16Array","Uint8Array","Int32Array","Int16Array","Int8Array","normalize","round","MathUtils","Vector2","_Symbol$iterator","isVector2","get","setScalar","scalar","setX","setY","setComponent","getComponent","clone","copy","add","addScalar","addVectors","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","elements","clampScalar","minVal","maxVal","clampLength","roundToZero","trunc","negate","dot","cross","lengthSq","sqrt","manhattanLength","angle","atan2","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","value$","_context2","Matrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","isMatrix3","te","identity","me","extractBasis","xAxis","yAxis","zAxis","setFromMatrix3Column","setFromMatrix4","multiplyMatrices","premultiply","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","invert","t11","t12","t13","det","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","scale","_m3","makeScale","rotate","makeRotation","translate","makeTranslation","matrix","arrayNeedsUint32","TYPED_ARRAYS","Uint8ClampedArray","Float64Array","getTypedArray","buffer","createElementNS","document","createCanvasElement","canvas","style","display","_cache","warnOnce","message","LINEAR_SRGB_TO_LINEAR_DISPLAY_P3","LINEAR_DISPLAY_P3_TO_LINEAR_SRGB","COLOR_SPACES","_defineProperty","transfer","primaries","toReference","color","fromReference","convertSRGBToLinear","convertLinearToSRGB","SUPPORTED_WORKING_COLOR_SPACES","Set","ColorManagement","enabled","_workingColorSpace","legacyMode","workingColorSpace","colorSpace","has","concat","convert","sourceColorSpace","targetColorSpace","sourceToReference","targetFromReference","fromWorkingColorSpace","toWorkingColorSpace","getPrimaries","getTransfer","SRGBToLinear","LinearToSRGB","_canvas","ImageUtils","getDataURL","image","test","src","HTMLCanvasElement","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","sRGBToLinear","HTMLImageElement","ImageBitmap","imageData","getImageData","data","_sourceId","Source","isSource","version","toJSON","meta","isRootObject","images","output","url","Array","isArray","isDataTexture","serializeImage","from","_textureId","Texture","_EventDispatcher","_inherits","_super","_createSuper","_this2","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","DEFAULT_ANISOTROPY","isTexture","_assertThisInitialized","source","mipmaps","channel","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","onUpdate","isRenderTargetTexture","needsPMREMUpdate","updateMatrix","JSON","parse","stringify","needsUpdate","textures","metadata","generator","dispose","transformUv","uv","encoding","Vector4","_Symbol$iterator2","z","w","isVector4","setZ","setW","applyMatrix4","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","_context3","RenderTarget","_EventDispatcher2","_super2","_this3","options","isRenderTarget","depth","scissor","scissorTest","viewport","assign","depthBuffer","stencilBuffer","depthTexture","samples","texture","setSize","WebGLRenderTarget","_RenderTarget","_super3","_this4","isWebGLRenderTarget","DataArrayTexture","_Texture","_super4","_this5","isDataArrayTexture","wrapR","WebGLArrayRenderTarget","_WebGLRenderTarget","_super5","_this6","isWebGLArrayRenderTarget","Data3DTexture","_Texture2","_super6","_this7","isData3DTexture","WebGL3DRenderTarget","_WebGLRenderTarget2","_super7","_this8","isWebGL3DRenderTarget","WebGLMultipleRenderTargets","_WebGLRenderTarget3","_super8","_this9","count","isWebGLMultipleRenderTargets","il","Quaternion","_Symbol$iterator3","isQuaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","setFromEuler","euler","update","_order","c1","c3","s1","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","trace","setFromUnitVectors","vFrom","vTo","EPSILON","rotateTowards","step","slerp","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","slerpQuaternions","qa","u1","sqrt1u1","sqrtu1","u2","u3","_onChange","callback","_context4","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","multiplyQuaternionsFlat","Vector3","_Symbol$iterator4","isVector3","multiplyVectors","applyEuler","applyQuaternion","_quaternion$4","applyAxisAngle","applyNormalMatrix","vx","vy","vz","qx","qy","qz","qw","tz","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","_vector$c","reflect","normal","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","setFromMatrixColumn","sz","setFromColor","randomDirection","_context5","Box3","Infinity","isBox3","setFromArray","makeEmpty","expandByPoint","_vector$b","setFromBufferAttribute","setFromPoints","points","setFromCenterAndSize","size","halfSize","setFromObject","object","precise","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","vector","expandByScalar","updateWorldMatrix","geometry","positionAttribute","getAttribute","isInstancedMesh","isMesh","getVertexPosition","boundingBox","computeBoundingBox","_box$4","union","children","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","_center","_extents","_v0$2","_v1$7","_v2$4","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","distanceToPoint","getBoundingSphere","intersect","_points","_testAxis","v0","extents","j","p0","p1","p2","_box$3","_v1$6","_v2$3","Sphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","getMaxScaleOnAxis","delta","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","lookAt","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","QdN","Matrix4","n14","n24","n34","n41","n42","n43","n44","isMatrix4","copyPosition","setFromMatrix3","makeBasis","extractRotation","scaleX","_v1$5","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","scaleXSq","scaleYSq","scaleZSq","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeShear","yx","zx","zy","position","x2","y2","z2","wx","wy","wz","decompose","_m1$2","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","coordinateSystem","makeOrthographic","zInv","_matrix$1","_quaternion$3","Euler","_Symbol$iterator5","DEFAULT_ORDER","isEuler","asin","setFromQuaternion","setFromVector3","reorder","newOrder","_context6","Layers","mask","enable","enableAll","toggle","disable","disableAll","layers","isEnabled","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","_EventDispatcher3","_super9","_this10","isObject3D","parent","DEFAULT_UP","onRotationChange","onQuaternionChange","defineProperties","modelViewMatrix","normalMatrix","DEFAULT_MATRIX_AUTO_UPDATE","matrixWorldAutoUpdate","DEFAULT_MATRIX_WORLD_AUTO_UPDATE","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","onBeforeShadow","onAfterShadow","onBeforeRender","onAfterRender","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","isLight","error","remove","removeFromParent","clear","apply","_toConsumableArray","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getObjectsByProperty","result","getWorldPosition","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","updateMatrixWorld","force","updateParents","updateChildren","geometries","materials","shapes","skeletons","nodes","instanceMatrix","instanceColor","isBatchedMesh","perObjectFrustumCulled","sortObjects","drawRanges","_drawRanges","reservedRanges","_reservedRanges","visibility","_visibility","active","_active","bounds","_bounds","map","bound","boxInitialized","boxMin","boxMax","sphereInitialized","sphereRadius","sphereCenter","maxGeometryCount","_maxGeometryCount","maxVertexCount","_maxVertexCount","maxIndexCount","_maxIndexCount","geometryInitialized","_geometryInitialized","geometryCount","_geometryCount","matricesTexture","_matricesTexture","boundingSphere","serialize","library","element","isScene","background","isColor","environment","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","recursive","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","warnedGetUV","Triangle","setFromPointsAndIndices","i0","i1","i2","setFromAttributeAndIndices","getArea","getMidpoint","getNormal","getPlane","setFromCoplanarPoints","getBarycoord","getUV","uv1","uv2","uv3","getInterpolation","v3","isFrontFacing","d4","vc","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","p3","_colorKeywords","_hslA","_hslB","hue2rgb","Color","_Symbol$iterator6","setHex","setStyle","setRGB","hex","setHSL","handleAlpha","string","parseFloat","exec","components","parseInt","setColorName","copySRGBToLinear","copyLinearToSRGB","getHex","_color","getHexString","toString","getHSL","hue","saturation","lightness","getRGB","getStyle","toFixed","offsetHSL","addColors","color1","color2","lerpColors","lerpHSL","_context7","NAMES","_materialId","Material","_EventDispatcher4","_super10","_this11","isMaterial","blending","side","vertexColors","opacity","transparent","alphaHash","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","blendColor","blendAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaToCoverage","premultipliedAlpha","forceSinglePass","toneMapped","_alphaTest","onBuild","onBeforeCompile","customProgramCacheKey","setValues","newValue","currentValue","roughness","metalness","sheen","sheenColor","sheenRoughness","emissive","emissiveIntensity","specular","specularIntensity","specularColor","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","iridescence","iridescenceIOR","iridescenceThicknessRange","iridescenceMap","iridescenceThicknessMap","anisotropyRotation","anisotropyMap","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","specularIntensityMap","specularColorMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","alphaTest","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","flatShading","fog","srcPlanes","dstPlanes","MeshBasicMaterial","_Material","_super11","_this12","isMeshBasicMaterial","_get","_getPrototypeOf","_tables","_generateTables","ArrayBuffer","floatView","uint32View","baseTable","shiftTable","mantissaTable","exponentTable","offsetTable","toHalfFloat","val","fromHalfFloat","DataUtils","_vector$9","_vector2$1","BufferAttribute","itemSize","normalized","isBufferAttribute","usage","_updateRange","updateRanges","gpuType","onUploadCallback","setUsage","addUpdateRange","start","clearUpdateRanges","copyAt","index1","index2","copyArray","setXY","setXYZ","component","setXYZW","onUpload","Int8BufferAttribute","_BufferAttribute","_super12","Uint8BufferAttribute","_BufferAttribute2","_super13","Uint8ClampedBufferAttribute","_BufferAttribute3","_super14","Int16BufferAttribute","_BufferAttribute4","_super15","Uint16BufferAttribute","_BufferAttribute5","_super16","Int32BufferAttribute","_BufferAttribute6","_super17","Uint32BufferAttribute","_BufferAttribute7","_super18","Float16BufferAttribute","_BufferAttribute8","_super19","_this13","isFloat16BufferAttribute","Float32BufferAttribute","_BufferAttribute9","_super20","Float64BufferAttribute","_BufferAttribute10","_super21","_id$2","_m1","_obj","_offset","_box$2","_boxMorphTargets","_vector$8","BufferGeometry","_EventDispatcher5","_super22","_this14","isBufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","drawRange","getIndex","setIndex","setAttribute","deleteAttribute","hasAttribute","addGroup","materialIndex","clearGroups","setDrawRange","tangent","computeBoundingSphere","morphAttributesPosition","isGLBufferAttribute","morphAttribute","jl","computeTangents","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","computeVertexNormals","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","toNonIndexed","convertBufferAttribute","array2","isInterleavedBufferAttribute","stride","geometry2","newAttribute","morphArray","hasMorphAttributes","attributeArray","_inverseMatrix$3","_ray$3","_sphere$6","_sphereHitAt","_vA$1","_vB$1","_vC$1","_tempA","_morphA","_uvA$1","_uvB$1","_uvC$1","_normalA","_normalB","_normalC","_intersectionPoint","_intersectionPointWorld","Mesh","_Object3D","_super23","_this15","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","ml","morphPosition","morphInfluences","influence","raycaster","intersects","_computeIntersections","rayLocalSpace","intersection","groupMaterial","end","checkGeometryIntersection","faceIndex","face","checkIntersection","BoxGeometry","_BufferGeometry","_super24","_this16","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","iy","ix","fromJSON","cloneUniforms","property","mergeUniforms","uniforms","merged","cloneUniformsGroups","getUnlitUniformColorSpace","renderer","getRenderTarget","outputColorSpace","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","_Material2","_super25","_this17","isShaderMaterial","defines","uniformsGroups","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","Camera","_Object3D2","_super26","_this18","PerspectiveCamera","_Camera","_super27","_this19","fov","aspect","isPerspectiveCamera","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","_Object3D3","_super28","renderTarget","_this20","activeMipmapLevel","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","updateCoordinateSystem","cameras","_cameras","_slicedToArray","_iterator","_createForOfIteratorHelper","_step","err","_iterator2","_step2","scene","_this$children","currentRenderTarget","currentActiveCubeFace","getActiveCubeFace","currentActiveMipmapLevel","getActiveMipmapLevel","currentXrEnabled","xr","setRenderTarget","render","CubeTexture","_Texture3","_super29","_this21","isCubeTexture","WebGLCubeRenderTarget","_WebGLRenderTarget4","_super30","_this22","isWebGLCubeRenderTarget","fromEquirectangularTexture","shader","tEquirect","mesh","currentMinFilter","stencil","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","intersectsLine","startSign","endSign","coplanarPoint","optionalNormalMatrix","referencePoint","_sphere$5","_vector$7","Frustum","p4","p5","planes","frustum","setFromProjectionMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","byteLength","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","deleteBuffer","delete","cached","elementSize","PlaneGeometry","_BufferGeometry2","_super31","_this23","width_half","height_half","segment_width","segment_height","alphahash_fragment","alphahash_pars_fragment","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","alphatest_pars_fragment","aomap_fragment","aomap_pars_fragment","batching_pars_vertex","batching_vertex","begin_vertex","beginnormal_vertex","bsdfs","iridescence_fragment","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","colorspace_fragment","colorspace_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_fragment","lights_lambert_pars_fragment","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphcolor_vertex","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normal_pars_fragment","normal_pars_vertex","normal_vertex","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","iridescence_pars_fragment","opaque_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","worldpos_vertex","vertex$h","fragment$h","vertex$g","fragment$g","vertex$f","fragment$f","vertex$e","fragment$e","vertex$d","fragment$d","vertex$c","fragment$c","vertex$b","fragment$b","vertex$a","fragment$a","vertex$9","fragment$9","vertex$8","fragment$8","vertex$7","fragment$7","vertex$6","fragment$6","vertex$5","fragment$5","vertex$4","fragment$4","vertex$3","fragment$3","vertex$2","fragment$2","vertex$1","fragment$1","ShaderChunk","background_vert","background_frag","backgroundCube_vert","backgroundCube_frag","cube_vert","cube_frag","depth_vert","depth_frag","distanceRGBA_vert","distanceRGBA_frag","equirect_vert","equirect_frag","linedashed_vert","linedashed_frag","meshbasic_vert","meshbasic_frag","meshlambert_vert","meshlambert_frag","meshmatcap_vert","meshmatcap_frag","meshnormal_vert","meshnormal_frag","meshphong_vert","meshphong_frag","meshphysical_vert","meshphysical_frag","meshtoon_vert","meshtoon_frag","points_vert","points_frag","shadow_vert","shadow_frag","sprite_vert","sprite_frag","UniformsLib","diffuse","mapTransform","alphaMapTransform","specularmap","specularMapTransform","envmap","flipEnvMap","ior","aomap","aoMapTransform","lightmap","lightMapTransform","bumpmap","bumpMapTransform","normalmap","normalMapTransform","displacementmap","displacementMapTransform","emissivemap","emissiveMapTransform","metalnessmap","metalnessMapTransform","roughnessmap","roughnessMapTransform","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotLightMap","spotShadowMap","spotLightMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","uvTransform","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","t2D","backgroundIntensity","backgroundCube","backgroundBlurriness","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","clearcoatMapTransform","clearcoatNormalMapTransform","clearcoatRoughnessMapTransform","iridescenceMapTransform","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMapTransform","sheenColorMap","sheenColorMapTransform","sheenRoughnessMap","sheenRoughnessMapTransform","transmissionMapTransform","transmissionSamplerSize","transmissionSamplerMap","thicknessMapTransform","specularColorMapTransform","specularIntensityMapTransform","anisotropyVector","anisotropyMapTransform","_rgb","WebGLBackground","cubemaps","cubeuvmaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","usePMREM","setClear","environmentBlendMode","getEnvironmentBlendMode","autoClear","autoClearColor","autoClearDepth","autoClearStencil","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","forceUpdate","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","programAttributes","getAttributes","programAttribute","location","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","integer","vertexAttribIPointer","isInstancedBufferGeometry","materialDefaultAttributeValues","isInstancedInterleavedBuffer","locationSize","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","renderMultiDraw","starts","counts","drawCount","multiDrawArraysWEBGL","elementCount","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","beginShadows","projectPlanes","endShadows","setGlobalState","setState","useCache","materialProperties","resetGlobalState","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","onTextureDispose","OrthographicCamera","_Camera2","_super32","_this24","isOrthographicCamera","scaleW","scaleH","LOD_MIN","EXTRA_LOD_SIGMA","_flatCamera","_clearColor","_oldTarget","_oldActiveCubeFace","_oldActiveMipmapLevel","PHI","INV_PHI","_axisDirections","PMREMGenerator","_renderer","_pingPongRenderTarget","_lodMax","_cubeSize","_lodPlanes","_sizeLods","_sigmas","_blurMaterial","_cubemapMaterial","_equirectMaterial","_compileMaterial","fromScene","sigma","_setSize","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","fromEquirectangular","equirectangular","_fromTexture","fromCubemap","compileCubemapShader","_getCubemapMaterial","compileEquirectangularShader","_getEquirectMaterial","_dispose","cubeSize","log2","outputTarget","_setViewport","_textureToCubeUV","params","_createRenderTarget","_createPlanes2","_createPlanes","sizeLods","lodPlanes","sigmas","_getBlurShader","tmpMesh","compile","cubeCamera","upSign","forwardSign","originalAutoClear","backgroundMaterial","backgroundBox","useSolidColor","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","sum","weight","outputSize","lodMax","lod","totalLods","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","WebGLCubeUVMaps","cubeUVmaps","pmremGenerator","isEquirectMap","isCubeMap","isCubeTextureComplete","cubemapUV","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","multiDrawElementsWEBGL","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","morphTextures","morph","workInfluences","objectInfluences","morphTargetsCount","entry","hasMorphPosition","hasMorphNormals","hasMorphColors","morphTargets","morphNormals","morphColors","vertexDataCount","vertexDataStride","morphTarget","morphNormal","morphColor","disposeTexture","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","influences","sort","MAX_SAFE_INTEGER","WebGLObjects","updateMap","buffergeometry","onInstancedMeshDispose","instancedMesh","DepthTexture","_Texture4","_super33","_this25","isDepthTexture","compareFunction","emptyTexture","emptyShadowTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","emptyTexture2D","SAMPLER_2D_SHADOW","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","COMPLETION_STATUS_KHR","programIdCount","handleSource","errorLine","split","lines2","to","join","getEncodingComponents","workingPrimaries","encodingPrimaries","gamutMapping","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUVHeight","normalMapTangentSpace","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","shaderChunkMap","Map","include","newInclude","unrollLoopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","generateCubeUVSize","imageHeight","maxMip","texelHeight","texelWidth","WebGLProgram","cacheKey","envMapCubeUVSize","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderType","shaderName","batching","instancing","instancingColor","useFog","fogExp2","normalMapObjectSpace","mapUv","alphaMapUv","lightMapUv","aoMapUv","emissiveMapUv","bumpMapUv","normalMapUv","displacementMapUv","metalnessMapUv","roughnessMapUv","anisotropyMapUv","clearcoatMapUv","clearcoatNormalMapUv","clearcoatRoughnessMapUv","iridescenceMapUv","iridescenceThicknessMapUv","sheenColorMapUv","sheenRoughnessMapUv","specularMapUv","specularColorMapUv","specularIntensityMapUv","transmissionMapUv","thicknessMapUv","vertexTangents","vertexAlphas","vertexUv1s","vertexUv2s","vertexUv3s","pointsUvs","skinning","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","numLightProbes","useLegacyLights","decodeVideoTexture","opaque","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","onFirstUse","self","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","onShaderError","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","programReady","rendererExtensionParallelShaderCompile","isReady","destroy","deleteProgram","usedTimes","_id$1","WebGLShaderCache","shaderCache","materialCache","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","_iterator3","_step3","shaderStage","code","getVertexShaderID","getFragmentShaderID","stage","WebGLShaderStage","WebGLPrograms","_programLayers","_customShaders","IS_WEBGL2","SUPPORTS_VERTEX_TEXTURES","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getChannel","getParameters","shadows","isMeshStandardMaterial","customVertexShaderID","customFragmentShaderID","IS_INSTANCEDMESH","IS_BATCHEDMESH","HAS_MAP","HAS_MATCAP","HAS_ENVMAP","HAS_AOMAP","HAS_LIGHTMAP","HAS_BUMPMAP","HAS_NORMALMAP","HAS_DISPLACEMENTMAP","HAS_EMISSIVEMAP","HAS_METALNESSMAP","HAS_ROUGHNESSMAP","HAS_ANISOTROPY","HAS_CLEARCOAT","HAS_IRIDESCENCE","HAS_SHEEN","HAS_TRANSMISSION","HAS_ANISOTROPYMAP","HAS_CLEARCOATMAP","HAS_CLEARCOAT_NORMALMAP","HAS_CLEARCOAT_ROUGHNESSMAP","HAS_IRIDESCENCEMAP","HAS_IRIDESCENCE_THICKNESSMAP","HAS_SHEEN_COLORMAP","HAS_SHEEN_ROUGHNESSMAP","HAS_SPECULARMAP","HAS_SPECULAR_COLORMAP","HAS_SPECULAR_INTENSITYMAP","HAS_TRANSMISSIONMAP","HAS_THICKNESSMAP","HAS_GRADIENTMAP","HAS_ALPHAMAP","HAS_ALPHATEST","HAS_ALPHAHASH","HAS_EXTENSIONS","HAS_ATTRIBUTE_UV1","HAS_ATTRIBUTE_UV2","HAS_ATTRIBUTE_UV3","isXRRenderTarget","supportsVertexTextures","isFogExp2","directional","spot","rectArea","hemi","shadowMap","_useLegacyLights","isVideoTexture","getProgramCacheKey","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","morphAttributeCount","acquireProgram","pl","preexistingProgram","releaseProgram","releaseShaderCache","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","transmissive","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","WebGLRenderLists","lists","renderCallDepth","listArray","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingAndTexturingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","numSpotMaps","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","numSpotShadowsWithMaps","scaleFactor","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","updateMatrices","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderStateArray","renderState","_Material3","_super34","_this26","isMeshDepthMaterial","_Material4","_super35","_this27","isMeshDistanceMaterial","vertex","fragment","WebGLShadowMap","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterial","_distanceMaterial","_materialCache","_maxTextureSize","shadowMaterialVertical","VSM_SAMPLES","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","_previousType","activeCubeFace","_state","setBlending","setTest","setScissorTest","toVSM","fromVSM","shadowFrameExtents","getFrameExtents","pars","viewportCount","getViewportCount","vp","getViewport","getFrustum","renderObject","isPointLightShadow","VSMPass","blurSamples","mapPass","renderBufferDirect","getDepthMaterial","customMaterial","customDistanceMaterial","customDepthMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","k","kl","depthMaterial","WebGLState","_factorToGL","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","DEPTH_TEST","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","uboBindings","uboProgramMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentBlendColor","currentBlendAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","dimensions","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_3D","TEXTURE_2D_ARRAY","texImage3D","RGBA","texImage2D","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","COLOR_ATTACHMENT0","BACK","drawBuffersWEBGL","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","CONSTANT_COLOR","ONE_MINUS_CONSTANT_COLOR","CONSTANT_ALPHA","ONE_MINUS_CONSTANT_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","updateUBOMapping","uniformsGroup","blockIndex","getUniformBlockIndex","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","multisampledRTTExt","supportsInvalidateFramebuffer","navigator","userAgent","_videoTextures","_sources","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","getInternalFormat","internalFormatName","glFormat","glType","forceLinearTransfer","RED","R32F","R16F","R8","RED_INTEGER","R8UI","R16UI","R32UI","R8I","R16I","R32I","RG","RG32F","RG16F","RG8","RGBA32F","RGBA16F","SRGB8_ALPHA8","RGBA8","UNSIGNED_SHORT_4_4_4_4","RGBA4","UNSIGNED_SHORT_5_5_5_1","RGB5_A1","getMipLevels","isFramebufferTexture","isCompressedTexture","filterFallback","LINEAR","deallocateTexture","onRenderTargetDispose","deallocateRenderTarget","textureProperties","__webglInit","webglTextures","__cacheKey","deleteTexture","__webglTexture","renderTargetProperties","__webglFramebuffer","level","deleteFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","getTextureCacheKey","slot","updateVideoTexture","__version","uploadTexture","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","compareToGL","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","TEXTURE_COMPARE_MODE","COMPARE_REF_TO_TEXTURE","TEXTURE_COMPARE_FUNC","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","forceUpload","textureCacheKey","isCompressedArrayTexture","sourceProperties","texturePrimaries","unpackConversion","NONE","BROWSER_DEFAULT_WEBGL","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","verifyColorSpace","glInternalFormat","mipmap","useTexStorage","allocateMemory","levels","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","__hasExternalTextures","useMultisampledRTT","framebufferTexture2DMultisampleEXT","getRenderTargetSamples","TEXTURE_CUBE_MAP_NEGATIVE_Z","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","renderbufferStorageMultisampleEXT","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","__autoAllocateDepthBuffer","createRenderbuffer","rebindTextures","colorTexture","setupRenderTarget","isMultipleRenderTargets","createFramebuffer","glTextureType","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","invalidationArray","depthStyle","ignoreDepthValues","__ignoreDepthValues","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","invalidateFramebuffer","blitFramebuffer","__useRenderToTexture","WebGLUtils","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","SRGB_ALPHA_EXT","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT","COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT","COMPRESSED_RED_RGTC1_EXT","COMPRESSED_SIGNED_RED_RGTC1_EXT","COMPRESSED_RED_GREEN_RGTC2_EXT","COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","_PerspectiveCamera","_super36","_this28","isArrayCamera","Group","_Object3D4","_super37","_this29","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","getHandSpace","joints","inputState","pinching","getTargetRaySpace","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","getGripSpace","connect","inputSource","hand","_iterator4","_step4","inputjoint","_getHandJoint","disconnect","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","session","visibilityState","_iterator5","_step5","jointPose","getJointPose","joint","transform","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","getPose","targetRaySpace","jointName","WebXRManager","_EventDispatcher6","_super38","_this30","framebufferScaleFactor","referenceSpaceType","foveation","customReferenceSpace","pose","glBinding","glProjLayer","glBaseLayer","xrFrame","getContextAttributes","initialRenderTarget","newRenderTarget","controllers","controllerInputSources","currentSize","currentPixelRatio","cameraL","cameraR","cameraXR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getControllerGrip","getHand","onSessionEvent","controllerIndex","onSessionEnd","onInputSourcesChange","setPixelRatio","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setReferenceSpace","space","getBaseLayer","getBinding","getFrame","getSession","setSession","_ref","_asyncToGenerator","_callee","layerInit","depthFormat","depthType","glDepthFormat","projectionlayerInit","_callee$","_context8","xrCompatible","makeXRCompatible","getPixelRatio","antialias","XRWebGLLayer","updateRenderState","baseLayer","framebufferWidth","framebufferHeight","colorFormat","XRWebGLBinding","createProjectionLayer","textureWidth","textureHeight","setFoveation","requestReferenceSpace","_x3","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","updateUserCamera","getCamera","getFoveation","fixedFoveation","onAnimationFrameCallback","getViewerPose","views","setRenderTargetFramebuffer","cameraXRNeedsUpdate","glSubImage","getViewSubImage","setRenderTargetTextures","depthStencilTexture","detectedPlanes","WebGLMaterials","refreshTransformUniform","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","refreshUniformsStandard","isMeshPhysicalMaterial","refreshUniformsPhysical","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDistance","isMeshNormalMaterial","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","WebGLUniformsGroups","updateList","allocatedBindingPoints","maxBindingPoints","MAX_UNIFORM_BUFFER_BINDINGS","bind","webglProgram","prepareUniformsGroup","onUniformsGroupsDispose","updateBufferData","bindingPointIndex","allocateBindingPointIndex","__size","UNIFORM_BUFFER","bindBufferBase","__cache","hasUniformChanged","__offset","arrayOffset","getUniformSize","__data","storage","tempValues","cachedObjects","cachedObject","chunkSize","chunkOffset","infos","boundary","remainingSizeInChunk","WebGLRenderer","_parameters$canvas","_parameters$context","_parameters$depth","_parameters$stencil","_parameters$alpha","_parameters$antialias","_parameters$premultip","_parameters$preserveD","preserveDrawingBuffer","_parameters$powerPref","powerPreference","_parameters$failIfMaj","failIfMajorPerformanceCaveat","isWebGLRenderer","_alpha","uintClearColor","intClearColor","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","_outputColorSpace","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_currentClearColor","_currentClearAlpha","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","onContextCreationError","isWebGL1Renderer","shift","WebGLRenderingContext","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","setTransparentSort","bits","isIntegerFormat","targetFormat","targetType","isUnsignedType","clearBufferuiv","COLOR","clearBufferiv","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","statusMessage","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","setProgram","rangeFactor","drawStart","drawEnd","isLineSegments","isLineLoop","isSprite","_multiDrawStarts","_multiDrawCounts","_multiDrawCount","maxInstanceCount","prepareMaterial","getProgram","targetScene","material2","compileAsync","checkMaterialsReady","setTimeout","projectObject","camera2","renderScene","isLOD","opaqueObjects","transmissiveObjects","transparentObjects","renderTransmissionPass","renderObjects","currentToneMapping","renderTargetNeedsUpdate","currentSide","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","needsLights","materialNeedsLights","uniformsList","getUniformList","progUniforms","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","boneTexture","computeBoneTexture","isMeshGouraudMaterial","markUniformsLightsNeedsUpdate","defaultFramebuffer","__useDefaultFramebuffer","useDefaultFramebuffer","isRenderTarget3D","framebufferBound","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","readPixels","copyFramebufferToTexture","levelScale","copyTexSubImage2D","copyTextureToTexture","srcTexture","dstTexture","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","drawingBufferColorSpace","unpackColorSpace","WebGL1Renderer","_WebGLRenderer","_super39","FogExp2","Fog","Scene","_Object3D5","_super40","_this31","InterleavedBuffer","isInterleavedBuffer","arrayBuffers","_uuid","ib","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_Material5","_super41","_this32","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","_Object3D6","_super42","_this33","float32Array","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_Object3D7","_super43","_this34","_currentLevel","addLevel","hysteresis","getCurrentLevel","getObjectForDistance","levelDistance","_basePosition","_skinIndex","_skinWeight","_matrix4","_vertex","_sphere$4","_inverseMatrix$2","_ray$2","SkinnedMesh","_Mesh","_super44","_this35","bindMatrixInverse","applyBoneTransform","calculateInverses","normalizeSkinWeights","skinWeight","skinIndex","boneIndex","bones","boneInverses","boneTransform","Bone","_Object3D8","_super45","_this36","isBone","DataTexture","_Texture5","_super46","_this37","_offsetMatrix","_identityMatrix$1","Skeleton","boneMatrices","inverse","bone","getBoneByName","json","boneInverse","InstancedBufferAttribute","_BufferAttribute11","_super47","_this38","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_box3","_identity","_mesh$1","_sphere$3","InstancedMesh","_Mesh2","_super48","_this39","setMatrixAt","getMatrixAt","getColorAt","raycastTimes","instanceId","setColorAt","sortOpaque","sortTransparent","MultiDrawRenderList","pool","item","ID_ATTR_NAME","_matrix","_invMatrixWorld","_identityMatrix","_projScreenMatrix$2","_box$1","_sphere$2","_vector$5","_renderList","_mesh","_batchIntersects","copyAttributeData","targetOffset","vertexCount","BatchedMesh","_Mesh3","_super49","_this40","customSort","_visibilityChanged","_initMatricesTexture","matricesArray","_initializeGeometry","reference","attributeName","srcAttribute","dstAttribute","indexArray","idArray","_validateGeometry","batchGeometry","Boolean","setCustomSort","func","getBoundingBoxAt","getBoundingSphereAt","addGeometry","indexCount","reservedRange","vertexStart","indexStart","lastRange","hasIndex","idAttribute","setGeometryAt","dstIndex","srcIndex","posAttr","deleteGeometry","iv","setVisibleAt","getVisibleAt","batchId","_objectSpread","multiDrawStarts","multiDrawCounts","isWebGPURenderer","culled","_Material6","_super50","_this41","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","_Object3D9","_super51","_this42","computeLineDistances","lineDistances","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","_start","_end","LineSegments","_Line","_super52","_this43","LineLoop","_Line2","_super53","_this44","_Material7","_super54","_this45","_inverseMatrix","_ray","_sphere","_position$2","Points","_Object3D10","_super55","_this46","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","_Texture6","_super56","video","_this47","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","FramebufferTexture","_Texture7","_super57","_this48","CompressedTexture","_Texture8","_super58","_this49","CompressedArrayTexture","_CompressedTexture","_super59","_this50","CompressedCubeTexture","_CompressedTexture2","_super60","_this51","isCompressedCubeTexture","CanvasTexture","_Texture9","_super61","_this52","isCanvasTexture","Curve","arcLengthDivisions","getPoint","getPointAt","optionalTarget","getUtoTmapping","getPoints","divisions","getSpacedPoints","getLength","lengths","getLengths","cacheArcLengths","current","last","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","computeFrenetFrames","segments","closed","binormals","vec","mat","MAX_VALUE","EllipseCurve","_Curve","_super62","_this53","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","_EllipseCurve","_super63","aRadius","_this54","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","px","py","pz","CatmullRomCurve3","_Curve2","_super64","_this55","curveType","isCatmullRomCurve3","intPoint","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","_Curve3","_super65","_this56","isCubicBezierCurve","CubicBezierCurve3","_Curve4","_super66","_this57","isCubicBezierCurve3","LineCurve","_Curve5","_super67","_this58","isLineCurve","LineCurve3","_Curve6","_super68","_this59","isLineCurve3","QuadraticBezierCurve","_Curve7","_super69","_this60","isQuadraticBezierCurve","QuadraticBezierCurve3","_Curve8","_super70","_this61","isQuadraticBezierCurve3","SplineCurve","_Curve9","_super71","_this62","isSplineCurve","Curves","freeze","CurvePath","_Curve10","_super72","_this63","curves","autoClose","curve","closePath","startPoint","endPoint","lineType","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","pts","Path","_CurvePath","_super73","_this64","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","arc","absarc","absellipse","ellipse","firstPoint","lastPoint","LatheGeometry","_BufferGeometry3","_super74","_this65","phiStart","phiLength","initNormals","inverseSegments","curNormal","prevNormal","base","CapsuleGeometry","_LatheGeometry","_super75","_this66","capSegments","radialSegments","CircleGeometry","_BufferGeometry4","_super76","_this67","thetaStart","thetaLength","segment","CylinderGeometry","_BufferGeometry5","_super77","_this68","radiusTop","radiusBottom","openEnded","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","_CylinderGeometry","_super78","_this69","PolyhedronGeometry","_BufferGeometry6","_super79","_this70","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","details","DodecahedronGeometry","_PolyhedronGeometry","_super80","_this71","_v0","_v1$1","_normal","_triangle","EdgesGeometry","_BufferGeometry7","_super81","_this72","thresholdAngle","precisionPoints","thresholdDot","indexAttr","positionAttr","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","_edgeData$key","Shape","_Path","_super82","_this73","holes","getPointsHoles","holesPts","extractPoints","hole","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","minX","minY","maxX","maxY","invSize","eliminateHoles","earcutLinked","clockwise","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minZ","zOrder","maxZ","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","bridge","findHoleBridge","bridgeReverse","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","ShapeUtils","contour","isClockWise","triangulateShape","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","_BufferGeometry8","_super83","_this74","verticesArray","uvArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","extrudePts","extrudeByPath","splineTube","binormal","position2","shapePoints","hl","ahole","scalePt2","pt","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","geometryShapes","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","_PolyhedronGeometry2","_super84","_this75","OctahedronGeometry","_PolyhedronGeometry3","_super85","_this76","RingGeometry","_BufferGeometry9","_super86","_this77","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","_BufferGeometry10","_super87","_this78","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","_BufferGeometry11","_super88","_this79","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","_PolyhedronGeometry4","_super89","_this80","TorusGeometry","_BufferGeometry12","_super90","_this81","tube","tubularSegments","TorusKnotGeometry","_BufferGeometry13","_super91","_this82","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","_BufferGeometry14","_super92","_this83","frames","P","generateBufferData","generateSegment","generateIndices","WireframeGeometry","_BufferGeometry15","_super93","_this84","edges","ol","isUniqueEdge","hash1","hash2","Geometries","_Material8","_super94","_this85","RawShaderMaterial","_ShaderMaterial","_super95","_this86","_Material9","_super96","_this87","_MeshStandardMaterial","_super97","_this88","_anisotropy","_clearcoat","_iridescence","_sheen","_transmission","_Material10","_super98","_this89","_Material11","_super99","_this90","_Material12","_super100","_this91","_Material13","_super101","_this92","_Material14","_super102","_this93","_LineBasicMaterial","_super103","_this94","convertArray","forceClone","isTypedArray","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","_loop","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","valueEnd","_ret","blendMode","AnimationUtils","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","copySampleValue_","t1global","mid","intervalChanged_","interpolate_","getSettings_","CubicInterpolant","_Interpolant","_super104","_this95","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","_Interpolant2","_super105","offset1","offset0","weight1","weight0","DiscreteInterpolant","_Interpolant3","_super106","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","_KeyframeTrack","_super107","ColorKeyframeTrack","_KeyframeTrack2","_super108","NumberKeyframeTrack","_KeyframeTrack3","_super109","QuaternionLinearInterpolant","_Interpolant4","_super110","QuaternionKeyframeTrack","_KeyframeTrack4","_super111","StringKeyframeTrack","_KeyframeTrack5","_super112","VectorKeyframeTrack","_KeyframeTrack6","_super113","AnimationClip","duration","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","global","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","load","loadAsync","reject","setCrossOrigin","setWithCredentials","setPath","setResourcePath","setRequestHeader","DEFAULT_MATERIAL_NAME","loading","HttpError","_Error","_super114","response","_this96","_wrapNativeSuper","FileLoader","_Loader","_super115","_this97","req","Request","headers","Headers","credentials","mimeType","responseType","fetch","ReadableStream","body","getReader","callbacks","reader","contentLength","total","lengthComputable","loaded","stream","readData","read","_ref2","close","ProgressEvent","enqueue","Response","statusText","arrayBuffer","blob","text","parser","DOMParser","parseFromString","re","label","decoder","TextDecoder","decode","finally","setResponseType","setMimeType","AnimationLoader","_Loader2","_super116","CompressedTextureLoader","_Loader3","_super117","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","_Loader4","_super118","onImageLoad","removeEventListeners","onImageError","CubeTextureLoader","_Loader5","_super119","urls","DataTextureLoader","_Loader6","_super120","texData","TextureLoader","_Loader7","_super121","Light","_Object3D11","_super122","_this98","HemisphereLight","_Light","_super123","_this99","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","_LightShadow","_super124","_this100","isSpotLightShadow","SpotLight","_Light2","_super125","_this101","power","_lightPositionWorld","_lookTarget","PointLightShadow","_LightShadow2","_super126","_this102","_cubeDirections","_cubeUps","PointLight","_Light3","_super127","_this103","DirectionalLightShadow","_LightShadow3","_super128","_this104","isDirectionalLightShadow","DirectionalLight","_Light4","_super129","_this105","AmbientLight","_Light5","_super130","_this106","RectAreaLight","_Light6","_super131","_this107","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","getIrradianceAt","addScaledSH","getBasisAt","shBasis","LightProbe","_Light7","_super132","_this108","MaterialLoader","_Loader8","_super133","_this109","getTexture","createMaterialFromType","setTextures","materialLib","LoaderUtils","decodeText","fromCharCode","decodeURIComponent","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","_BufferGeometry16","_super134","_this110","BufferGeometryLoader","_Loader9","_super135","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","_Loader10","_super136","_loadAsync","_callee2","_callee2$","_context10","parseAsync","_x7","_x8","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","_parseAsync","_callee3","_callee3$","_context11","parseImagesAsync","_x9","bufferGeometryLoader","loadImage","deserializeImage","imageArray","currentUrl","deserializedImage","_parseImagesAsync","_callee5","_deserializeImage","_deserializedImage2","_callee5$","_context13","_deserializeImage3","_callee4","_url","_callee4$","_context12","_deserializeImage2","_x11","_x10","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","isInteger","objectAnimations","ImageBitmapLoader","_Loader11","_super137","_this111","isImageBitmapLoader","createImageBitmap","setOptions","fetchOptions","res","colorSpaceConversion","imageBitmap","_context","AudioContext","window","webkitAudioContext","AudioLoader","_Loader12","_super138","bufferCopy","decodeAudioData","audioBuffer","handleError","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","eyeSep","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","_Object3D12","_super139","_this112","gain","createGain","destination","timeDelta","_clock","getInput","removeFilter","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","_Object3D13","_super140","_this113","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position","_quaternion","_scale","_orientation","PositionalAudio","_Audio","_super141","_this114","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","accumulateAdditive","weightAdditive","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","_getValue_unavailable","_setValue_unavailable","_getValue_direct","targetObject","_getValue_array","resolvedProperty","_getValue_arrayElement","propertyIndex","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","dest","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","targetArray","sourceArray","objectName","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","lastDot","substring","searchNodeSubtree","childNode","subTreeNode","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","inUse","bindingsPerObject","indicesByUUID","paths","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","action","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","_controlInterpolantsResultBuffer","AnimationMixer","_EventDispatcher7","_super142","_this115","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","_id","UniformsGroup","_EventDispatcher8","_super143","_this116","isUniformsGroup","setName","uniformsSource","InstancedInterleavedBuffer","_InterleavedBuffer","_super144","_this117","GLBufferAttribute","setType","setItemSize","setCount","Raycaster","setFromCamera","coords","intersectObject","ascSort","intersectObjects","Spherical","other","makeSafe","EPS","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","_vector$3","SpotLightHelper","_Object3D14","_super145","_this118","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","_LineSegments","_super146","_this119","getBoneList","colors","isSkeletonHelper","boneList","PointLightHelper","_Mesh4","_super147","sphereSize","_this120","_vector$1","_color1","_color2","HemisphereLightHelper","_Object3D15","_super148","_this121","GridHelper","_LineSegments2","_super149","_this122","PolarGridHelper","_LineSegments3","_super150","_this123","sectors","rings","_v1","_v2","_v3","DirectionalLightHelper","_Object3D16","_super151","_this124","lightPlane","targetLine","_vector","_camera","CameraHelper","_LineSegments4","_super152","_this125","pointMap","addLine","addPoint","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","colorAttribute","setPoint","_box","BoxHelper","_LineSegments5","_super153","_this126","Box3Helper","_LineSegments6","_super154","_this127","PlaneHelper","_Line3","_super155","_this128","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","_Object3D17","_super156","_this129","headLength","headWidth","setDirection","setColor","AxesHelper","_LineSegments7","_super157","_this130","xAxisColor","yAxisColor","zAxisColor","ShapePath","subPaths","currentPath","toShapes","isCCW","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","tmpHoles","revision","__THREE__","_three","require","subClass","superClass","_setPrototypeOf","Derived","hasNativeReflectConstruct","_isNativeReflectConstruct","_createSuperInternal","Super","NewTarget","Reflect","construct","_possibleConstructorReturn","ReferenceError","sham","Proxy","valueOf","_changeEvent","_startEvent","_endEvent","TrackballControls","STATE","ZOOM","TOUCH_ROTATE","TOUCH_ZOOM_PAN","touchAction","screen","rotateSpeed","zoomSpeed","panSpeed","noRotate","noZoom","noPan","staticMoving","dynamicDampingFactor","minDistance","minZoom","maxZoom","mouseButtons","lastPosition","lastZoom","_keyState","_touchZoomDistanceStart","_touchZoomDistanceEnd","_lastAngle","_eye","_movePrev","_moveCurr","_lastAxis","_zoomStart","_zoomEnd","_panStart","_panEnd","_pointers","_pointerPositions","target0","position0","up0","zoom0","handleResize","getBoundingClientRect","ownerDocument","documentElement","pageXOffset","clientLeft","pageYOffset","clientTop","getMouseOnScreen","pageX","pageY","getMouseOnCircle","rotateCamera","eyeDirection","objectUpDirection","objectSidewaysDirection","moveDirection","zoomCamera","panCamera","mouseChange","objectUp","pan","scale_x","clientWidth","scale_y","checkDistances","onPointerDown","setPointerCapture","pointerId","onPointerMove","onPointerUp","addPointer","pointerType","onTouchStart","onMouseDown","onTouchMove","onMouseMove","onTouchEnd","onMouseUp","removePointer","releasePointerCapture","onPointerCancel","keydown","keyup","button","onMouseWheel","deltaMode","deltaY","trackPointer","getSecondPointerPosition","contextmenu","pointer","passive","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","hot","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","checkedAssets","assetsToAccept","isParcelRequire","WebSocket","hostname","protocol","ws","onmessage","handled","assets","asset","isNew","didAccept","hmrAcceptCheck","parcelRequire","every","generated","js","hmrApply","hmrAcceptRun","reload","onclose","removeErrorOverlay","stack","overlay","createErrorOverlay","appendChild","getElementById","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","dep","Function","deps","some"],"mappings":"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AAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,E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","file":"src.f10117fe.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2023 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\nconst REVISION = '159';\n\nconst MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\nconst TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\nconst CullFaceNone = 0;\nconst CullFaceBack = 1;\nconst CullFaceFront = 2;\nconst CullFaceFrontBack = 3;\nconst BasicShadowMap = 0;\nconst PCFShadowMap = 1;\nconst PCFSoftShadowMap = 2;\nconst VSMShadowMap = 3;\nconst FrontSide = 0;\nconst BackSide = 1;\nconst DoubleSide = 2;\nconst TwoPassDoubleSide = 2; // r149\nconst NoBlending = 0;\nconst NormalBlending = 1;\nconst AdditiveBlending = 2;\nconst SubtractiveBlending = 3;\nconst MultiplyBlending = 4;\nconst CustomBlending = 5;\nconst AddEquation = 100;\nconst SubtractEquation = 101;\nconst ReverseSubtractEquation = 102;\nconst MinEquation = 103;\nconst MaxEquation = 104;\nconst ZeroFactor = 200;\nconst OneFactor = 201;\nconst SrcColorFactor = 202;\nconst OneMinusSrcColorFactor = 203;\nconst SrcAlphaFactor = 204;\nconst OneMinusSrcAlphaFactor = 205;\nconst DstAlphaFactor = 206;\nconst OneMinusDstAlphaFactor = 207;\nconst DstColorFactor = 208;\nconst OneMinusDstColorFactor = 209;\nconst SrcAlphaSaturateFactor = 210;\nconst ConstantColorFactor = 211;\nconst OneMinusConstantColorFactor = 212;\nconst ConstantAlphaFactor = 213;\nconst OneMinusConstantAlphaFactor = 214;\nconst NeverDepth = 0;\nconst AlwaysDepth = 1;\nconst LessDepth = 2;\nconst LessEqualDepth = 3;\nconst EqualDepth = 4;\nconst GreaterEqualDepth = 5;\nconst GreaterDepth = 6;\nconst NotEqualDepth = 7;\nconst MultiplyOperation = 0;\nconst MixOperation = 1;\nconst AddOperation = 2;\nconst NoToneMapping = 0;\nconst LinearToneMapping = 1;\nconst ReinhardToneMapping = 2;\nconst CineonToneMapping = 3;\nconst ACESFilmicToneMapping = 4;\nconst CustomToneMapping = 5;\nconst AttachedBindMode = 'attached';\nconst DetachedBindMode = 'detached';\n\nconst UVMapping = 300;\nconst CubeReflectionMapping = 301;\nconst CubeRefractionMapping = 302;\nconst EquirectangularReflectionMapping = 303;\nconst EquirectangularRefractionMapping = 304;\nconst CubeUVReflectionMapping = 306;\nconst RepeatWrapping = 1000;\nconst ClampToEdgeWrapping = 1001;\nconst MirroredRepeatWrapping = 1002;\nconst NearestFilter = 1003;\nconst NearestMipmapNearestFilter = 1004;\nconst NearestMipMapNearestFilter = 1004;\nconst NearestMipmapLinearFilter = 1005;\nconst NearestMipMapLinearFilter = 1005;\nconst LinearFilter = 1006;\nconst LinearMipmapNearestFilter = 1007;\nconst LinearMipMapNearestFilter = 1007;\nconst LinearMipmapLinearFilter = 1008;\nconst LinearMipMapLinearFilter = 1008;\nconst UnsignedByteType = 1009;\nconst ByteType = 1010;\nconst ShortType = 1011;\nconst UnsignedShortType = 1012;\nconst IntType = 1013;\nconst UnsignedIntType = 1014;\nconst FloatType = 1015;\nconst HalfFloatType = 1016;\nconst UnsignedShort4444Type = 1017;\nconst UnsignedShort5551Type = 1018;\nconst UnsignedInt248Type = 1020;\nconst AlphaFormat = 1021;\nconst RGBAFormat = 1023;\nconst LuminanceFormat = 1024;\nconst LuminanceAlphaFormat = 1025;\nconst DepthFormat = 1026;\nconst DepthStencilFormat = 1027;\nconst RedFormat = 1028;\nconst RedIntegerFormat = 1029;\nconst RGFormat = 1030;\nconst RGIntegerFormat = 1031;\nconst RGBAIntegerFormat = 1033;\n\nconst RGB_S3TC_DXT1_Format = 33776;\nconst RGBA_S3TC_DXT1_Format = 33777;\nconst RGBA_S3TC_DXT3_Format = 33778;\nconst RGBA_S3TC_DXT5_Format = 33779;\nconst RGB_PVRTC_4BPPV1_Format = 35840;\nconst RGB_PVRTC_2BPPV1_Format = 35841;\nconst RGBA_PVRTC_4BPPV1_Format = 35842;\nconst RGBA_PVRTC_2BPPV1_Format = 35843;\nconst RGB_ETC1_Format = 36196;\nconst RGB_ETC2_Format = 37492;\nconst RGBA_ETC2_EAC_Format = 37496;\nconst RGBA_ASTC_4x4_Format = 37808;\nconst RGBA_ASTC_5x4_Format = 37809;\nconst RGBA_ASTC_5x5_Format = 37810;\nconst RGBA_ASTC_6x5_Format = 37811;\nconst RGBA_ASTC_6x6_Format = 37812;\nconst RGBA_ASTC_8x5_Format = 37813;\nconst RGBA_ASTC_8x6_Format = 37814;\nconst RGBA_ASTC_8x8_Format = 37815;\nconst RGBA_ASTC_10x5_Format = 37816;\nconst RGBA_ASTC_10x6_Format = 37817;\nconst RGBA_ASTC_10x8_Format = 37818;\nconst RGBA_ASTC_10x10_Format = 37819;\nconst RGBA_ASTC_12x10_Format = 37820;\nconst RGBA_ASTC_12x12_Format = 37821;\nconst RGBA_BPTC_Format = 36492;\nconst RGB_BPTC_SIGNED_Format = 36494;\nconst RGB_BPTC_UNSIGNED_Format = 36495;\nconst RED_RGTC1_Format = 36283;\nconst SIGNED_RED_RGTC1_Format = 36284;\nconst RED_GREEN_RGTC2_Format = 36285;\nconst SIGNED_RED_GREEN_RGTC2_Format = 36286;\nconst LoopOnce = 2200;\nconst LoopRepeat = 2201;\nconst LoopPingPong = 2202;\nconst InterpolateDiscrete = 2300;\nconst InterpolateLinear = 2301;\nconst InterpolateSmooth = 2302;\nconst ZeroCurvatureEnding = 2400;\nconst ZeroSlopeEnding = 2401;\nconst WrapAroundEnding = 2402;\nconst NormalAnimationBlendMode = 2500;\nconst AdditiveAnimationBlendMode = 2501;\nconst TrianglesDrawMode = 0;\nconst TriangleStripDrawMode = 1;\nconst TriangleFanDrawMode = 2;\n/** @deprecated Use LinearSRGBColorSpace or NoColorSpace in three.js r152+. */\nconst LinearEncoding = 3000;\n/** @deprecated Use SRGBColorSpace in three.js r152+. */\nconst sRGBEncoding = 3001;\nconst BasicDepthPacking = 3200;\nconst RGBADepthPacking = 3201;\nconst TangentSpaceNormalMap = 0;\nconst ObjectSpaceNormalMap = 1;\n\n// Color space string identifiers, matching CSS Color Module Level 4 and WebGPU names where available.\nconst NoColorSpace = '';\nconst SRGBColorSpace = 'srgb';\nconst LinearSRGBColorSpace = 'srgb-linear';\nconst DisplayP3ColorSpace = 'display-p3';\nconst LinearDisplayP3ColorSpace = 'display-p3-linear';\n\nconst LinearTransfer = 'linear';\nconst SRGBTransfer = 'srgb';\n\nconst Rec709Primaries = 'rec709';\nconst P3Primaries = 'p3';\n\nconst ZeroStencilOp = 0;\nconst KeepStencilOp = 7680;\nconst ReplaceStencilOp = 7681;\nconst IncrementStencilOp = 7682;\nconst DecrementStencilOp = 7683;\nconst IncrementWrapStencilOp = 34055;\nconst DecrementWrapStencilOp = 34056;\nconst InvertStencilOp = 5386;\n\nconst NeverStencilFunc = 512;\nconst LessStencilFunc = 513;\nconst EqualStencilFunc = 514;\nconst LessEqualStencilFunc = 515;\nconst GreaterStencilFunc = 516;\nconst NotEqualStencilFunc = 517;\nconst GreaterEqualStencilFunc = 518;\nconst AlwaysStencilFunc = 519;\n\nconst NeverCompare = 512;\nconst LessCompare = 513;\nconst EqualCompare = 514;\nconst LessEqualCompare = 515;\nconst GreaterCompare = 516;\nconst NotEqualCompare = 517;\nconst GreaterEqualCompare = 518;\nconst AlwaysCompare = 519;\n\nconst StaticDrawUsage = 35044;\nconst DynamicDrawUsage = 35048;\nconst StreamDrawUsage = 35040;\nconst StaticReadUsage = 35045;\nconst DynamicReadUsage = 35049;\nconst StreamReadUsage = 35041;\nconst StaticCopyUsage = 35046;\nconst DynamicCopyUsage = 35050;\nconst StreamCopyUsage = 35042;\n\nconst GLSL1 = '100';\nconst GLSL3 = '300 es';\n\nconst _SRGBAFormat = 1035; // fallback for WebGL 1\n\nconst WebGLCoordinateSystem = 2000;\nconst WebGPUCoordinateSystem = 2001;\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nclass EventDispatcher {\n\n\taddEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tconst listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t}\n\n\thasEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tconst listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t}\n\n\tremoveEventListener( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tconst index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tconst listeners = this._listeners;\n\t\tconst listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\t// Make a copy, in case listeners are removed while iterating.\n\t\t\tconst array = listenerArray.slice( 0 );\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t\tevent.target = null;\n\n\t\t}\n\n\t}\n\n}\n\nconst _lut = [ '00', '01', '02', '03', '04', '05', '06', '07', '08', '09', '0a', '0b', '0c', '0d', '0e', '0f', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '1a', '1b', '1c', '1d', '1e', '1f', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '2a', '2b', '2c', '2d', '2e', '2f', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '3a', '3b', '3c', '3d', '3e', '3f', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '4a', '4b', '4c', '4d', '4e', '4f', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '5a', '5b', '5c', '5d', '5e', '5f', '60', '61', '62', '63', '64', '65', '66', '67', '68', '69', '6a', '6b', '6c', '6d', '6e', '6f', '70', '71', '72', '73', '74', '75', '76', '77', '78', '79', '7a', '7b', '7c', '7d', '7e', '7f', '80', '81', '82', '83', '84', '85', '86', '87', '88', '89', '8a', '8b', '8c', '8d', '8e', '8f', '90', '91', '92', '93', '94', '95', '96', '97', '98', '99', '9a', '9b', '9c', '9d', '9e', '9f', 'a0', 'a1', 'a2', 'a3', 'a4', 'a5', 'a6', 'a7', 'a8', 'a9', 'aa', 'ab', 'ac', 'ad', 'ae', 'af', 'b0', 'b1', 'b2', 'b3', 'b4', 'b5', 'b6', 'b7', 'b8', 'b9', 'ba', 'bb', 'bc', 'bd', 'be', 'bf', 'c0', 'c1', 'c2', 'c3', 'c4', 'c5', 'c6', 'c7', 'c8', 'c9', 'ca', 'cb', 'cc', 'cd', 'ce', 'cf', 'd0', 'd1', 'd2', 'd3', 'd4', 'd5', 'd6', 'd7', 'd8', 'd9', 'da', 'db', 'dc', 'dd', 'de', 'df', 'e0', 'e1', 'e2', 'e3', 'e4', 'e5', 'e6', 'e7', 'e8', 'e9', 'ea', 'eb', 'ec', 'ed', 'ee', 'ef', 'f0', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', 'f9', 'fa', 'fb', 'fc', 'fd', 'fe', 'ff' ];\n\nlet _seed = 1234567;\n\n\nconst DEG2RAD = Math.PI / 180;\nconst RAD2DEG = 180 / Math.PI;\n\n// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\nfunction generateUUID() {\n\n\tconst d0 = Math.random() * 0xffffffff | 0;\n\tconst d1 = Math.random() * 0xffffffff | 0;\n\tconst d2 = Math.random() * 0xffffffff | 0;\n\tconst d3 = Math.random() * 0xffffffff | 0;\n\tconst uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t// .toLowerCase() here flattens concatenated strings to save heap memory space.\n\treturn uuid.toLowerCase();\n\n}\n\nfunction clamp( value, min, max ) {\n\n\treturn Math.max( min, Math.min( max, value ) );\n\n}\n\n// compute euclidean modulo of m % n\n// https://en.wikipedia.org/wiki/Modulo_operation\nfunction euclideanModulo( n, m ) {\n\n\treturn ( ( n % m ) + m ) % m;\n\n}\n\n// Linear mapping from range <a1, a2> to range <b1, b2>\nfunction mapLinear( x, a1, a2, b1, b2 ) {\n\n\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n}\n\n// https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\nfunction inverseLerp( x, y, value ) {\n\n\tif ( x !== y ) {\n\n\t\treturn ( value - x ) / ( y - x );\n\n\t} else {\n\n\t\treturn 0;\n\n\t}\n\n}\n\n// https://en.wikipedia.org/wiki/Linear_interpolation\nfunction lerp( x, y, t ) {\n\n\treturn ( 1 - t ) * x + t * y;\n\n}\n\n// http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\nfunction damp( x, y, lambda, dt ) {\n\n\treturn lerp( x, y, 1 - Math.exp( - lambda * dt ) );\n\n}\n\n// https://www.desmos.com/calculator/vcsjnyz7x4\nfunction pingpong( x, length = 1 ) {\n\n\treturn length - Math.abs( euclideanModulo( x, length * 2 ) - length );\n\n}\n\n// http://en.wikipedia.org/wiki/Smoothstep\nfunction smoothstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * ( 3 - 2 * x );\n\n}\n\nfunction smootherstep( x, min, max ) {\n\n\tif ( x <= min ) return 0;\n\tif ( x >= max ) return 1;\n\n\tx = ( x - min ) / ( max - min );\n\n\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n}\n\n// Random integer from <low, high> interval\nfunction randInt( low, high ) {\n\n\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n}\n\n// Random float from <low, high> interval\nfunction randFloat( low, high ) {\n\n\treturn low + Math.random() * ( high - low );\n\n}\n\n// Random float from <-range/2, range/2> interval\nfunction randFloatSpread( range ) {\n\n\treturn range * ( 0.5 - Math.random() );\n\n}\n\n// Deterministic pseudo-random float in the interval [ 0, 1 ]\nfunction seededRandom( s ) {\n\n\tif ( s !== undefined ) _seed = s;\n\n\t// Mulberry32 generator\n\n\tlet t = _seed += 0x6D2B79F5;\n\n\tt = Math.imul( t ^ t >>> 15, t | 1 );\n\n\tt ^= t + Math.imul( t ^ t >>> 7, t | 61 );\n\n\treturn ( ( t ^ t >>> 14 ) >>> 0 ) / 4294967296;\n\n}\n\nfunction degToRad( degrees ) {\n\n\treturn degrees * DEG2RAD;\n\n}\n\nfunction radToDeg( radians ) {\n\n\treturn radians * RAD2DEG;\n\n}\n\nfunction isPowerOfTwo( value ) {\n\n\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n}\n\nfunction ceilPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction floorPowerOfTwo( value ) {\n\n\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n}\n\nfunction setQuaternionFromProperEuler( q, a, b, c, order ) {\n\n\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\n\t// rotations are applied to the axes in the order specified by 'order'\n\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t// angles are in radians\n\n\tconst cos = Math.cos;\n\tconst sin = Math.sin;\n\n\tconst c2 = cos( b / 2 );\n\tconst s2 = sin( b / 2 );\n\n\tconst c13 = cos( ( a + c ) / 2 );\n\tconst s13 = sin( ( a + c ) / 2 );\n\n\tconst c1_3 = cos( ( a - c ) / 2 );\n\tconst s1_3 = sin( ( a - c ) / 2 );\n\n\tconst c3_1 = cos( ( c - a ) / 2 );\n\tconst s3_1 = sin( ( c - a ) / 2 );\n\n\tswitch ( order ) {\n\n\t\tcase 'XYX':\n\t\t\tq.set( c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YZY':\n\t\t\tq.set( s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZXZ':\n\t\t\tq.set( s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'XZX':\n\t\t\tq.set( c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'YXY':\n\t\t\tq.set( s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13 );\n\t\t\tbreak;\n\n\t\tcase 'ZYZ':\n\t\t\tq.set( s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13 );\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order );\n\n\t}\n\n}\n\nfunction denormalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn value / 4294967295.0;\n\n\t\tcase Uint16Array:\n\n\t\t\treturn value / 65535.0;\n\n\t\tcase Uint8Array:\n\n\t\t\treturn value / 255.0;\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.max( value / 2147483647.0, - 1.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.max( value / 32767.0, - 1.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.max( value / 127.0, - 1.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nfunction normalize( value, array ) {\n\n\tswitch ( array.constructor ) {\n\n\t\tcase Float32Array:\n\n\t\t\treturn value;\n\n\t\tcase Uint32Array:\n\n\t\t\treturn Math.round( value * 4294967295.0 );\n\n\t\tcase Uint16Array:\n\n\t\t\treturn Math.round( value * 65535.0 );\n\n\t\tcase Uint8Array:\n\n\t\t\treturn Math.round( value * 255.0 );\n\n\t\tcase Int32Array:\n\n\t\t\treturn Math.round( value * 2147483647.0 );\n\n\t\tcase Int16Array:\n\n\t\t\treturn Math.round( value * 32767.0 );\n\n\t\tcase Int8Array:\n\n\t\t\treturn Math.round( value * 127.0 );\n\n\t\tdefault:\n\n\t\t\tthrow new Error( 'Invalid component type.' );\n\n\t}\n\n}\n\nconst MathUtils = {\n\tDEG2RAD: DEG2RAD,\n\tRAD2DEG: RAD2DEG,\n\tgenerateUUID: generateUUID,\n\tclamp: clamp,\n\teuclideanModulo: euclideanModulo,\n\tmapLinear: mapLinear,\n\tinverseLerp: inverseLerp,\n\tlerp: lerp,\n\tdamp: damp,\n\tpingpong: pingpong,\n\tsmoothstep: smoothstep,\n\tsmootherstep: smootherstep,\n\trandInt: randInt,\n\trandFloat: randFloat,\n\trandFloatSpread: randFloatSpread,\n\tseededRandom: seededRandom,\n\tdegToRad: degToRad,\n\tradToDeg: radToDeg,\n\tisPowerOfTwo: isPowerOfTwo,\n\tceilPowerOfTwo: ceilPowerOfTwo,\n\tfloorPowerOfTwo: floorPowerOfTwo,\n\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler,\n\tnormalize: normalize,\n\tdenormalize: denormalize\n};\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nclass Matrix3 {\n\n\tconstructor( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tMatrix3.prototype.isMatrix3 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n21, n22, n23, n31, n32, n33 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrix3Column( this, 0 );\n\t\tyAxis.setFromMatrix3Column( this, 1 );\n\t\tzAxis.setFromMatrix3Column( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix4( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t}\n\n\tinvert() {\n\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ],\n\t\t\tn12 = te[ 3 ], n22 = te[ 4 ], n32 = te[ 5 ],\n\t\t\tn13 = te[ 6 ], n23 = te[ 7 ], n33 = te[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\ttranspose() {\n\n\t\tlet tmp;\n\t\tconst m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tgetNormalMatrix( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).invert().transpose();\n\n\t}\n\n\ttransposeIntoArray( r ) {\n\n\t\tconst m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetUvTransform( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tconst c = Math.cos( rotation );\n\t\tconst s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tscale( sx, sy ) {\n\n\t\tthis.premultiply( _m3.makeScale( sx, sy ) );\n\n\t\treturn this;\n\n\t}\n\n\trotate( theta ) {\n\n\t\tthis.premultiply( _m3.makeRotation( - theta ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( tx, ty ) {\n\n\t\tthis.premultiply( _m3.makeTranslation( tx, ty ) );\n\n\t\treturn this;\n\n\t}\n\n\t// for 2D Transforms\n\n\tmakeTranslation( x, y ) {\n\n\t\tif ( x.isVector2 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x.x,\n\t\t\t\t0, 1, x.y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, x,\n\t\t\t\t0, 1, y,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotation( theta ) {\n\n\t\t// counterclockwise\n\n\t\tconst c = Math.cos( theta );\n\t\tconst s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0,\n\t\t\ts, c, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0,\n\t\t\t0, y, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\t//\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t}\n\n}\n\nconst _m3 = /*@__PURE__*/ new Matrix3();\n\nfunction arrayNeedsUint32( array ) {\n\n\t// assumes larger values usually on last\n\n\tfor ( let i = array.length - 1; i >= 0; -- i ) {\n\n\t\tif ( array[ i ] >= 65535 ) return true; // account for PRIMITIVE_RESTART_FIXED_INDEX, #24565\n\n\t}\n\n\treturn false;\n\n}\n\nconst TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\tUint8ClampedArray: Uint8ClampedArray,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\nfunction getTypedArray( type, buffer ) {\n\n\treturn new TYPED_ARRAYS[ type ]( buffer );\n\n}\n\nfunction createElementNS( name ) {\n\n\treturn document.createElementNS( 'http://www.w3.org/1999/xhtml', name );\n\n}\n\nfunction createCanvasElement() {\n\n\tconst canvas = createElementNS( 'canvas' );\n\tcanvas.style.display = 'block';\n\treturn canvas;\n\n}\n\nconst _cache = {};\n\nfunction warnOnce( message ) {\n\n\tif ( message in _cache ) return;\n\n\t_cache[ message ] = true;\n\n\tconsole.warn( message );\n\n}\n\n/**\n * Matrices converting P3 <-> Rec. 709 primaries, without gamut mapping\n * or clipping. Based on W3C specifications for sRGB and Display P3,\n * and ICC specifications for the D50 connection space. Values in/out\n * are _linear_ sRGB and _linear_ Display P3.\n *\n * Note that both sRGB and Display P3 use the sRGB transfer functions.\n *\n * Reference:\n * - http://www.russellcottrell.com/photo/matrixCalculator.htm\n */\n\nconst LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = /*@__PURE__*/ new Matrix3().set(\n\t0.8224621, 0.177538, 0.0,\n\t0.0331941, 0.9668058, 0.0,\n\t0.0170827, 0.0723974, 0.9105199,\n);\n\nconst LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = /*@__PURE__*/ new Matrix3().set(\n\t1.2249401, - 0.2249404, 0.0,\n\t- 0.0420569, 1.0420571, 0.0,\n\t- 0.0196376, - 0.0786361, 1.0982735\n);\n\n/**\n * Defines supported color spaces by transfer function and primaries,\n * and provides conversions to/from the Linear-sRGB reference space.\n */\nconst COLOR_SPACES = {\n\t[ LinearSRGBColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color,\n\t\tfromReference: ( color ) => color,\n\t},\n\t[ SRGBColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: Rec709Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear(),\n\t\tfromReference: ( color ) => color.convertLinearToSRGB(),\n\t},\n\t[ LinearDisplayP3ColorSpace ]: {\n\t\ttransfer: LinearTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ),\n\t},\n\t[ DisplayP3ColorSpace ]: {\n\t\ttransfer: SRGBTransfer,\n\t\tprimaries: P3Primaries,\n\t\ttoReference: ( color ) => color.convertSRGBToLinear().applyMatrix3( LINEAR_DISPLAY_P3_TO_LINEAR_SRGB ),\n\t\tfromReference: ( color ) => color.applyMatrix3( LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 ).convertLinearToSRGB(),\n\t},\n};\n\nconst SUPPORTED_WORKING_COLOR_SPACES = new Set( [ LinearSRGBColorSpace, LinearDisplayP3ColorSpace ] );\n\nconst ColorManagement = {\n\n\tenabled: true,\n\n\t_workingColorSpace: LinearSRGBColorSpace,\n\n\tget legacyMode() {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\treturn ! this.enabled;\n\n\t},\n\n\tset legacyMode( legacyMode ) {\n\n\t\tconsole.warn( 'THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150.' );\n\n\t\tthis.enabled = ! legacyMode;\n\n\t},\n\n\tget workingColorSpace() {\n\n\t\treturn this._workingColorSpace;\n\n\t},\n\n\tset workingColorSpace( colorSpace ) {\n\n\t\tif ( ! SUPPORTED_WORKING_COLOR_SPACES.has( colorSpace ) ) {\n\n\t\t\tthrow new Error( `Unsupported working color space, \"${ colorSpace }\".` );\n\n\t\t}\n\n\t\tthis._workingColorSpace = colorSpace;\n\n\t},\n\n\tconvert: function ( color, sourceColorSpace, targetColorSpace ) {\n\n\t\tif ( this.enabled === false || sourceColorSpace === targetColorSpace || ! sourceColorSpace || ! targetColorSpace ) {\n\n\t\t\treturn color;\n\n\t\t}\n\n\t\tconst sourceToReference = COLOR_SPACES[ sourceColorSpace ].toReference;\n\t\tconst targetFromReference = COLOR_SPACES[ targetColorSpace ].fromReference;\n\n\t\treturn targetFromReference( sourceToReference( color ) );\n\n\t},\n\n\tfromWorkingColorSpace: function ( color, targetColorSpace ) {\n\n\t\treturn this.convert( color, this._workingColorSpace, targetColorSpace );\n\n\t},\n\n\ttoWorkingColorSpace: function ( color, sourceColorSpace ) {\n\n\t\treturn this.convert( color, sourceColorSpace, this._workingColorSpace );\n\n\t},\n\n\tgetPrimaries: function ( colorSpace ) {\n\n\t\treturn COLOR_SPACES[ colorSpace ].primaries;\n\n\t},\n\n\tgetTransfer: function ( colorSpace ) {\n\n\t\tif ( colorSpace === NoColorSpace ) return LinearTransfer;\n\n\t\treturn COLOR_SPACES[ colorSpace ].transfer;\n\n\t},\n\n};\n\n\nfunction SRGBToLinear( c ) {\n\n\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n}\n\nfunction LinearToSRGB( c ) {\n\n\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n}\n\nlet _canvas;\n\nclass ImageUtils {\n\n\tstatic getDataURL( image ) {\n\n\t\tif ( /^data:/i.test( image.src ) ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tif ( typeof HTMLCanvasElement === 'undefined' ) {\n\n\t\t\treturn image.src;\n\n\t\t}\n\n\t\tlet canvas;\n\n\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\tcanvas = image;\n\n\t\t} else {\n\n\t\t\tif ( _canvas === undefined ) _canvas = createElementNS( 'canvas' );\n\n\t\t\t_canvas.width = image.width;\n\t\t\t_canvas.height = image.height;\n\n\t\t\tconst context = _canvas.getContext( '2d' );\n\n\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t}\n\n\t\t\tcanvas = _canvas;\n\n\t\t}\n\n\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image );\n\n\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t} else {\n\n\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t}\n\n\t}\n\n\tstatic sRGBToLinear( image ) {\n\n\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\tconst canvas = createElementNS( 'canvas' );\n\n\t\t\tcanvas.width = image.width;\n\t\t\tcanvas.height = image.height;\n\n\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\tconst imageData = context.getImageData( 0, 0, image.width, image.height );\n\t\t\tconst data = imageData.data;\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] / 255 ) * 255;\n\n\t\t\t}\n\n\t\t\tcontext.putImageData( imageData, 0, 0 );\n\n\t\t\treturn canvas;\n\n\t\t} else if ( image.data ) {\n\n\t\t\tconst data = image.data.slice( 0 );\n\n\t\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tif ( data instanceof Uint8Array || data instanceof Uint8ClampedArray ) {\n\n\t\t\t\t\tdata[ i ] = Math.floor( SRGBToLinear( data[ i ] / 255 ) * 255 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// assuming float\n\n\t\t\t\t\tdata[ i ] = SRGBToLinear( data[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdata: data,\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied.' );\n\t\t\treturn image;\n\n\t\t}\n\n\t}\n\n}\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.data = data;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nlet _textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, colorSpace = NoColorSpace ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _textureId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\t\tthis.channel = 0;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\tif ( typeof colorSpace === 'string' ) {\n\n\t\t\tthis.colorSpace = colorSpace;\n\n\t\t} else { // @deprecated, r152\n\n\t\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\t\tthis.colorSpace = colorSpace === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value = null ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\t\tthis.channel = source.channel;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.colorSpace = source.colorSpace;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\t\t\tchannel: this.channel,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\tinternalFormat: this.internalFormat,\n\t\t\ttype: this.type,\n\t\t\tcolorSpace: this.colorSpace,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tgenerateMipmaps: this.generateMipmaps,\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tget encoding() { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\treturn this.colorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset encoding( encoding ) { // @deprecated, r152\n\n\t\twarnOnce( 'THREE.Texture: Property .encoding has been replaced by .colorSpace.' );\n\t\tthis.colorSpace = encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nclass Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\t\tthis.w = Math.trunc( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nclass RenderTarget extends EventDispatcher {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.isRenderTarget = true;\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\t\tthis.depth = 1;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\tconst image = { width: width, height: height, depth: 1 };\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\toptions = Object.assign( {\n\t\t\tgenerateMipmaps: false,\n\t\t\tinternalFormat: null,\n\t\t\tminFilter: LinearFilter,\n\t\t\tdepthBuffer: true,\n\t\t\tstencilBuffer: false,\n\t\t\tdepthTexture: null,\n\t\t\tsamples: 0\n\t\t}, options );\n\n\t\tthis.texture = new Texture( image, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.flipY = false;\n\t\tthis.texture.generateMipmaps = options.generateMipmaps;\n\t\tthis.texture.internalFormat = options.internalFormat;\n\n\t\tthis.depthBuffer = options.depthBuffer;\n\t\tthis.stencilBuffer = options.stencilBuffer;\n\n\t\tthis.depthTexture = options.depthTexture;\n\n\t\tthis.samples = options.samples;\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = depth;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\t// ensure image object is not shared, see #20328\n\n\t\tconst image = Object.assign( {}, source.texture.image );\n\t\tthis.texture.source = new Source( image );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.samples = source.samples;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nclass WebGLRenderTarget extends RenderTarget {\n\n\tconstructor( width = 1, height = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLRenderTarget = true;\n\n\t}\n\n}\n\nclass DataArrayTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\tsuper( null );\n\n\t\tthis.isDataArrayTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGLArrayRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLArrayRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new DataArrayTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass Data3DTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, depth = 1 ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tsuper( null );\n\n\t\tthis.isData3DTexture = true;\n\n\t\tthis.image = { data, width, height, depth };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nclass WebGL3DRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, depth = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGL3DRenderTarget = true;\n\n\t\tthis.depth = depth;\n\n\t\tthis.texture = new Data3DTexture( null, width, height, depth );\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t}\n\n}\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.scissor.copy( source.scissor );\n\t\tthis.scissorTest = source.scissorTest;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Quaternion {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tthis.isQuaternion = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t}\n\n\tstatic slerpFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tlet x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( t === 0 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( t === 1 ) {\n\n\t\t\tdst[ dstOffset + 0 ] = x1;\n\t\t\tdst[ dstOffset + 1 ] = y1;\n\t\t\tdst[ dstOffset + 2 ] = z1;\n\t\t\tdst[ dstOffset + 3 ] = w1;\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tlet s = 1 - t;\n\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tconst sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tconst tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tconst f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n\tstatic multiplyQuaternionsFlat( dst, dstOffset, src0, srcOffset0, src1, srcOffset1 ) {\n\n\t\tconst x0 = src0[ srcOffset0 ];\n\t\tconst y0 = src0[ srcOffset0 + 1 ];\n\t\tconst z0 = src0[ srcOffset0 + 2 ];\n\t\tconst w0 = src0[ srcOffset0 + 3 ];\n\n\t\tconst x1 = src1[ srcOffset1 ];\n\t\tconst y1 = src1[ srcOffset1 + 1 ];\n\t\tconst z1 = src1[ srcOffset1 + 2 ];\n\t\tconst w1 = src1[ srcOffset1 + 3 ];\n\n\t\tdst[ dstOffset ] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\tdst[ dstOffset + 1 ] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\tdst[ dstOffset + 2 ] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\tdst[ dstOffset + 3 ] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\n\t\treturn dst;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget w() {\n\n\t\treturn this._w;\n\n\t}\n\n\tset w( value ) {\n\n\t\tthis._w = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t}\n\n\tcopy( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromEuler( euler, update ) {\n\n\t\tconst x = euler._x, y = euler._y, z = euler._z, order = euler._order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\n\t\tconst c1 = cos( x / 2 );\n\t\tconst c2 = cos( y / 2 );\n\t\tconst c3 = cos( z / 2 );\n\n\t\tconst s1 = sin( x / 2 );\n\t\tconst s2 = sin( y / 2 );\n\t\tconst s3 = sin( z / 2 );\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tif ( update !== false ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAxisAngle( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tconst halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\tconst s = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\tconst s = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromUnitVectors( vFrom, vTo ) {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tlet r = vFrom.dot( vTo ) + 1;\n\n\t\tif ( r < Number.EPSILON ) {\n\n\t\t\t// vFrom and vTo point in opposite directions\n\n\t\t\tr = 0;\n\n\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\tthis._y = vFrom.x;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = r;\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\tthis._z = vFrom.y;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\tthis._w = r;\n\n\t\t}\n\n\t\treturn this.normalize();\n\n\t}\n\n\tangleTo( q ) {\n\n\t\treturn 2 * Math.acos( Math.abs( clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t}\n\n\trotateTowards( q, step ) {\n\n\t\tconst angle = this.angleTo( q );\n\n\t\tif ( angle === 0 ) return this;\n\n\t\tconst t = Math.min( 1, step / angle );\n\n\t\tthis.slerp( q, t );\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\treturn this.set( 0, 0, 0, 1 );\n\n\t}\n\n\tinvert() {\n\n\t\t// quaternion is assumed to have unit length\n\n\t\treturn this.conjugate();\n\n\t}\n\n\tconjugate() {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t}\n\n\tnormalize() {\n\n\t\tlet l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t}\n\n\tpremultiply( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t}\n\n\tmultiplyQuaternions( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tconst qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tconst qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerp( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tconst x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\tconst s = 1 - t;\n\t\t\tthis._w = s * w + t * this._w;\n\t\t\tthis._x = s * x + t * this._x;\n\t\t\tthis._y = s * y + t * this._y;\n\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\tthis.normalize();\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\tconst halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tconst ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tslerpQuaternions( qa, qb, t ) {\n\n\t\treturn this.copy( qa ).slerp( qb, t );\n\n\t}\n\n\trandom() {\n\n\t\t// Derived from http://planning.cs.uiuc.edu/node198.html\n\t\t// Note, this source uses w, x, y, z ordering,\n\t\t// so we swap the order below.\n\n\t\tconst u1 = Math.random();\n\t\tconst sqrt1u1 = Math.sqrt( 1 - u1 );\n\t\tconst sqrtu1 = Math.sqrt( u1 );\n\n\t\tconst u2 = 2 * Math.PI * Math.random();\n\n\t\tconst u3 = 2 * Math.PI * Math.random();\n\n\t\treturn this.set(\n\t\t\tsqrt1u1 * Math.cos( u2 ),\n\t\t\tsqrtu1 * Math.sin( u3 ),\n\t\t\tsqrtu1 * Math.cos( u3 ),\n\t\t\tsqrt1u1 * Math.sin( u2 ),\n\t\t);\n\n\t}\n\n\tequals( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis._x = attribute.getX( index );\n\t\tthis._y = attribute.getY( index );\n\t\tthis._z = attribute.getZ( index );\n\t\tthis._w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.toArray();\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._w;\n\n\t}\n\n}\n\nclass Vector3 {\n\n\tconstructor( x = 0, y = 0, z = 0 ) {\n\n\t\tVector3.prototype.isVector3 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t}\n\n\tset( x, y, z ) {\n\n\t\tif ( z === undefined ) z = this.z; // sprite.scale.set(x,y)\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyVectors( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyEuler( euler ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromEuler( euler ) );\n\n\t}\n\n\tapplyAxisAngle( axis, angle ) {\n\n\t\treturn this.applyQuaternion( _quaternion$4.setFromAxisAngle( axis, angle ) );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\treturn this.applyMatrix3( m ).normalize();\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tconst w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t// quaternion q is assumed to have unit length\n\n\t\tconst vx = this.x, vy = this.y, vz = this.z;\n\t\tconst qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// t = 2 * cross( q.xyz, v );\n\t\tconst tx = 2 * ( qy * vz - qz * vy );\n\t\tconst ty = 2 * ( qz * vx - qx * vz );\n\t\tconst tz = 2 * ( qx * vy - qy * vx );\n\n\t\t// v + q.w * t + cross( q.xyz, t );\n\t\tthis.x = vx + qw * tx + qy * tz - qz * ty;\n\t\tthis.y = vy + qw * ty + qz * tx - qx * tz;\n\t\tthis.z = vz + qw * tz + qx * ty - qy * tx;\n\n\t\treturn this;\n\n\t}\n\n\tproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t}\n\n\tunproject( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tconst x = this.x, y = this.y, z = this.z;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = Math.trunc( this.x );\n\t\tthis.y = Math.trunc( this.y );\n\t\tthis.z = Math.trunc( this.z );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t}\n\n\t// TODO lengthSquared?\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.crossVectors( this, v );\n\n\t}\n\n\tcrossVectors( a, b ) {\n\n\t\tconst ax = a.x, ay = a.y, az = a.z;\n\t\tconst bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t}\n\n\tprojectOnVector( v ) {\n\n\t\tconst denominator = v.lengthSq();\n\n\t\tif ( denominator === 0 ) return this.set( 0, 0, 0 );\n\n\t\tconst scalar = v.dot( this ) / denominator;\n\n\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t}\n\n\tprojectOnPlane( planeNormal ) {\n\n\t\t_vector$c.copy( this ).projectOnVector( planeNormal );\n\n\t\treturn this.sub( _vector$c );\n\n\t}\n\n\treflect( normal ) {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\treturn this.sub( _vector$c.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t}\n\n\tsetFromSpherical( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t}\n\n\tsetFromSphericalCoords( radius, phi, theta ) {\n\n\t\tconst sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCylindrical( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t}\n\n\tsetFromCylindricalCoords( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixPosition( m ) {\n\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixScale( m ) {\n\n\t\tconst sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tconst sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tconst sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrixColumn( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t}\n\n\tsetFromMatrix3Column( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 3 );\n\n\t}\n\n\tsetFromEuler( e ) {\n\n\t\tthis.x = e._x;\n\t\tthis.y = e._y;\n\t\tthis.z = e._z;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromColor( c ) {\n\n\t\tthis.x = c.r;\n\t\tthis.y = c.g;\n\t\tthis.z = c.b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\trandomDirection() {\n\n\t\t// Derived from https://mathworld.wolfram.com/SpherePointPicking.html\n\n\t\tconst u = ( Math.random() - 0.5 ) * 2;\n\t\tconst t = Math.random() * Math.PI * 2;\n\t\tconst f = Math.sqrt( 1 - u ** 2 );\n\n\t\tthis.x = f * Math.cos( t );\n\t\tthis.y = f * Math.sin( t );\n\t\tthis.z = u;\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\n\t}\n\n}\n\nconst _vector$c = /*@__PURE__*/ new Vector3();\nconst _quaternion$4 = /*@__PURE__*/ new Quaternion();\n\nclass Box3 {\n\n\tconstructor( min = new Vector3( + Infinity, + Infinity, + Infinity ), max = new Vector3( - Infinity, - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox3 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromArray( array ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = array.length; i < il; i += 3 ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromArray( array, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromBufferAttribute( attribute ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = attribute.count; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( _vector$b.fromBufferAttribute( attribute, i ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$b.copy( size ).multiplyScalar( 0.5 );\n\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromObject( object, precise = false ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object, precise );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\texpandByObject( object, precise = false ) {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tobject.updateWorldMatrix( false, false );\n\n\t\tconst geometry = object.geometry;\n\n\t\tif ( geometry !== undefined ) {\n\n\t\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\t\t// precise AABB computation based on vertex data requires at least a position attribute.\n\t\t\t// instancing isn't supported so far and uses the normal (conservative) code path.\n\n\t\t\tif ( precise === true && positionAttribute !== undefined && object.isInstancedMesh !== true ) {\n\n\t\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\tif ( object.isMesh === true ) {\n\n\t\t\t\t\t\tobject.getVertexPosition( i, _vector$b );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_vector$b.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_vector$b.applyMatrix4( object.matrixWorld );\n\t\t\t\t\tthis.expandByPoint( _vector$b );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( object.boundingBox !== undefined ) {\n\n\t\t\t\t\t// object-level bounding box\n\n\t\t\t\t\tif ( object.boundingBox === null ) {\n\n\t\t\t\t\t\tobject.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( object.boundingBox );\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// geometry-level bounding box\n\n\t\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t\t}\n\n\t\t\t\t\t_box$4.copy( geometry.boundingBox );\n\n\t\t\t\t}\n\n\t\t\t\t_box$4.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.union( _box$4 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tthis.expandByObject( children[ i ], precise );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\t// Find the point on the AABB closest to the sphere center.\n\t\tthis.clampPoint( sphere.center, _vector$b );\n\n\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\treturn _vector$b.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tlet min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t}\n\n\tintersectsTriangle( triangle ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// compute box center and extents\n\t\tthis.getCenter( _center );\n\t\t_extents.subVectors( this.max, _center );\n\n\t\t// translate triangle to aabb origin\n\t\t_v0$2.subVectors( triangle.a, _center );\n\t\t_v1$7.subVectors( triangle.b, _center );\n\t\t_v2$4.subVectors( triangle.c, _center );\n\n\t\t// compute edge vectors for triangle\n\t\t_f0.subVectors( _v1$7, _v0$2 );\n\t\t_f1.subVectors( _v2$4, _v1$7 );\n\t\t_f2.subVectors( _v0$2, _v2$4 );\n\n\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\tlet axes = [\n\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// test 3 face normals from the aabb\n\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\tif ( ! satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents ) ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\t// finally testing the face normal of the triangle\n\t\t// use already existing triangle edge vectors here\n\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\treturn satForAxes( axes, _v0$2, _v1$7, _v2$4, _extents );\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$b ).distanceTo( point );\n\n\t}\n\n\tgetBoundingSphere( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\ttarget.makeEmpty();\n\n\t\t} else {\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$b ).length() * 0.5;\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\t// transform of empty box is an empty box.\n\t\tif ( this.isEmpty() ) return this;\n\n\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\tthis.setFromPoints( _points );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _points = [\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3(),\n\t/*@__PURE__*/ new Vector3()\n];\n\nconst _vector$b = /*@__PURE__*/ new Vector3();\n\nconst _box$4 = /*@__PURE__*/ new Box3();\n\n// triangle centered vertices\n\nconst _v0$2 = /*@__PURE__*/ new Vector3();\nconst _v1$7 = /*@__PURE__*/ new Vector3();\nconst _v2$4 = /*@__PURE__*/ new Vector3();\n\n// triangle edge vectors\n\nconst _f0 = /*@__PURE__*/ new Vector3();\nconst _f1 = /*@__PURE__*/ new Vector3();\nconst _f2 = /*@__PURE__*/ new Vector3();\n\nconst _center = /*@__PURE__*/ new Vector3();\nconst _extents = /*@__PURE__*/ new Vector3();\nconst _triangleNormal = /*@__PURE__*/ new Vector3();\nconst _testAxis = /*@__PURE__*/ new Vector3();\n\nfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\tfor ( let i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t_testAxis.fromArray( axes, i );\n\t\t// project the aabb onto the separating axis\n\t\tconst r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t// project all 3 vertices of the triangle onto the separating axis\n\t\tconst p0 = v0.dot( _testAxis );\n\t\tconst p1 = v1.dot( _testAxis );\n\t\tconst p2 = v2.dot( _testAxis );\n\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t// the axis is separating and we can exit\n\t\t\treturn false;\n\n\t\t}\n\n\t}\n\n\treturn true;\n\n}\n\nconst _box$3 = /*@__PURE__*/ new Box3();\nconst _v1$6 = /*@__PURE__*/ new Vector3();\nconst _v2$3 = /*@__PURE__*/ new Vector3();\n\nclass Sphere {\n\n\tconstructor( center = new Vector3(), radius = - 1 ) {\n\n\t\tthis.center = center;\n\t\tthis.radius = radius;\n\n\t}\n\n\tset( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points, optionalCenter ) {\n\n\t\tconst center = this.center;\n\n\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\tcenter.copy( optionalCenter );\n\n\t\t} else {\n\n\t\t\t_box$3.setFromPoints( points ).getCenter( center );\n\n\t\t}\n\n\t\tlet maxRadiusSq = 0;\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t}\n\n\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\treturn ( this.radius < 0 );\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.center.set( 0, 0, 0 );\n\t\tthis.radius = - 1;\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\tconst deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\ttarget.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\ttarget.sub( this.center ).normalize();\n\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\tgetBoundingBox( target ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\t// Empty sphere produces empty bounding box\n\t\t\ttarget.makeEmpty();\n\t\t\treturn target;\n\n\t\t}\n\n\t\ttarget.set( this.center, this.center );\n\t\ttarget.expandByScalar( this.radius );\n\n\t\treturn target;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.center.copy( point );\n\n\t\t\tthis.radius = 0;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t_v1$6.subVectors( point, this.center );\n\n\t\tconst lengthSq = _v1$6.lengthSq();\n\n\t\tif ( lengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t// calculate the minimal sphere\n\n\t\t\tconst length = Math.sqrt( lengthSq );\n\n\t\t\tconst delta = ( length - this.radius ) * 0.5;\n\n\t\t\tthis.center.addScaledVector( _v1$6, delta / length );\n\n\t\t\tthis.radius += delta;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tunion( sphere ) {\n\n\t\tif ( sphere.isEmpty() ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.isEmpty() ) {\n\n\t\t\tthis.copy( sphere );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( this.center.equals( sphere.center ) === true ) {\n\n\t\t\t this.radius = Math.max( this.radius, sphere.radius );\n\n\t\t} else {\n\n\t\t\t_v2$3.subVectors( sphere.center, this.center ).setLength( sphere.radius );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).add( _v2$3 ) );\n\n\t\t\tthis.expandByPoint( _v1$6.copy( sphere.center ).sub( _v2$3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$a = /*@__PURE__*/ new Vector3();\nconst _segCenter = /*@__PURE__*/ new Vector3();\nconst _segDir = /*@__PURE__*/ new Vector3();\nconst _diff = /*@__PURE__*/ new Vector3();\n\nconst _edge1 = /*@__PURE__*/ new Vector3();\nconst _edge2 = /*@__PURE__*/ new Vector3();\nconst _normal$1 = /*@__PURE__*/ new Vector3();\n\nclass Ray {\n\n\tconstructor( origin = new Vector3(), direction = new Vector3( 0, 0, - 1 ) ) {\n\n\t\tthis.origin = origin;\n\t\tthis.direction = direction;\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, t );\n\n\t}\n\n\tlookAt( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t}\n\n\trecast( t ) {\n\n\t\tthis.origin.copy( this.at( t, _vector$a ) );\n\n\t\treturn this;\n\n\t}\n\n\tclosestPointToPoint( point, target ) {\n\n\t\ttarget.subVectors( point, this.origin );\n\n\t\tconst directionDistance = target.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn target.copy( this.origin );\n\n\t\t}\n\n\t\treturn target.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t}\n\n\tdistanceSqToPoint( point ) {\n\n\t\tconst directionDistance = _vector$a.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t// point behind the ray\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t}\n\n\t\t_vector$a.copy( this.origin ).addScaledVector( this.direction, directionDistance );\n\n\t\treturn _vector$a.distanceToSquared( point );\n\n\t}\n\n\tdistanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t// It returns the min distance between the ray and the segment\n\t\t// defined by v0 and v1\n\t\t// It can also set two optional targets :\n\t\t// - The closest point on the ray\n\t\t// - The closest point on the segment\n\n\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\tconst segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\tconst a01 = - this.direction.dot( _segDir );\n\t\tconst b0 = _diff.dot( this.direction );\n\t\tconst b1 = - _diff.dot( _segDir );\n\t\tconst c = _diff.lengthSq();\n\t\tconst det = Math.abs( 1 - a01 * a01 );\n\t\tlet s0, s1, sqrDist, extDet;\n\n\t\tif ( det > 0 ) {\n\n\t\t\t// The ray and segment are not parallel.\n\n\t\t\ts0 = a01 * b1 - b0;\n\t\t\ts1 = a01 * b0 - b1;\n\t\t\textDet = segExtent * det;\n\n\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 5\n\n\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t// region 4\n\n\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t// region 3\n\n\t\t\t\t\ts0 = 0;\n\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// region 2\n\n\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Ray and segment are parallel.\n\n\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t}\n\n\t\tif ( optionalPointOnRay ) {\n\n\t\t\toptionalPointOnRay.copy( this.origin ).addScaledVector( this.direction, s0 );\n\n\t\t}\n\n\t\tif ( optionalPointOnSegment ) {\n\n\t\t\toptionalPointOnSegment.copy( _segCenter ).addScaledVector( _segDir, s1 );\n\n\t\t}\n\n\t\treturn sqrDist;\n\n\t}\n\n\tintersectSphere( sphere, target ) {\n\n\t\t_vector$a.subVectors( sphere.center, this.origin );\n\t\tconst tca = _vector$a.dot( this.direction );\n\t\tconst d2 = _vector$a.dot( _vector$a ) - tca * tca;\n\t\tconst radius2 = sphere.radius * sphere.radius;\n\n\t\tif ( d2 > radius2 ) return null;\n\n\t\tconst thc = Math.sqrt( radius2 - d2 );\n\n\t\t// t0 = first intersect point - entrance on front of sphere\n\t\tconst t0 = tca - thc;\n\n\t\t// t1 = second intersect point - exit point on back of sphere\n\t\tconst t1 = tca + thc;\n\n\t\t// test to see if t1 is behind the ray - if so, return null\n\t\tif ( t1 < 0 ) return null;\n\n\t\t// test to see if t0 is behind the ray:\n\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t// in order to always return an intersect point that is in front of the ray.\n\t\tif ( t0 < 0 ) return this.at( t1, target );\n\n\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\treturn this.at( t0, target );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t}\n\n\tdistanceToPlane( plane ) {\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t}\n\n\tintersectPlane( plane, target ) {\n\n\t\tconst t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, target );\n\n\t}\n\n\tintersectsPlane( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tconst distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tconst denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t}\n\n\tintersectBox( box, target ) {\n\n\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tconst invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tconst origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\tif ( tymin > tmin || isNaN( tmin ) ) tmin = tymin;\n\n\t\tif ( tymax < tmax || isNaN( tmax ) ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn this.intersectBox( box, _vector$a ) !== null;\n\n\t}\n\n\tintersectTriangle( a, b, c, backfaceCulling, target ) {\n\n\t\t// Compute the offset origin, edges, and normal.\n\n\t\t// from https://github.com/pmjoniak/GeometricTools/blob/master/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t_edge1.subVectors( b, a );\n\t\t_edge2.subVectors( c, a );\n\t\t_normal$1.crossVectors( _edge1, _edge2 );\n\n\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\tlet DdN = this.direction.dot( _normal$1 );\n\t\tlet sign;\n\n\t\tif ( DdN > 0 ) {\n\n\t\t\tif ( backfaceCulling ) return null;\n\t\t\tsign = 1;\n\n\t\t} else if ( DdN < 0 ) {\n\n\t\t\tsign = - 1;\n\t\t\tDdN = - DdN;\n\n\t\t} else {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t_diff.subVectors( this.origin, a );\n\t\tconst DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t// b1 < 0, no intersection\n\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t// b2 < 0, no intersection\n\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// b1+b2 > 1, no intersection\n\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Line intersects triangle, check if ray does.\n\t\tconst QdN = - sign * _diff.dot( _normal$1 );\n\n\t\t// t < 0, no intersection\n\t\tif ( QdN < 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\t// Ray intersects triangle.\n\t\treturn this.at( QdN / DdN, target );\n\n\t}\n\n\tapplyMatrix4( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t}\n\n\tequals( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass Matrix4 {\n\n\tconstructor( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tMatrix4.prototype.isMatrix4 = true;\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( n11 !== undefined ) {\n\n\t\t\tthis.set( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 );\n\n\t\t}\n\n\t}\n\n\tset( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t}\n\n\tidentity() {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t}\n\n\tcopy( m ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t}\n\n\tcopyPosition( m ) {\n\n\t\tconst te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t}\n\n\tsetFromMatrix3( m ) {\n\n\t\tconst me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ], 0,\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ], 0,\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ], 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractBasis( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmakeBasis( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\textractRotation( m ) {\n\n\t\t// this method does not support reflection matrices\n\n\t\tconst te = this.elements;\n\t\tconst me = m.elements;\n\n\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn( m, 0 ).length();\n\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn( m, 1 ).length();\n\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn( m, 2 ).length();\n\n\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromEuler( euler ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = euler.x, y = euler.y, z = euler.z;\n\t\tconst a = Math.cos( x ), b = Math.sin( x );\n\t\tconst c = Math.cos( y ), d = Math.sin( y );\n\t\tconst e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tconst ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tconst ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tconst ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// bottom row\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// last column\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationFromQuaternion( q ) {\n\n\t\treturn this.compose( _zero, q, _one );\n\n\t}\n\n\tlookAt( eye, target, up ) {\n\n\t\tconst te = this.elements;\n\n\t\t_z.subVectors( eye, target );\n\n\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t// eye and target are in the same position\n\n\t\t\t_z.z = 1;\n\n\t\t}\n\n\t\t_z.normalize();\n\t\t_x.crossVectors( up, _z );\n\n\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t// up and z are parallel\n\n\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t_z.x += 0.0001;\n\n\t\t\t} else {\n\n\t\t\t\t_z.z += 0.0001;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t}\n\n\t\t_x.normalize();\n\t\t_y.crossVectors( _z, _x );\n\n\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t}\n\n\tpremultiply( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t}\n\n\tmultiplyMatrices( a, b ) {\n\n\t\tconst ae = a.elements;\n\t\tconst be = b.elements;\n\t\tconst te = this.elements;\n\n\t\tconst a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tconst a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tconst a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tconst a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tconst b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tconst b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tconst b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tconst b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tconst te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t}\n\n\tdeterminant() {\n\n\t\tconst te = this.elements;\n\n\t\tconst n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tconst n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tconst n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tconst n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t}\n\n\ttranspose() {\n\n\t\tconst te = this.elements;\n\t\tlet tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t}\n\n\tsetPosition( x, y, z ) {\n\n\t\tconst te = this.elements;\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tte[ 12 ] = x.x;\n\t\t\tte[ 13 ] = x.y;\n\t\t\tte[ 14 ] = x.z;\n\n\t\t} else {\n\n\t\t\tte[ 12 ] = x;\n\t\t\tte[ 13 ] = y;\n\t\t\tte[ 14 ] = z;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tinvert() {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tconst te = this.elements,\n\n\t\t\tn11 = te[ 0 ], n21 = te[ 1 ], n31 = te[ 2 ], n41 = te[ 3 ],\n\t\t\tn12 = te[ 4 ], n22 = te[ 5 ], n32 = te[ 6 ], n42 = te[ 7 ],\n\t\t\tn13 = te[ 8 ], n23 = te[ 9 ], n33 = te[ 10 ], n43 = te[ 11 ],\n\t\t\tn14 = te[ 12 ], n24 = te[ 13 ], n34 = te[ 14 ], n44 = te[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) return this.set( 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 );\n\n\t\tconst detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t}\n\n\tscale( v ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxScaleOnAxis() {\n\n\t\tconst te = this.elements;\n\n\t\tconst scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tconst scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tconst scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t}\n\n\tmakeTranslation( x, y, z ) {\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x.x,\n\t\t\t\t0, 1, 0, x.y,\n\t\t\t\t0, 0, 1, x.z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t} else {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationX( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationY( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationZ( theta ) {\n\n\t\tconst c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeRotationAxis( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tconst c = Math.cos( angle );\n\t\tconst s = Math.sin( angle );\n\t\tconst t = 1 - c;\n\t\tconst x = axis.x, y = axis.y, z = axis.z;\n\t\tconst tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeScale( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tmakeShear( xy, xz, yx, yz, zx, zy ) {\n\n\t\tthis.set(\n\n\t\t\t1, yx, zx, 0,\n\t\t\txy, 1, zy, 0,\n\t\t\txz, yz, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t}\n\n\tcompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tconst x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\tconst x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\tconst xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tconst yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tconst wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tconst sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\tte[ 3 ] = 0;\n\n\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\tte[ 7 ] = 0;\n\n\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\tte[ 11 ] = 0;\n\n\t\tte[ 12 ] = position.x;\n\t\tte[ 13 ] = position.y;\n\t\tte[ 14 ] = position.z;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tdecompose( position, quaternion, scale ) {\n\n\t\tconst te = this.elements;\n\n\t\tlet sx = _v1$5.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\tconst sy = _v1$5.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\tconst sz = _v1$5.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t// if determine is negative, we need to invert one scale\n\t\tconst det = this.determinant();\n\t\tif ( det < 0 ) sx = - sx;\n\n\t\tposition.x = te[ 12 ];\n\t\tposition.y = te[ 13 ];\n\t\tposition.z = te[ 14 ];\n\n\t\t// scale the rotation part\n\t\t_m1$2.copy( this );\n\n\t\tconst invSX = 1 / sx;\n\t\tconst invSY = 1 / sy;\n\t\tconst invSZ = 1 / sz;\n\n\t\t_m1$2.elements[ 0 ] *= invSX;\n\t\t_m1$2.elements[ 1 ] *= invSX;\n\t\t_m1$2.elements[ 2 ] *= invSX;\n\n\t\t_m1$2.elements[ 4 ] *= invSY;\n\t\t_m1$2.elements[ 5 ] *= invSY;\n\t\t_m1$2.elements[ 6 ] *= invSY;\n\n\t\t_m1$2.elements[ 8 ] *= invSZ;\n\t\t_m1$2.elements[ 9 ] *= invSZ;\n\t\t_m1$2.elements[ 10 ] *= invSZ;\n\n\t\tquaternion.setFromRotationMatrix( _m1$2 );\n\n\t\tscale.x = sx;\n\t\tscale.y = sy;\n\t\tscale.z = sz;\n\n\t\treturn this;\n\n\t}\n\n\tmakePerspective( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst x = 2 * near / ( right - left );\n\t\tconst y = 2 * near / ( top - bottom );\n\n\t\tconst a = ( right + left ) / ( right - left );\n\t\tconst b = ( top + bottom ) / ( top - bottom );\n\n\t\tlet c, d;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tc = - ( far + near ) / ( far - near );\n\t\t\td = ( - 2 * far * near ) / ( far - near );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tc = - far / ( far - near );\n\t\t\td = ( - far * near ) / ( far - near );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makePerspective(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a; \tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b; \tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c; \tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t}\n\n\tmakeOrthographic( left, right, top, bottom, near, far, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst te = this.elements;\n\t\tconst w = 1.0 / ( right - left );\n\t\tconst h = 1.0 / ( top - bottom );\n\t\tconst p = 1.0 / ( far - near );\n\n\t\tconst x = ( right + left ) * w;\n\t\tconst y = ( top + bottom ) * h;\n\n\t\tlet z, zInv;\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tz = ( far + near ) * p;\n\t\t\tzInv = - 2 * p;\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tz = near * p;\n\t\t\tzInv = - 1 * p;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Matrix4.makeOrthographic(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\t\tte[ 8 ] = 0; \t\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0; \t\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0; \t\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0; \t\tte[ 6 ] = 0;\t\tte[ 10 ] = zInv;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0; \t\tte[ 7 ] = 0;\t\tte[ 11 ] = 0;\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t}\n\n\tequals( matrix ) {\n\n\t\tconst te = this.elements;\n\t\tconst me = matrix.elements;\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tfor ( let i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n}\n\nconst _v1$5 = /*@__PURE__*/ new Vector3();\nconst _m1$2 = /*@__PURE__*/ new Matrix4();\nconst _zero = /*@__PURE__*/ new Vector3( 0, 0, 0 );\nconst _one = /*@__PURE__*/ new Vector3( 1, 1, 1 );\nconst _x = /*@__PURE__*/ new Vector3();\nconst _y = /*@__PURE__*/ new Vector3();\nconst _z = /*@__PURE__*/ new Vector3();\n\nconst _matrix$1 = /*@__PURE__*/ new Matrix4();\nconst _quaternion$3 = /*@__PURE__*/ new Quaternion();\n\nclass Euler {\n\n\tconstructor( x = 0, y = 0, z = 0, order = Euler.DEFAULT_ORDER ) {\n\n\t\tthis.isEuler = true;\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t}\n\n\tget x() {\n\n\t\treturn this._x;\n\n\t}\n\n\tset x( value ) {\n\n\t\tthis._x = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget y() {\n\n\t\treturn this._y;\n\n\t}\n\n\tset y( value ) {\n\n\t\tthis._y = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget z() {\n\n\t\treturn this._z;\n\n\t}\n\n\tset z( value ) {\n\n\t\tthis._z = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tget order() {\n\n\t\treturn this._order;\n\n\t}\n\n\tset order( value ) {\n\n\t\tthis._order = value;\n\t\tthis._onChangeCallback();\n\n\t}\n\n\tset( x, y, z, order = this._order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t}\n\n\tcopy( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromRotationMatrix( m, order = this._order, update = true ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tconst te = m.elements;\n\t\tconst m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tconst m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tconst m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tswitch ( order ) {\n\n\t\t\tcase 'XYZ':\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXZ':\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXY':\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYX':\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZX':\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZY':\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update === true ) this._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\tsetFromQuaternion( q, order, update ) {\n\n\t\t_matrix$1.makeRotationFromQuaternion( q );\n\n\t\treturn this.setFromRotationMatrix( _matrix$1, order, update );\n\n\t}\n\n\tsetFromVector3( v, order = this._order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order );\n\n\t}\n\n\treorder( newOrder ) {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t_quaternion$3.setFromEuler( this );\n\n\t\treturn this.setFromQuaternion( _quaternion$3, newOrder );\n\n\t}\n\n\tequals( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t}\n\n\tfromArray( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis._onChangeCallback();\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t}\n\n\t_onChange( callback ) {\n\n\t\tthis._onChangeCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\t_onChangeCallback() {}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this._x;\n\t\tyield this._y;\n\t\tyield this._z;\n\t\tyield this._order;\n\n\t}\n\n}\n\nEuler.DEFAULT_ORDER = 'XYZ';\n\nclass Layers {\n\n\tconstructor() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tset( channel ) {\n\n\t\tthis.mask = ( 1 << channel | 0 ) >>> 0;\n\n\t}\n\n\tenable( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t}\n\n\tenableAll() {\n\n\t\tthis.mask = 0xffffffff | 0;\n\n\t}\n\n\ttoggle( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t}\n\n\tdisable( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t}\n\n\tdisableAll() {\n\n\t\tthis.mask = 0;\n\n\t}\n\n\ttest( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n\tisEnabled( channel ) {\n\n\t\treturn ( this.mask & ( 1 << channel | 0 ) ) !== 0;\n\n\t}\n\n}\n\nlet _object3DId = 0;\n\nconst _v1$4 = /*@__PURE__*/ new Vector3();\nconst _q1 = /*@__PURE__*/ new Quaternion();\nconst _m1$1 = /*@__PURE__*/ new Matrix4();\nconst _target = /*@__PURE__*/ new Vector3();\n\nconst _position$3 = /*@__PURE__*/ new Vector3();\nconst _scale$2 = /*@__PURE__*/ new Vector3();\nconst _quaternion$2 = /*@__PURE__*/ new Quaternion();\n\nconst _xAxis = /*@__PURE__*/ new Vector3( 1, 0, 0 );\nconst _yAxis = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nconst _zAxis = /*@__PURE__*/ new Vector3( 0, 0, 1 );\n\nconst _addedEvent = { type: 'added' };\nconst _removedEvent = { type: 'removed' };\n\nclass Object3D extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isObject3D = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DEFAULT_UP.clone();\n\n\t\tconst position = new Vector3();\n\t\tconst rotation = new Euler();\n\t\tconst quaternion = new Quaternion();\n\t\tconst scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DEFAULT_MATRIX_AUTO_UPDATE;\n\n\t\tthis.matrixWorldAutoUpdate = Object3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE; // checked by the renderer\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.animations = [];\n\n\t\tthis.userData = {};\n\n\t}\n\n\tonBeforeShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonAfterShadow( /* renderer, object, camera, shadowCamera, geometry, depthMaterial, group */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tonAfterRender( /* renderer, scene, camera, geometry, material, group */ ) {}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tthis.matrix.premultiply( matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t}\n\n\tsetRotationFromAxisAngle( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t}\n\n\tsetRotationFromEuler( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t}\n\n\tsetRotationFromMatrix( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t}\n\n\tsetRotationFromQuaternion( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t}\n\n\trotateOnAxis( axis, angle ) {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.multiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateOnWorldAxis( axis, angle ) {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\tthis.quaternion.premultiply( _q1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t}\n\n\trotateY( angle ) {\n\n\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t}\n\n\ttranslateOnAxis( axis, distance ) {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\t_v1$4.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\tthis.position.add( _v1$4.multiplyScalar( distance ) );\n\n\t\treturn this;\n\n\t}\n\n\ttranslateX( distance ) {\n\n\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t}\n\n\ttranslateY( distance ) {\n\n\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t}\n\n\ttranslateZ( distance ) {\n\n\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t}\n\n\tlocalToWorld( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t}\n\n\tworldToLocal( vector ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn vector.applyMatrix4( _m1$1.copy( this.matrixWorld ).invert() );\n\n\t}\n\n\tlookAt( x, y, z ) {\n\n\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\tif ( x.isVector3 ) {\n\n\t\t\t_target.copy( x );\n\n\t\t} else {\n\n\t\t\t_target.set( x, y, z );\n\n\t\t}\n\n\t\tconst parent = this.parent;\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_position$3.setFromMatrixPosition( this.matrixWorld );\n\n\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t_m1$1.lookAt( _position$3, _target, this.up );\n\n\t\t} else {\n\n\t\t\t_m1$1.lookAt( _target, _position$3, this.up );\n\n\t\t}\n\n\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\tif ( parent ) {\n\n\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\tthis.quaternion.premultiply( _q1.invert() );\n\n\t\t}\n\n\t}\n\n\tadd( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object can\\'t be added as a child of itself.', object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object && object.isObject3D ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tthis.children.push( object );\n\n\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Object3D.add: object not an instance of THREE.Object3D.', object );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( let i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremoveFromParent() {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tparent.remove( this );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclear() {\n\n\t\treturn this.remove( ... this.children );\n\n\t}\n\n\tattach( object ) {\n\n\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t// Note: This method does not support scene graphs having non-uniformly-scaled nodes(s)\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\t_m1$1.copy( this.matrixWorld ).invert();\n\n\t\tif ( object.parent !== null ) {\n\n\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t}\n\n\t\tobject.applyMatrix4( _m1$1 );\n\n\t\tthis.add( object );\n\n\t\tobject.updateWorldMatrix( false, true );\n\n\t\treturn this;\n\n\t}\n\n\tgetObjectById( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t}\n\n\tgetObjectByName( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t}\n\n\tgetObjectByProperty( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( let i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tconst child = this.children[ i ];\n\t\t\tconst object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tgetObjectsByProperty( name, value, result = [] ) {\n\n\t\tif ( this[ name ] === value ) result.push( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].getObjectsByProperty( name, value, result );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tgetWorldPosition( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t}\n\n\tgetWorldQuaternion( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, target, _scale$2 );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldScale( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tthis.matrixWorld.decompose( _position$3, _quaternion$2, target );\n\n\t\treturn target;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\tthis.updateWorldMatrix( true, false );\n\n\t\tconst e = this.matrixWorld.elements;\n\n\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t}\n\n\traycast( /* raycaster, intersects */ ) {}\n\n\ttraverse( callback ) {\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseVisible( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t}\n\n\ttraverseAncestors( callback ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tconst children = this.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tconst child = children[ i ];\n\n\t\t\tif ( child.matrixWorldAutoUpdate === true || force === true ) {\n\n\t\t\t\tchild.updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tconst parent = this.parent;\n\n\t\tif ( updateParents === true && parent !== null && parent.matrixWorldAutoUpdate === true ) {\n\n\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t}\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.parent === null ) {\n\n\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t} else {\n\n\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t}\n\n\t\t// update children\n\n\t\tif ( updateChildren === true ) {\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tconst child = children[ i ];\n\n\t\t\t\tif ( child.matrixWorldAutoUpdate === true ) {\n\n\t\t\t\t\tchild.updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tconst output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {},\n\t\t\t\tshapes: {},\n\t\t\t\tskeletons: {},\n\t\t\t\tanimations: {},\n\t\t\t\tnodes: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tconst object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( this.frustumCulled === false ) object.frustumCulled = false;\n\t\tif ( this.renderOrder !== 0 ) object.renderOrder = this.renderOrder;\n\t\tif ( Object.keys( this.userData ).length > 0 ) object.userData = this.userData;\n\n\t\tobject.layers = this.layers.mask;\n\t\tobject.matrix = this.matrix.toArray();\n\t\tobject.up = this.up.toArray();\n\n\t\tif ( this.matrixAutoUpdate === false ) object.matrixAutoUpdate = false;\n\n\t\t// object specific properties\n\n\t\tif ( this.isInstancedMesh ) {\n\n\t\t\tobject.type = 'InstancedMesh';\n\t\t\tobject.count = this.count;\n\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\tif ( this.instanceColor !== null ) object.instanceColor = this.instanceColor.toJSON();\n\n\t\t}\n\n\t\tif ( this.isBatchedMesh ) {\n\n\t\t\tobject.type = 'BatchedMesh';\n\t\t\tobject.perObjectFrustumCulled = this.perObjectFrustumCulled;\n\t\t\tobject.sortObjects = this.sortObjects;\n\n\t\t\tobject.drawRanges = this._drawRanges;\n\t\t\tobject.reservedRanges = this._reservedRanges;\n\n\t\t\tobject.visibility = this._visibility;\n\t\t\tobject.active = this._active;\n\t\t\tobject.bounds = this._bounds.map( bound => ( {\n\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\tboxMin: bound.box.min.toArray(),\n\t\t\t\tboxMax: bound.box.max.toArray(),\n\n\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\tsphereRadius: bound.sphere.radius,\n\t\t\t\tsphereCenter: bound.sphere.center.toArray()\n\t\t\t} ) );\n\n\t\t\tobject.maxGeometryCount = this._maxGeometryCount;\n\t\t\tobject.maxVertexCount = this._maxVertexCount;\n\t\t\tobject.maxIndexCount = this._maxIndexCount;\n\n\t\t\tobject.geometryInitialized = this._geometryInitialized;\n\t\t\tobject.geometryCount = this._geometryCount;\n\n\t\t\tobject.matricesTexture = this._matricesTexture.toJSON( meta );\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tobject.boundingSphere = {\n\t\t\t\t\tcenter: object.boundingSphere.center.toArray(),\n\t\t\t\t\tradius: object.boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tobject.boundingBox = {\n\t\t\t\t\tmin: object.boundingBox.min.toArray(),\n\t\t\t\t\tmax: object.boundingBox.max.toArray()\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.isScene ) {\n\n\t\t\tif ( this.background ) {\n\n\t\t\t\tif ( this.background.isColor ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON();\n\n\t\t\t\t} else if ( this.background.isTexture ) {\n\n\t\t\t\t\tobject.background = this.background.toJSON( meta ).uuid;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.environment && this.environment.isTexture && this.environment.isRenderTargetTexture !== true ) {\n\n\t\t\t\tobject.environment = this.environment.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t} else if ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tconst shape = shapes[ i ];\n\n\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.isSkinnedMesh ) {\n\n\t\t\tobject.bindMode = this.bindMode;\n\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\tif ( this.skeleton !== undefined ) {\n\n\t\t\t\tserialize( meta.skeletons, this.skeleton );\n\n\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tconst uuids = [];\n\n\t\t\t\tfor ( let i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( let i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.animations.length > 0 ) {\n\n\t\t\tobject.animations = [];\n\n\t\t\tfor ( let i = 0; i < this.animations.length; i ++ ) {\n\n\t\t\t\tconst animation = this.animations[ i ];\n\n\t\t\t\tobject.animations.push( serialize( meta.animations, animation ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst geometries = extractFromCache( meta.geometries );\n\t\t\tconst materials = extractFromCache( meta.materials );\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\t\t\tconst shapes = extractFromCache( meta.shapes );\n\t\t\tconst skeletons = extractFromCache( meta.skeletons );\n\t\t\tconst animations = extractFromCache( meta.animations );\n\t\t\tconst nodes = extractFromCache( meta.nodes );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\t\t\tif ( shapes.length > 0 ) output.shapes = shapes;\n\t\t\tif ( skeletons.length > 0 ) output.skeletons = skeletons;\n\t\t\tif ( animations.length > 0 ) output.animations = animations;\n\t\t\tif ( nodes.length > 0 ) output.nodes = nodes;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t}\n\n\tclone( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t}\n\n\tcopy( source, recursive = true ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.rotation.order = source.rotation.order;\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\tthis.matrixWorldAutoUpdate = source.matrixWorldAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.animations = source.animations.slice();\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( let i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tconst child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nObject3D.DEFAULT_UP = /*@__PURE__*/ new Vector3( 0, 1, 0 );\nObject3D.DEFAULT_MATRIX_AUTO_UPDATE = true;\nObject3D.DEFAULT_MATRIX_WORLD_AUTO_UPDATE = true;\n\nconst _v0$1 = /*@__PURE__*/ new Vector3();\nconst _v1$3 = /*@__PURE__*/ new Vector3();\nconst _v2$2 = /*@__PURE__*/ new Vector3();\nconst _v3$1 = /*@__PURE__*/ new Vector3();\n\nconst _vab = /*@__PURE__*/ new Vector3();\nconst _vac = /*@__PURE__*/ new Vector3();\nconst _vbc = /*@__PURE__*/ new Vector3();\nconst _vap = /*@__PURE__*/ new Vector3();\nconst _vbp = /*@__PURE__*/ new Vector3();\nconst _vcp = /*@__PURE__*/ new Vector3();\n\nlet warnedGetUV = false;\n\nclass Triangle {\n\n\tconstructor( a = new Vector3(), b = new Vector3(), c = new Vector3() ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t}\n\n\tstatic getNormal( a, b, c, target ) {\n\n\t\ttarget.subVectors( c, b );\n\t\t_v0$1.subVectors( a, b );\n\t\ttarget.cross( _v0$1 );\n\n\t\tconst targetLengthSq = target.lengthSq();\n\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t}\n\n\t\treturn target.set( 0, 0, 0 );\n\n\t}\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tstatic getBarycoord( point, a, b, c, target ) {\n\n\t\t_v0$1.subVectors( c, a );\n\t\t_v1$3.subVectors( b, a );\n\t\t_v2$2.subVectors( point, a );\n\n\t\tconst dot00 = _v0$1.dot( _v0$1 );\n\t\tconst dot01 = _v0$1.dot( _v1$3 );\n\t\tconst dot02 = _v0$1.dot( _v2$2 );\n\t\tconst dot11 = _v1$3.dot( _v1$3 );\n\t\tconst dot12 = _v1$3.dot( _v2$2 );\n\n\t\tconst denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t// collinear or singular triangle\n\t\tif ( denom === 0 ) {\n\n\t\t\t// arbitrary location outside of triangle?\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t}\n\n\t\tconst invDenom = 1 / denom;\n\t\tconst u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\tconst v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t// barycentric coordinates must always sum to 1\n\t\treturn target.set( 1 - u - v, v, u );\n\n\t}\n\n\tstatic containsPoint( point, a, b, c ) {\n\n\t\tthis.getBarycoord( point, a, b, c, _v3$1 );\n\n\t\treturn ( _v3$1.x >= 0 ) && ( _v3$1.y >= 0 ) && ( ( _v3$1.x + _v3$1.y ) <= 1 );\n\n\t}\n\n\tstatic getUV( point, p1, p2, p3, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn this.getInterpolation( point, p1, p2, p3, uv1, uv2, uv3, target );\n\n\t}\n\n\tstatic getInterpolation( point, p1, p2, p3, v1, v2, v3, target ) {\n\n\t\tthis.getBarycoord( point, p1, p2, p3, _v3$1 );\n\n\t\ttarget.setScalar( 0 );\n\t\ttarget.addScaledVector( v1, _v3$1.x );\n\t\ttarget.addScaledVector( v2, _v3$1.y );\n\t\ttarget.addScaledVector( v3, _v3$1.z );\n\n\t\treturn target;\n\n\t}\n\n\tstatic isFrontFacing( a, b, c, direction ) {\n\n\t\t_v0$1.subVectors( c, b );\n\t\t_v1$3.subVectors( a, b );\n\n\t\t// strictly front facing\n\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t}\n\n\tset( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPointsAndIndices( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromAttributeAndIndices( attribute, i0, i1, i2 ) {\n\n\t\tthis.a.fromBufferAttribute( attribute, i0 );\n\t\tthis.b.fromBufferAttribute( attribute, i1 );\n\t\tthis.c.fromBufferAttribute( attribute, i2 );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t}\n\n\tgetArea() {\n\n\t\t_v0$1.subVectors( this.c, this.b );\n\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t}\n\n\tgetMidpoint( target ) {\n\n\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t}\n\n\tgetNormal( target ) {\n\n\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t}\n\n\tgetPlane( target ) {\n\n\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t}\n\n\tgetBarycoord( point, target ) {\n\n\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t}\n\n\tgetUV( point, uv1, uv2, uv3, target ) { // @deprecated, r151\n\n\t\tif ( warnedGetUV === false ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation().' );\n\n\t\t\twarnedGetUV = true;\n\n\t\t}\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t}\n\n\tgetInterpolation( point, v1, v2, v3, target ) {\n\n\t\treturn Triangle.getInterpolation( point, this.a, this.b, this.c, v1, v2, v3, target );\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t}\n\n\tisFrontFacing( direction ) {\n\n\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsTriangle( this );\n\n\t}\n\n\tclosestPointToPoint( p, target ) {\n\n\t\tconst a = this.a, b = this.b, c = this.c;\n\t\tlet v, w;\n\n\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t_vab.subVectors( b, a );\n\t\t_vac.subVectors( c, a );\n\t\t_vap.subVectors( p, a );\n\t\tconst d1 = _vab.dot( _vap );\n\t\tconst d2 = _vac.dot( _vap );\n\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\treturn target.copy( a );\n\n\t\t}\n\n\t\t_vbp.subVectors( p, b );\n\t\tconst d3 = _vab.dot( _vbp );\n\t\tconst d4 = _vac.dot( _vbp );\n\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\treturn target.copy( b );\n\n\t\t}\n\n\t\tconst vc = d1 * d4 - d3 * d2;\n\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t}\n\n\t\t_vcp.subVectors( p, c );\n\t\tconst d5 = _vab.dot( _vcp );\n\t\tconst d6 = _vac.dot( _vcp );\n\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\treturn target.copy( c );\n\n\t\t}\n\n\t\tconst vb = d5 * d2 - d1 * d6;\n\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t}\n\n\t\tconst va = d3 * d6 - d5 * d4;\n\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t_vbc.subVectors( c, b );\n\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t}\n\n\t\t// face region\n\t\tconst denom = 1 / ( va + vb + vc );\n\t\t// u = va * denom\n\t\tv = vb * denom;\n\t\tw = vc * denom;\n\n\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t}\n\n\tequals( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n}\n\nconst _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nconst _hslA = { h: 0, s: 0, l: 0 };\nconst _hslB = { h: 0, s: 0, l: 0 };\n\nfunction hue2rgb( p, q, t ) {\n\n\tif ( t < 0 ) t += 1;\n\tif ( t > 1 ) t -= 1;\n\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\tif ( t < 1 / 2 ) return q;\n\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\treturn p;\n\n}\n\nclass Color {\n\n\tconstructor( r, g, b ) {\n\n\t\tthis.isColor = true;\n\n\t\tthis.r = 1;\n\t\tthis.g = 1;\n\t\tthis.b = 1;\n\n\t\treturn this.set( r, g, b );\n\n\t}\n\n\tset( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\n\t\t\tconst value = r;\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.setRGB( r, g, b );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetHex( hex, colorSpace = SRGBColorSpace ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetRGB( r, g, b, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetHSL( h, s, l, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\th = euclideanModulo( h, 1 );\n\t\ts = clamp( s, 0, 1 );\n\t\tl = clamp( l, 0, 1 );\n\n\t\tif ( s === 0 ) {\n\n\t\t\tthis.r = this.g = this.b = l;\n\n\t\t} else {\n\n\t\t\tconst p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\tconst q = ( 2 * l ) - p;\n\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t}\n\n\t\tColorManagement.toWorkingColorSpace( this, colorSpace );\n\n\t\treturn this;\n\n\t}\n\n\tsetStyle( style, colorSpace = SRGBColorSpace ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tlet m;\n\n\t\tif ( m = /^(\\w+)\\(([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tlet color;\n\t\t\tconst name = m[ 1 ];\n\t\t\tconst components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 1 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 2 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tMath.min( 255, parseInt( color[ 3 ], 10 ) ) / 255,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setRGB(\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 1 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 2 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tMath.min( 100, parseInt( color[ 3 ], 10 ) ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*,\\s*(\\d*\\.?\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\n\t\t\t\t\t\thandleAlpha( color[ 4 ] );\n\n\t\t\t\t\t\treturn this.setHSL(\n\t\t\t\t\t\t\tparseFloat( color[ 1 ] ) / 360,\n\t\t\t\t\t\t\tparseFloat( color[ 2 ] ) / 100,\n\t\t\t\t\t\t\tparseFloat( color[ 3 ] ) / 100,\n\t\t\t\t\t\t\tcolorSpace\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Unknown color model ' + style );\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f\\d]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tconst hex = m[ 1 ];\n\t\t\tconst size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\treturn this.setRGB(\n\t\t\t\t\tparseInt( hex.charAt( 0 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 1 ), 16 ) / 15,\n\t\t\t\t\tparseInt( hex.charAt( 2 ), 16 ) / 15,\n\t\t\t\t\tcolorSpace\n\t\t\t\t);\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\treturn this.setHex( parseInt( hex, 16 ), colorSpace );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Invalid hex color ' + style );\n\n\t\t\t}\n\n\t\t} else if ( style && style.length > 0 ) {\n\n\t\t\treturn this.setColorName( style, colorSpace );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetColorName( style, colorSpace = SRGBColorSpace ) {\n\n\t\t// color keywords\n\t\tconst hex = _colorKeywords[ style.toLowerCase() ];\n\n\t\tif ( hex !== undefined ) {\n\n\t\t\t// red\n\t\t\tthis.setHex( hex, colorSpace );\n\n\t\t} else {\n\n\t\t\t// unknown color\n\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t}\n\n\tcopy( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t}\n\n\tcopySRGBToLinear( color ) {\n\n\t\tthis.r = SRGBToLinear( color.r );\n\t\tthis.g = SRGBToLinear( color.g );\n\t\tthis.b = SRGBToLinear( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tcopyLinearToSRGB( color ) {\n\n\t\tthis.r = LinearToSRGB( color.r );\n\t\tthis.g = LinearToSRGB( color.g );\n\t\tthis.b = LinearToSRGB( color.b );\n\n\t\treturn this;\n\n\t}\n\n\tconvertSRGBToLinear() {\n\n\t\tthis.copySRGBToLinear( this );\n\n\t\treturn this;\n\n\t}\n\n\tconvertLinearToSRGB() {\n\n\t\tthis.copyLinearToSRGB( this );\n\n\t\treturn this;\n\n\t}\n\n\tgetHex( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\treturn Math.round( clamp( _color.r * 255, 0, 255 ) ) * 65536 + Math.round( clamp( _color.g * 255, 0, 255 ) ) * 256 + Math.round( clamp( _color.b * 255, 0, 255 ) );\n\n\t}\n\n\tgetHexString( colorSpace = SRGBColorSpace ) {\n\n\t\treturn ( '000000' + this.getHex( colorSpace ).toString( 16 ) ).slice( - 6 );\n\n\t}\n\n\tgetHSL( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tconst max = Math.max( r, g, b );\n\t\tconst min = Math.min( r, g, b );\n\n\t\tlet hue, saturation;\n\t\tconst lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tconst delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\ttarget.h = hue;\n\t\ttarget.s = saturation;\n\t\ttarget.l = lightness;\n\n\t\treturn target;\n\n\t}\n\n\tgetRGB( target, colorSpace = ColorManagement.workingColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\ttarget.r = _color.r;\n\t\ttarget.g = _color.g;\n\t\ttarget.b = _color.b;\n\n\t\treturn target;\n\n\t}\n\n\tgetStyle( colorSpace = SRGBColorSpace ) {\n\n\t\tColorManagement.fromWorkingColorSpace( _color.copy( this ), colorSpace );\n\n\t\tconst r = _color.r, g = _color.g, b = _color.b;\n\n\t\tif ( colorSpace !== SRGBColorSpace ) {\n\n\t\t\t// Requires CSS Color Module Level 4 (https://www.w3.org/TR/css-color-4/).\n\t\t\treturn `color(${ colorSpace } ${ r.toFixed( 3 ) } ${ g.toFixed( 3 ) } ${ b.toFixed( 3 ) })`;\n\n\t\t}\n\n\t\treturn `rgb(${ Math.round( r * 255 ) },${ Math.round( g * 255 ) },${ Math.round( b * 255 ) })`;\n\n\t}\n\n\toffsetHSL( h, s, l ) {\n\n\t\tthis.getHSL( _hslA );\n\n\t\treturn this.setHSL( _hslA.h + h, _hslA.s + s, _hslA.l + l );\n\n\t}\n\n\tadd( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t}\n\n\taddColors( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t}\n\n\tlerp( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpColors( color1, color2, alpha ) {\n\n\t\tthis.r = color1.r + ( color2.r - color1.r ) * alpha;\n\t\tthis.g = color1.g + ( color2.g - color1.g ) * alpha;\n\t\tthis.b = color1.b + ( color2.b - color1.b ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpHSL( color, alpha ) {\n\n\t\tthis.getHSL( _hslA );\n\t\tcolor.getHSL( _hslB );\n\n\t\tconst h = lerp( _hslA.h, _hslB.h, alpha );\n\t\tconst s = lerp( _hslA.s, _hslB.s, alpha );\n\t\tconst l = lerp( _hslA.l, _hslB.l, alpha );\n\n\t\tthis.setHSL( h, s, l );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\tthis.r = v.x;\n\t\tthis.g = v.y;\n\t\tthis.b = v.z;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst r = this.r, g = this.g, b = this.b;\n\t\tconst e = m.elements;\n\n\t\tthis.r = e[ 0 ] * r + e[ 3 ] * g + e[ 6 ] * b;\n\t\tthis.g = e[ 1 ] * r + e[ 4 ] * g + e[ 7 ] * b;\n\t\tthis.b = e[ 2 ] * r + e[ 5 ] * g + e[ 8 ] * b;\n\n\t\treturn this;\n\n\t}\n\n\tequals( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.r = attribute.getX( index );\n\t\tthis.g = attribute.getY( index );\n\t\tthis.b = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.getHex();\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.r;\n\t\tyield this.g;\n\t\tyield this.b;\n\n\t}\n\n}\n\nconst _color = /*@__PURE__*/ new Color();\n\nColor.NAMES = _colorKeywords;\n\nlet _materialId = 0;\n\nclass Material extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isMaterial = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _materialId ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.vertexColors = false;\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\t\tthis.alphaHash = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\t\tthis.blendColor = new Color( 0, 0, 0 );\n\t\tthis.blendAlpha = 0;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaToCoverage = false;\n\t\tthis.premultipliedAlpha = false;\n\t\tthis.forceSinglePass = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\n\t\tthis._alphaTest = 0;\n\n\t}\n\n\tget alphaTest() {\n\n\t\treturn this._alphaTest;\n\n\t}\n\n\tset alphaTest( value ) {\n\n\t\tif ( this._alphaTest > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._alphaTest = value;\n\n\t}\n\n\tonBuild( /* shaderobject, renderer */ ) {}\n\n\tonBeforeRender( /* renderer, scene, camera, geometry, object, group */ ) {}\n\n\tonBeforeCompile( /* shaderobject, renderer */ ) {}\n\n\tcustomProgramCacheKey() {\n\n\t\treturn this.onBeforeCompile.toString();\n\n\t}\n\n\tsetValues( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( const key in values ) {\n\n\t\t\tconst newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: parameter '${ key }' has value of undefined.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( `THREE.Material: '${ key }' is not a property of THREE.${ this.type }.` );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRootObject ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.sheen !== undefined ) data.sheen = this.sheen;\n\t\tif ( this.sheenColor && this.sheenColor.isColor ) data.sheenColor = this.sheenColor.getHex();\n\t\tif ( this.sheenRoughness !== undefined ) data.sheenRoughness = this.sheenRoughness;\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.specularIntensity !== undefined ) data.specularIntensity = this.specularIntensity;\n\t\tif ( this.specularColor && this.specularColor.isColor ) data.specularColor = this.specularColor.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearcoat !== undefined ) data.clearcoat = this.clearcoat;\n\t\tif ( this.clearcoatRoughness !== undefined ) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\tif ( this.clearcoatMap && this.clearcoatMap.isTexture ) {\n\n\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture ) {\n\n\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.iridescence !== undefined ) data.iridescence = this.iridescence;\n\t\tif ( this.iridescenceIOR !== undefined ) data.iridescenceIOR = this.iridescenceIOR;\n\t\tif ( this.iridescenceThicknessRange !== undefined ) data.iridescenceThicknessRange = this.iridescenceThicknessRange;\n\n\t\tif ( this.iridescenceMap && this.iridescenceMap.isTexture ) {\n\n\t\t\tdata.iridescenceMap = this.iridescenceMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.iridescenceThicknessMap && this.iridescenceThicknessMap.isTexture ) {\n\n\t\t\tdata.iridescenceThicknessMap = this.iridescenceThicknessMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.anisotropy !== undefined ) data.anisotropy = this.anisotropy;\n\t\tif ( this.anisotropyRotation !== undefined ) data.anisotropyRotation = this.anisotropyRotation;\n\n\t\tif ( this.anisotropyMap && this.anisotropyMap.isTexture ) {\n\n\t\t\tdata.anisotropyMap = this.anisotropyMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.matcap && this.matcap.isTexture ) data.matcap = this.matcap.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\n\t\tif ( this.lightMap && this.lightMap.isTexture ) {\n\n\t\t\tdata.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t}\n\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\t\tif ( this.specularIntensityMap && this.specularIntensityMap.isTexture ) data.specularIntensityMap = this.specularIntensityMap.toJSON( meta ).uuid;\n\t\tif ( this.specularColorMap && this.specularColorMap.isTexture ) data.specularColorMap = this.specularColorMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\n\t\t\tif ( this.combine !== undefined ) data.combine = this.combine;\n\n\t\t}\n\n\t\tif ( this.envMapIntensity !== undefined ) data.envMapIntensity = this.envMapIntensity;\n\t\tif ( this.reflectivity !== undefined ) data.reflectivity = this.reflectivity;\n\t\tif ( this.refractionRatio !== undefined ) data.refractionRatio = this.refractionRatio;\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.transmission !== undefined ) data.transmission = this.transmission;\n\t\tif ( this.transmissionMap && this.transmissionMap.isTexture ) data.transmissionMap = this.transmissionMap.toJSON( meta ).uuid;\n\t\tif ( this.thickness !== undefined ) data.thickness = this.thickness;\n\t\tif ( this.thicknessMap && this.thicknessMap.isTexture ) data.thicknessMap = this.thicknessMap.toJSON( meta ).uuid;\n\t\tif ( this.attenuationDistance !== undefined && this.attenuationDistance !== Infinity ) data.attenuationDistance = this.attenuationDistance;\n\t\tif ( this.attenuationColor !== undefined ) data.attenuationColor = this.attenuationColor.getHex();\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.shadowSide !== null ) data.shadowSide = this.shadowSide;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors === true ) data.vertexColors = true;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = true;\n\n\t\tif ( this.blendSrc !== SrcAlphaFactor ) data.blendSrc = this.blendSrc;\n\t\tif ( this.blendDst !== OneMinusSrcAlphaFactor ) data.blendDst = this.blendDst;\n\t\tif ( this.blendEquation !== AddEquation ) data.blendEquation = this.blendEquation;\n\t\tif ( this.blendSrcAlpha !== null ) data.blendSrcAlpha = this.blendSrcAlpha;\n\t\tif ( this.blendDstAlpha !== null ) data.blendDstAlpha = this.blendDstAlpha;\n\t\tif ( this.blendEquationAlpha !== null ) data.blendEquationAlpha = this.blendEquationAlpha;\n\t\tif ( this.blendColor && this.blendColor.isColor ) data.blendColor = this.blendColor.getHex();\n\t\tif ( this.blendAlpha !== 0 ) data.blendAlpha = this.blendAlpha;\n\n\t\tif ( this.depthFunc !== LessEqualDepth ) data.depthFunc = this.depthFunc;\n\t\tif ( this.depthTest === false ) data.depthTest = this.depthTest;\n\t\tif ( this.depthWrite === false ) data.depthWrite = this.depthWrite;\n\t\tif ( this.colorWrite === false ) data.colorWrite = this.colorWrite;\n\n\t\tif ( this.stencilWriteMask !== 0xff ) data.stencilWriteMask = this.stencilWriteMask;\n\t\tif ( this.stencilFunc !== AlwaysStencilFunc ) data.stencilFunc = this.stencilFunc;\n\t\tif ( this.stencilRef !== 0 ) data.stencilRef = this.stencilRef;\n\t\tif ( this.stencilFuncMask !== 0xff ) data.stencilFuncMask = this.stencilFuncMask;\n\t\tif ( this.stencilFail !== KeepStencilOp ) data.stencilFail = this.stencilFail;\n\t\tif ( this.stencilZFail !== KeepStencilOp ) data.stencilZFail = this.stencilZFail;\n\t\tif ( this.stencilZPass !== KeepStencilOp ) data.stencilZPass = this.stencilZPass;\n\t\tif ( this.stencilWrite === true ) data.stencilWrite = this.stencilWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== undefined && this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.polygonOffset === true ) data.polygonOffset = true;\n\t\tif ( this.polygonOffsetFactor !== 0 ) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\tif ( this.polygonOffsetUnits !== 0 ) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\n\t\tif ( this.linewidth !== undefined && this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.alphaHash === true ) data.alphaHash = true;\n\t\tif ( this.alphaToCoverage === true ) data.alphaToCoverage = true;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = true;\n\t\tif ( this.forceSinglePass === true ) data.forceSinglePass = true;\n\n\t\tif ( this.wireframe === true ) data.wireframe = true;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.flatShading === true ) data.flatShading = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\n\t\tif ( this.toneMapped === false ) data.toneMapped = false;\n\n\t\tif ( this.fog === false ) data.fog = false;\n\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tconst values = [];\n\n\t\t\tfor ( const key in cache ) {\n\n\t\t\t\tconst data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tconst textures = extractFromCache( meta.textures );\n\t\t\tconst images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\tthis.blendColor.copy( source.blendColor );\n\t\tthis.blendAlpha = source.blendAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\tthis.stencilFunc = source.stencilFunc;\n\t\tthis.stencilRef = source.stencilRef;\n\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\tthis.stencilFail = source.stencilFail;\n\t\tthis.stencilZFail = source.stencilZFail;\n\t\tthis.stencilZPass = source.stencilZPass;\n\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\tconst srcPlanes = source.clippingPlanes;\n\t\tlet dstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tconst n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\t\tthis.clipIntersection = source.clipIntersection;\n\t\tthis.clipShadows = source.clipShadows;\n\n\t\tthis.shadowSide = source.shadowSide;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.alphaHash = source.alphaHash;\n\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\tthis.forceSinglePass = source.forceSinglePass;\n\n\t\tthis.visible = source.visible;\n\n\t\tthis.toneMapped = source.toneMapped;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n}\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// Fast Half Float Conversions, http://www.fox-toolkit.org/ftp/fasthalffloatconversion.pdf\n\nconst _tables = /*@__PURE__*/ _generateTables();\n\nfunction _generateTables() {\n\n\t// float32 to float16 helpers\n\n\tconst buffer = new ArrayBuffer( 4 );\n\tconst floatView = new Float32Array( buffer );\n\tconst uint32View = new Uint32Array( buffer );\n\n\tconst baseTable = new Uint32Array( 512 );\n\tconst shiftTable = new Uint32Array( 512 );\n\n\tfor ( let i = 0; i < 256; ++ i ) {\n\n\t\tconst e = i - 127;\n\n\t\t// very small number (0, -0)\n\n\t\tif ( e < - 27 ) {\n\n\t\t\tbaseTable[ i ] = 0x0000;\n\t\t\tbaseTable[ i | 0x100 ] = 0x8000;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// small number (denorm)\n\n\t\t} else if ( e < - 14 ) {\n\n\t\t\tbaseTable[ i ] = 0x0400 >> ( - e - 14 );\n\t\t\tbaseTable[ i | 0x100 ] = ( 0x0400 >> ( - e - 14 ) ) | 0x8000;\n\t\t\tshiftTable[ i ] = - e - 1;\n\t\t\tshiftTable[ i | 0x100 ] = - e - 1;\n\n\t\t\t// normal number\n\n\t\t} else if ( e <= 15 ) {\n\n\t\t\tbaseTable[ i ] = ( e + 15 ) << 10;\n\t\t\tbaseTable[ i | 0x100 ] = ( ( e + 15 ) << 10 ) | 0x8000;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t\t// large number (Infinity, -Infinity)\n\n\t\t} else if ( e < 128 ) {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 24;\n\t\t\tshiftTable[ i | 0x100 ] = 24;\n\n\t\t\t// stay (NaN, Infinity, -Infinity)\n\n\t\t} else {\n\n\t\t\tbaseTable[ i ] = 0x7c00;\n\t\t\tbaseTable[ i | 0x100 ] = 0xfc00;\n\t\t\tshiftTable[ i ] = 13;\n\t\t\tshiftTable[ i | 0x100 ] = 13;\n\n\t\t}\n\n\t}\n\n\t// float16 to float32 helpers\n\n\tconst mantissaTable = new Uint32Array( 2048 );\n\tconst exponentTable = new Uint32Array( 64 );\n\tconst offsetTable = new Uint32Array( 64 );\n\n\tfor ( let i = 1; i < 1024; ++ i ) {\n\n\t\tlet m = i << 13; // zero pad mantissa bits\n\t\tlet e = 0; // zero exponent\n\n\t\t// normalized\n\t\twhile ( ( m & 0x00800000 ) === 0 ) {\n\n\t\t\tm <<= 1;\n\t\t\te -= 0x00800000; // decrement exponent\n\n\t\t}\n\n\t\tm &= ~ 0x00800000; // clear leading 1 bit\n\t\te += 0x38800000; // adjust bias\n\n\t\tmantissaTable[ i ] = m | e;\n\n\t}\n\n\tfor ( let i = 1024; i < 2048; ++ i ) {\n\n\t\tmantissaTable[ i ] = 0x38000000 + ( ( i - 1024 ) << 13 );\n\n\t}\n\n\tfor ( let i = 1; i < 31; ++ i ) {\n\n\t\texponentTable[ i ] = i << 23;\n\n\t}\n\n\texponentTable[ 31 ] = 0x47800000;\n\texponentTable[ 32 ] = 0x80000000;\n\n\tfor ( let i = 33; i < 63; ++ i ) {\n\n\t\texponentTable[ i ] = 0x80000000 + ( ( i - 32 ) << 23 );\n\n\t}\n\n\texponentTable[ 63 ] = 0xc7800000;\n\n\tfor ( let i = 1; i < 64; ++ i ) {\n\n\t\tif ( i !== 32 ) {\n\n\t\t\toffsetTable[ i ] = 1024;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tfloatView: floatView,\n\t\tuint32View: uint32View,\n\t\tbaseTable: baseTable,\n\t\tshiftTable: shiftTable,\n\t\tmantissaTable: mantissaTable,\n\t\texponentTable: exponentTable,\n\t\toffsetTable: offsetTable\n\t};\n\n}\n\n// float32 to float16\n\nfunction toHalfFloat( val ) {\n\n\tif ( Math.abs( val ) > 65504 ) console.warn( 'THREE.DataUtils.toHalfFloat(): Value out of range.' );\n\n\tval = clamp( val, - 65504, 65504 );\n\n\t_tables.floatView[ 0 ] = val;\n\tconst f = _tables.uint32View[ 0 ];\n\tconst e = ( f >> 23 ) & 0x1ff;\n\treturn _tables.baseTable[ e ] + ( ( f & 0x007fffff ) >> _tables.shiftTable[ e ] );\n\n}\n\n// float16 to float32\n\nfunction fromHalfFloat( val ) {\n\n\tconst m = val >> 10;\n\t_tables.uint32View[ 0 ] = _tables.mantissaTable[ _tables.offsetTable[ m ] + ( val & 0x3ff ) ] + _tables.exponentTable[ m ];\n\treturn _tables.floatView[ 0 ];\n\n}\n\nconst DataUtils = {\n\ttoHalfFloat: toHalfFloat,\n\tfromHalfFloat: fromHalfFloat,\n};\n\nconst _vector$9 = /*@__PURE__*/ new Vector3();\nconst _vector2$1 = /*@__PURE__*/ new Vector2();\n\nclass BufferAttribute {\n\n\tconstructor( array, itemSize, normalized = false ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.isBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\t\tthis.gpuType = FloatType;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.BufferAttribute: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.usage = source.usage;\n\t\tthis.gpuType = source.gpuType;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( let i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcopyArray( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tif ( this.itemSize === 2 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector2$1.fromBufferAttribute( this, i );\n\t\t\t\t_vector2$1.applyMatrix3( m );\n\n\t\t\t\tthis.setXY( i, _vector2$1.x, _vector2$1.y );\n\n\t\t\t}\n\n\t\t} else if ( this.itemSize === 3 ) {\n\n\t\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$9.fromBufferAttribute( this, i );\n\t\t\t\t_vector$9.applyMatrix3( m );\n\n\t\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$9.fromBufferAttribute( this, i );\n\n\t\t\t_vector$9.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$9.x, _vector$9.y, _vector$9.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\t// Matching BufferAttribute constructor, do not normalize the array.\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index, component ) {\n\n\t\tlet value = this.array[ index * this.itemSize + component ];\n\n\t\tif ( this.normalized ) value = denormalize( value, this.array );\n\n\t\treturn value;\n\n\t}\n\n\tsetComponent( index, component, value ) {\n\n\t\tif ( this.normalized ) value = normalize( value, this.array );\n\n\t\tthis.array[ index * this.itemSize + component ] = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.array[ index * this.itemSize ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.array[ index * this.itemSize + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.array[ index * this.itemSize + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.array[ index * this.itemSize + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\titemSize: this.itemSize,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tarray: Array.from( this.array ),\n\t\t\tnormalized: this.normalized\n\t\t};\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( this.usage !== StaticDrawUsage ) data.usage = this.usage;\n\n\t\treturn data;\n\n\t}\n\n}\n\n//\n\nclass Int8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Int32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Uint32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float16BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Uint16Array( array ), itemSize, normalized );\n\n\t\tthis.isFloat16BufferAttribute = true;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = fromHalfFloat( this.array[ index * this.itemSize ] );\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.array[ index * this.itemSize ] = toHalfFloat( x );\n\n\t\treturn this;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = fromHalfFloat( this.array[ index * this.itemSize + 1 ] );\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.array[ index * this.itemSize + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = fromHalfFloat( this.array[ index * this.itemSize + 2 ] );\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.array[ index * this.itemSize + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = fromHalfFloat( this.array[ index * this.itemSize + 3 ] );\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.array[ index * this.itemSize + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.array[ index + 0 ] = toHalfFloat( x );\n\t\tthis.array[ index + 1 ] = toHalfFloat( y );\n\t\tthis.array[ index + 2 ] = toHalfFloat( z );\n\t\tthis.array[ index + 3 ] = toHalfFloat( w );\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nclass Float32BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nclass Float64BufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized ) {\n\n\t\tsuper( new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n}\n\nlet _id$2 = 0;\n\nconst _m1 = /*@__PURE__*/ new Matrix4();\nconst _obj = /*@__PURE__*/ new Object3D();\nconst _offset = /*@__PURE__*/ new Vector3();\nconst _box$2 = /*@__PURE__*/ new Box3();\nconst _boxMorphTargets = /*@__PURE__*/ new Box3();\nconst _vector$8 = /*@__PURE__*/ new Vector3();\n\nclass BufferGeometry extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBufferGeometry = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id$2 ++ } );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tgetIndex() {\n\n\t\treturn this.index;\n\n\t}\n\n\tsetIndex( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayNeedsUint32( index ) ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetAttribute( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t}\n\n\tsetAttribute( name, attribute ) {\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t}\n\n\tdeleteAttribute( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t}\n\n\thasAttribute( name ) {\n\n\t\treturn this.attributes[ name ] !== undefined;\n\n\t}\n\n\taddGroup( start, count, materialIndex = 0 ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex\n\n\t\t} );\n\n\t}\n\n\tclearGroups() {\n\n\t\tthis.groups = [];\n\n\t}\n\n\tsetDrawRange( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tconst position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tposition.applyMatrix4( matrix );\n\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tconst normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormal.applyNormalMatrix( normalMatrix );\n\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tconst tangent = this.attributes.tangent;\n\n\t\tif ( tangent !== undefined ) {\n\n\t\t\ttangent.transformDirection( matrix );\n\n\t\t\ttangent.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyQuaternion( q ) {\n\n\t\t_m1.makeRotationFromQuaternion( q );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateX( angle ) {\n\n\t\t// rotate geometry around world x-axis\n\n\t\t_m1.makeRotationX( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateY( angle ) {\n\n\t\t// rotate geometry around world y-axis\n\n\t\t_m1.makeRotationY( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\trotateZ( angle ) {\n\n\t\t// rotate geometry around world z-axis\n\n\t\t_m1.makeRotationZ( angle );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( x, y, z ) {\n\n\t\t// translate geometry\n\n\t\t_m1.makeTranslation( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tscale( x, y, z ) {\n\n\t\t// scale geometry\n\n\t\t_m1.makeScale( x, y, z );\n\n\t\tthis.applyMatrix4( _m1 );\n\n\t\treturn this;\n\n\t}\n\n\tlookAt( vector ) {\n\n\t\t_obj.lookAt( vector );\n\n\t\t_obj.updateMatrix();\n\n\t\tthis.applyMatrix4( _obj.matrix );\n\n\t\treturn this;\n\n\t}\n\n\tcenter() {\n\n\t\tthis.computeBoundingBox();\n\n\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tconst position = [];\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tconst point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingBox.set(\n\t\t\t\tnew Vector3( - Infinity, - Infinity, - Infinity ),\n\t\t\t\tnew Vector3( + Infinity, + Infinity, + Infinity )\n\t\t\t);\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst position = this.attributes.position;\n\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\tif ( position && position.isGLBufferAttribute ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this );\n\n\t\t\tthis.boundingSphere.set( new Vector3(), Infinity );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( position ) {\n\n\t\t\t// first, find the center of the bounding sphere\n\n\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t\t_vector$8.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t_box$2.expandByPoint( _vector$8 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_box$2.getCenter( center );\n\n\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor ( let i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$8.fromBufferAttribute( position, i );\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t}\n\n\t\t\t// process morph attributes if present\n\n\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\tfor ( let i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\tfor ( let j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t_vector$8.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t_vector$8.add( _offset );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$8 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeTangents() {\n\n\t\tconst index = this.index;\n\t\tconst attributes = this.attributes;\n\n\t\t// based on http://www.terathon.com/code/tangent.html\n\t\t// (per vertex tangents)\n\n\t\tif ( index === null ||\n\t\t\t attributes.position === undefined ||\n\t\t\t attributes.normal === undefined ||\n\t\t\t attributes.uv === undefined ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst indices = index.array;\n\t\tconst positions = attributes.position.array;\n\t\tconst normals = attributes.normal.array;\n\t\tconst uvs = attributes.uv.array;\n\n\t\tconst nVertices = positions.length / 3;\n\n\t\tif ( this.hasAttribute( 'tangent' ) === false ) {\n\n\t\t\tthis.setAttribute( 'tangent', new BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\n\n\t\t}\n\n\t\tconst tangents = this.getAttribute( 'tangent' ).array;\n\n\t\tconst tan1 = [], tan2 = [];\n\n\t\tfor ( let i = 0; i < nVertices; i ++ ) {\n\n\t\t\ttan1[ i ] = new Vector3();\n\t\t\ttan2[ i ] = new Vector3();\n\n\t\t}\n\n\t\tconst vA = new Vector3(),\n\t\t\tvB = new Vector3(),\n\t\t\tvC = new Vector3(),\n\n\t\t\tuvA = new Vector2(),\n\t\t\tuvB = new Vector2(),\n\t\t\tuvC = new Vector2(),\n\n\t\t\tsdir = new Vector3(),\n\t\t\ttdir = new Vector3();\n\n\t\tfunction handleTriangle( a, b, c ) {\n\n\t\t\tvA.fromArray( positions, a * 3 );\n\t\t\tvB.fromArray( positions, b * 3 );\n\t\t\tvC.fromArray( positions, c * 3 );\n\n\t\t\tuvA.fromArray( uvs, a * 2 );\n\t\t\tuvB.fromArray( uvs, b * 2 );\n\t\t\tuvC.fromArray( uvs, c * 2 );\n\n\t\t\tvB.sub( vA );\n\t\t\tvC.sub( vA );\n\n\t\t\tuvB.sub( uvA );\n\t\t\tuvC.sub( uvA );\n\n\t\t\tconst r = 1.0 / ( uvB.x * uvC.y - uvC.x * uvB.y );\n\n\t\t\t// silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\tif ( ! isFinite( r ) ) return;\n\n\t\t\tsdir.copy( vB ).multiplyScalar( uvC.y ).addScaledVector( vC, - uvB.y ).multiplyScalar( r );\n\t\t\ttdir.copy( vC ).multiplyScalar( uvB.x ).addScaledVector( vB, - uvC.x ).multiplyScalar( r );\n\n\t\t\ttan1[ a ].add( sdir );\n\t\t\ttan1[ b ].add( sdir );\n\t\t\ttan1[ c ].add( sdir );\n\n\t\t\ttan2[ a ].add( tdir );\n\t\t\ttan2[ b ].add( tdir );\n\t\t\ttan2[ c ].add( tdir );\n\n\t\t}\n\n\t\tlet groups = this.groups;\n\n\t\tif ( groups.length === 0 ) {\n\n\t\t\tgroups = [ {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: indices.length\n\t\t\t} ];\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleTriangle(\n\t\t\t\t\tindices[ j + 0 ],\n\t\t\t\t\tindices[ j + 1 ],\n\t\t\t\t\tindices[ j + 2 ]\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst tmp = new Vector3(), tmp2 = new Vector3();\n\t\tconst n = new Vector3(), n2 = new Vector3();\n\n\t\tfunction handleVertex( v ) {\n\n\t\t\tn.fromArray( normals, v * 3 );\n\t\t\tn2.copy( n );\n\n\t\t\tconst t = tan1[ v ];\n\n\t\t\t// Gram-Schmidt orthogonalize\n\n\t\t\ttmp.copy( t );\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\n\n\t\t\t// Calculate handedness\n\n\t\t\ttmp2.crossVectors( n2, t );\n\t\t\tconst test = tmp2.dot( tan2[ v ] );\n\t\t\tconst w = ( test < 0.0 ) ? - 1.0 : 1.0;\n\n\t\t\ttangents[ v * 4 ] = tmp.x;\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\n\t\t\ttangents[ v * 4 + 3 ] = w;\n\n\t\t}\n\n\t\tfor ( let i = 0, il = groups.length; i < il; ++ i ) {\n\n\t\t\tconst group = groups[ i ];\n\n\t\t\tconst start = group.start;\n\t\t\tconst count = group.count;\n\n\t\t\tfor ( let j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\thandleVertex( indices[ j + 0 ] );\n\t\t\t\thandleVertex( indices[ j + 1 ] );\n\t\t\t\thandleVertex( indices[ j + 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcomputeVertexNormals() {\n\n\t\tconst index = this.index;\n\t\tconst positionAttribute = this.getAttribute( 'position' );\n\n\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\tlet normalAttribute = this.getAttribute( 'normal' );\n\n\t\t\tif ( normalAttribute === undefined ) {\n\n\t\t\t\tnormalAttribute = new BufferAttribute( new Float32Array( positionAttribute.count * 3 ), 3 );\n\t\t\t\tthis.setAttribute( 'normal', normalAttribute );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tfor ( let i = 0, il = normalAttribute.count; i < il; i ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ( i, 0, 0, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tconst nA = new Vector3(), nB = new Vector3(), nC = new Vector3();\n\t\t\tconst cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tfor ( let i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\tconst vA = index.getX( i + 0 );\n\t\t\t\t\tconst vB = index.getX( i + 1 );\n\t\t\t\t\tconst vC = index.getX( i + 2 );\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, vA );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, vB );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, vC );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnA.fromBufferAttribute( normalAttribute, vA );\n\t\t\t\t\tnB.fromBufferAttribute( normalAttribute, vB );\n\t\t\t\t\tnC.fromBufferAttribute( normalAttribute, vC );\n\n\t\t\t\t\tnA.add( cb );\n\t\t\t\t\tnB.add( cb );\n\t\t\t\t\tnC.add( cb );\n\n\t\t\t\t\tnormalAttribute.setXYZ( vA, nA.x, nA.y, nA.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vB, nB.x, nB.y, nB.z );\n\t\t\t\t\tnormalAttribute.setXYZ( vC, nC.x, nC.y, nC.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( let i = 0, il = positionAttribute.count; i < il; i += 3 ) {\n\n\t\t\t\t\tpA.fromBufferAttribute( positionAttribute, i + 0 );\n\t\t\t\t\tpB.fromBufferAttribute( positionAttribute, i + 1 );\n\t\t\t\t\tpC.fromBufferAttribute( positionAttribute, i + 2 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormalAttribute.setXYZ( i + 0, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 1, cb.x, cb.y, cb.z );\n\t\t\t\t\tnormalAttribute.setXYZ( i + 2, cb.x, cb.y, cb.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tnormalAttribute.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tnormalizeNormals() {\n\n\t\tconst normals = this.attributes.normal;\n\n\t\tfor ( let i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t_vector$8.fromBufferAttribute( normals, i );\n\n\t\t\t_vector$8.normalize();\n\n\t\t\tnormals.setXYZ( i, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t}\n\n\t}\n\n\ttoNonIndexed() {\n\n\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\tconst array = attribute.array;\n\t\t\tconst itemSize = attribute.itemSize;\n\t\t\tconst normalized = attribute.normalized;\n\n\t\t\tconst array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tlet index = 0, index2 = 0;\n\n\t\t\tfor ( let i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\tindex = indices[ i ] * attribute.data.stride + attribute.offset;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( array2, itemSize, normalized );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tconst geometry2 = new BufferGeometry();\n\n\t\tconst indices = this.index.array;\n\t\tconst attributes = this.attributes;\n\n\t\t// attributes\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\n\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = this.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst morphArray = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = morphAttribute[ i ];\n\n\t\t\t\tconst newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t}\n\n\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t}\n\n\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = this.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\t\tif ( Object.keys( this.userData ).length > 0 ) data.userData = this.userData;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tconst parameters = this.parameters;\n\n\t\t\tfor ( const key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\t// for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\t\tdata.data = { attributes: {} };\n\n\t\tconst index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t};\n\n\t\t}\n\n\t\tconst attributes = this.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\n\t\t\tdata.data.attributes[ key ] = attribute.toJSON( data.data );\n\n\t\t}\n\n\t\tconst morphAttributes = {};\n\t\tlet hasMorphAttributes = false;\n\n\t\tfor ( const key in this.morphAttributes ) {\n\n\t\t\tconst attributeArray = this.morphAttributes[ key ];\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\tconst attribute = attributeArray[ i ];\n\n\t\t\t\tarray.push( attribute.toJSON( data.data ) );\n\n\t\t\t}\n\n\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\thasMorphAttributes = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( hasMorphAttributes ) {\n\n\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t}\n\n\t\tconst groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tconst boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// used for storing cloned, shared data\n\n\t\tconst data = {};\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tconst index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone( data ) );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tconst attributes = source.attributes;\n\n\t\tfor ( const name in attributes ) {\n\n\t\t\tconst attribute = attributes[ name ];\n\t\t\tthis.setAttribute( name, attribute.clone( data ) );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tconst morphAttributes = source.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = [];\n\t\t\tconst morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( let i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone( data ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t// groups\n\n\t\tconst groups = source.groups;\n\n\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tconst group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tconst boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tconst boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t// user data\n\n\t\tthis.userData = source.userData;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nconst _inverseMatrix$3 = /*@__PURE__*/ new Matrix4();\nconst _ray$3 = /*@__PURE__*/ new Ray();\nconst _sphere$6 = /*@__PURE__*/ new Sphere();\nconst _sphereHitAt = /*@__PURE__*/ new Vector3();\n\nconst _vA$1 = /*@__PURE__*/ new Vector3();\nconst _vB$1 = /*@__PURE__*/ new Vector3();\nconst _vC$1 = /*@__PURE__*/ new Vector3();\n\nconst _tempA = /*@__PURE__*/ new Vector3();\nconst _morphA = /*@__PURE__*/ new Vector3();\n\nconst _uvA$1 = /*@__PURE__*/ new Vector2();\nconst _uvB$1 = /*@__PURE__*/ new Vector2();\nconst _uvC$1 = /*@__PURE__*/ new Vector2();\n\nconst _normalA = /*@__PURE__*/ new Vector3();\nconst _normalB = /*@__PURE__*/ new Vector3();\nconst _normalC = /*@__PURE__*/ new Vector3();\n\nconst _intersectionPoint = /*@__PURE__*/ new Vector3();\nconst _intersectionPointWorld = /*@__PURE__*/ new Vector3();\n\nclass Mesh extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new MeshBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isMesh = true;\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.attributes.position;\n\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\n\t\ttarget.fromBufferAttribute( position, index );\n\n\t\tconst morphInfluences = this.morphTargetInfluences;\n\n\t\tif ( morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\n\t\t\tfor ( let i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tconst influence = morphInfluences[ i ];\n\t\t\t\tconst morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, index );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( target ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ttarget.add( _morphA );\n\n\t\t}\n\n\t\treturn target;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$6.copy( geometry.boundingSphere );\n\t\t_sphere$6.applyMatrix4( matrixWorld );\n\n\t\t// check distance from ray origin to bounding sphere\n\n\t\t_ray$3.copy( raycaster.ray ).recast( raycaster.near );\n\n\t\tif ( _sphere$6.containsPoint( _ray$3.origin ) === false ) {\n\n\t\t\tif ( _ray$3.intersectSphere( _sphere$6, _sphereHitAt ) === null ) return;\n\n\t\t\tif ( _ray$3.origin.distanceToSquared( _sphereHitAt ) > ( raycaster.far - raycaster.near ) ** 2 ) return;\n\n\t\t}\n\n\t\t// convert ray to local space of mesh\n\n\t\t_inverseMatrix$3.copy( matrixWorld ).invert();\n\t\t_ray$3.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$3 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tif ( _ray$3.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$3 );\n\n\t}\n\n\t_computeIntersections( raycaster, intersects, rayLocalSpace ) {\n\n\t\tlet intersection;\n\n\t\tconst geometry = this.geometry;\n\t\tconst material = this.material;\n\n\t\tconst index = geometry.index;\n\t\tconst position = geometry.attributes.position;\n\t\tconst uv = geometry.attributes.uv;\n\t\tconst uv1 = geometry.attributes.uv1;\n\t\tconst normal = geometry.attributes.normal;\n\t\tconst groups = geometry.groups;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\tif ( index !== null ) {\n\n\t\t\t// indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( index.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = index.getX( j );\n\t\t\t\t\t\tconst b = index.getX( j + 1 );\n\t\t\t\t\t\tconst c = index.getX( j + 2 );\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = index.getX( i );\n\t\t\t\t\tconst b = index.getX( i + 1 );\n\t\t\t\t\tconst c = index.getX( i + 2 );\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\t// non-indexed buffer geometry\n\n\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\tfor ( let i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\tconst start = Math.max( group.start, drawRange.start );\n\t\t\t\t\tconst end = Math.min( position.count, Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) ) );\n\n\t\t\t\t\tfor ( let j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\tconst c = j + 2;\n\n\t\t\t\t\t\tintersection = checkGeometryIntersection( this, groupMaterial, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\t\tconst end = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\tfor ( let i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\tconst a = i;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\n\t\t\t\t\tintersection = checkGeometryIntersection( this, material, raycaster, rayLocalSpace, uv, uv1, normal, a, b, c );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\tlet intersect;\n\n\tif ( material.side === BackSide ) {\n\n\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t} else {\n\n\t\tintersect = ray.intersectTriangle( pA, pB, pC, ( material.side === FrontSide ), point );\n\n\t}\n\n\tif ( intersect === null ) return null;\n\n\t_intersectionPointWorld.copy( point );\n\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\tconst distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\treturn {\n\t\tdistance: distance,\n\t\tpoint: _intersectionPointWorld.clone(),\n\t\tobject: object\n\t};\n\n}\n\nfunction checkGeometryIntersection( object, material, raycaster, ray, uv, uv1, normal, a, b, c ) {\n\n\tobject.getVertexPosition( a, _vA$1 );\n\tobject.getVertexPosition( b, _vB$1 );\n\tobject.getVertexPosition( c, _vC$1 );\n\n\tconst intersection = checkIntersection( object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint );\n\n\tif ( intersection ) {\n\n\t\tif ( uv ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv, c );\n\n\t\t\tintersection.uv = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\n\t\t}\n\n\t\tif ( uv1 ) {\n\n\t\t\t_uvA$1.fromBufferAttribute( uv1, a );\n\t\t\t_uvB$1.fromBufferAttribute( uv1, b );\n\t\t\t_uvC$1.fromBufferAttribute( uv1, c );\n\n\t\t\tintersection.uv1 = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() );\n\t\t\tintersection.uv2 = intersection.uv1; // @deprecated, r152\n\n\t\t}\n\n\t\tif ( normal ) {\n\n\t\t\t_normalA.fromBufferAttribute( normal, a );\n\t\t\t_normalB.fromBufferAttribute( normal, b );\n\t\t\t_normalC.fromBufferAttribute( normal, c );\n\n\t\t\tintersection.normal = Triangle.getInterpolation( _intersectionPoint, _vA$1, _vB$1, _vC$1, _normalA, _normalB, _normalC, new Vector3() );\n\n\t\t\tif ( intersection.normal.dot( ray.direction ) > 0 ) {\n\n\t\t\t\tintersection.normal.multiplyScalar( - 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst face = {\n\t\t\ta: a,\n\t\t\tb: b,\n\t\t\tc: c,\n\t\t\tnormal: new Vector3(),\n\t\t\tmaterialIndex: 0\n\t\t};\n\n\t\tTriangle.getNormal( _vA$1, _vB$1, _vC$1, face.normal );\n\n\t\tintersection.face = face;\n\n\t}\n\n\treturn intersection;\n\n}\n\nclass BoxGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'BoxGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\tdepth: depth,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tdepthSegments: depthSegments\n\t\t};\n\n\t\tconst scope = this;\n\n\t\t// segments\n\n\t\twidthSegments = Math.floor( widthSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\t\tdepthSegments = Math.floor( depthSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet numberOfVertices = 0;\n\t\tlet groupStart = 0;\n\n\t\t// build each side of the box geometry\n\n\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\tconst segmentWidth = width / gridX;\n\t\t\tconst segmentHeight = height / gridY;\n\n\t\t\tconst widthHalf = width / 2;\n\t\t\tconst heightHalf = height / 2;\n\t\t\tconst depthHalf = depth / 2;\n\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\n\t\t\tlet vertexCounter = 0;\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst vector = new Vector3();\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\tconst x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t// uvs\n\n\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t// counters\n\n\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\t// 1. you need three indices to draw a single face\n\t\t\t// 2. a single segment consists of two faces\n\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\tconst d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// increase counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t\t// update total number of vertices\n\n\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new BoxGeometry( data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments );\n\n\t}\n\n}\n\n/**\n * Uniform Utilities\n */\n\nfunction cloneUniforms( src ) {\n\n\tconst dst = {};\n\n\tfor ( const u in src ) {\n\n\t\tdst[ u ] = {};\n\n\t\tfor ( const p in src[ u ] ) {\n\n\t\t\tconst property = src[ u ][ p ];\n\n\t\t\tif ( property && ( property.isColor ||\n\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\tproperty.isTexture || property.isQuaternion ) ) {\n\n\t\t\t\tif ( property.isRenderTargetTexture ) {\n\n\t\t\t\t\tconsole.warn( 'UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms().' );\n\t\t\t\t\tdst[ u ][ p ] = null;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t} else {\n\n\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction mergeUniforms( uniforms ) {\n\n\tconst merged = {};\n\n\tfor ( let u = 0; u < uniforms.length; u ++ ) {\n\n\t\tconst tmp = cloneUniforms( uniforms[ u ] );\n\n\t\tfor ( const p in tmp ) {\n\n\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t}\n\n\t}\n\n\treturn merged;\n\n}\n\nfunction cloneUniformsGroups( src ) {\n\n\tconst dst = [];\n\n\tfor ( let u = 0; u < src.length; u ++ ) {\n\n\t\tdst.push( src[ u ].clone() );\n\n\t}\n\n\treturn dst;\n\n}\n\nfunction getUnlitUniformColorSpace( renderer ) {\n\n\tif ( renderer.getRenderTarget() === null ) {\n\n\t\t// https://github.com/mrdoob/three.js/pull/23937#issuecomment-1111067398\n\t\treturn renderer.outputColorSpace;\n\n\t}\n\n\treturn ColorManagement.workingColorSpace;\n\n}\n\n// Legacy\n\nconst UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\nvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\nvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\nclass ShaderMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShaderMaterial = true;\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\t\tthis.uniformsGroups = [];\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.forceSinglePass = true;\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv1': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tthis.glslVersion = null;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\t\tthis.uniformsGroups = cloneUniformsGroups( source.uniformsGroups );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.extensions = Object.assign( {}, source.extensions );\n\n\t\tthis.glslVersion = source.glslVersion;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.glslVersion = this.glslVersion;\n\t\tdata.uniforms = {};\n\n\t\tfor ( const name in this.uniforms ) {\n\n\t\t\tconst uniform = this.uniforms[ name ];\n\t\t\tconst value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) data.defines = this.defines;\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tdata.lights = this.lights;\n\t\tdata.clipping = this.clipping;\n\n\t\tconst extensions = {};\n\n\t\tfor ( const key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) extensions[ key ] = true;\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) data.extensions = extensions;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass Camera extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isCamera = true;\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t\tthis.coordinateSystem = WebGLCoordinateSystem;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\tthis.coordinateSystem = source.coordinateSystem;\n\n\t\treturn this;\n\n\t}\n\n\tgetWorldDirection( target ) {\n\n\t\treturn super.getWorldDirection( target ).negate();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tupdateWorldMatrix( updateParents, updateChildren ) {\n\n\t\tsuper.updateWorldMatrix( updateParents, updateChildren );\n\n\t\tthis.matrixWorldInverse.copy( this.matrixWorld ).invert();\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass PerspectiveCamera extends Camera {\n\n\tconstructor( fov = 50, aspect = 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isPerspectiveCamera = true;\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength( focalLength ) {\n\n\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength() {\n\n\t\tconst vExtentSlope = Math.tan( DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t}\n\n\tgetEffectiveFOV() {\n\n\t\treturn RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t}\n\n\tgetFilmWidth() {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t}\n\n\tgetFilmHeight() {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t}\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   const w = 1920;\n\t *   const h = 1080;\n\t *   const fullWidth = w * 3;\n\t *   const fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst near = this.near;\n\t\tlet top = near * Math.tan( DEG2RAD * 0.5 * this.fov ) / this.zoom;\n\t\tlet height = 2 * top;\n\t\tlet width = this.aspect * height;\n\t\tlet left = - 0.5 * width;\n\t\tconst view = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tconst skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst fov = - 90; // negative fov is not an error\nconst aspect = 1;\n\nclass CubeCamera extends Object3D {\n\n\tconstructor( near, far, renderTarget ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tthis.renderTarget = renderTarget;\n\t\tthis.coordinateSystem = null;\n\t\tthis.activeMipmapLevel = 0;\n\n\t\tconst cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.layers = this.layers;\n\t\tthis.add( cameraPX );\n\n\t\tconst cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.layers = this.layers;\n\t\tthis.add( cameraNX );\n\n\t\tconst cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.layers = this.layers;\n\t\tthis.add( cameraPY );\n\n\t\tconst cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.layers = this.layers;\n\t\tthis.add( cameraNY );\n\n\t\tconst cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.layers = this.layers;\n\t\tthis.add( cameraPZ );\n\n\t\tconst cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.layers = this.layers;\n\t\tthis.add( cameraNZ );\n\n\t}\n\n\tupdateCoordinateSystem() {\n\n\t\tconst coordinateSystem = this.coordinateSystem;\n\n\t\tconst cameras = this.children.concat();\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = cameras;\n\n\t\tfor ( const camera of cameras ) this.remove( camera );\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, 1, 0 );\n\t\t\tcameraPX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, 1, 0 );\n\t\t\tcameraNX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, - 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\t\tcameraPX.lookAt( - 1, 0, 0 );\n\n\t\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\t\tcameraNX.lookAt( 1, 0, 0 );\n\n\t\t\tcameraPY.up.set( 0, 0, 1 );\n\t\t\tcameraPY.lookAt( 0, 1, 0 );\n\n\t\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\t\tcameraNY.lookAt( 0, - 1, 0 );\n\n\t\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\t\tcameraPZ.lookAt( 0, 0, 1 );\n\n\t\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\t\tcameraNZ.lookAt( 0, 0, - 1 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\tfor ( const camera of cameras ) {\n\n\t\t\tthis.add( camera );\n\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t}\n\n\t}\n\n\tupdate( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tconst { renderTarget, activeMipmapLevel } = this;\n\n\t\tif ( this.coordinateSystem !== renderer.coordinateSystem ) {\n\n\t\t\tthis.coordinateSystem = renderer.coordinateSystem;\n\n\t\t\tthis.updateCoordinateSystem();\n\n\t\t}\n\n\t\tconst [ cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ ] = this.children;\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\tconst currentActiveCubeFace = renderer.getActiveCubeFace();\n\t\tconst currentActiveMipmapLevel = renderer.getActiveMipmapLevel();\n\n\t\tconst currentXrEnabled = renderer.xr.enabled;\n\n\t\trenderer.xr.enabled = false;\n\n\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderer.setRenderTarget( renderTarget, 0, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPX );\n\n\t\trenderer.setRenderTarget( renderTarget, 1, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNX );\n\n\t\trenderer.setRenderTarget( renderTarget, 2, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPY );\n\n\t\trenderer.setRenderTarget( renderTarget, 3, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNY );\n\n\t\trenderer.setRenderTarget( renderTarget, 4, activeMipmapLevel );\n\t\trenderer.render( scene, cameraPZ );\n\n\t\t// mipmaps are generated during the last call of render()\n\t\t// at this point, all sides of the cube render target are defined\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderer.setRenderTarget( renderTarget, 5, activeMipmapLevel );\n\t\trenderer.render( scene, cameraNZ );\n\n\t\trenderer.setRenderTarget( currentRenderTarget, currentActiveCubeFace, currentActiveMipmapLevel );\n\n\t\trenderer.xr.enabled = currentXrEnabled;\n\n\t\trenderTarget.texture.needsPMREMUpdate = true;\n\n\t}\n\n}\n\nclass CubeTexture extends Texture {\n\n\tconstructor( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\t\tsuper( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tget images() {\n\n\t\treturn this.image;\n\n\t}\n\n\tset images( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n}\n\nclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\n\tconstructor( size = 1, options = {} ) {\n\n\t\tsuper( size, size, options );\n\n\t\tthis.isWebGLCubeRenderTarget = true;\n\n\t\tconst image = { width: size, height: size, depth: 1 };\n\t\tconst images = [ image, image, image, image, image, image ];\n\n\t\tif ( options.encoding !== undefined ) {\n\n\t\t\t// @deprecated, r152\n\t\t\twarnOnce( 'THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace.' );\n\t\t\toptions.colorSpace = options.encoding === sRGBEncoding ? SRGBColorSpace : NoColorSpace;\n\n\t\t}\n\n\t\tthis.texture = new CubeTexture( images, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.colorSpace );\n\n\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\n\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t// and the flag isRenderTargetTexture controls this conversion. The flip is not required when using WebGLCubeRenderTarget.texture\n\t\t// as a cube texture (this is detected when isRenderTargetTexture is set to true for cube textures).\n\n\t\tthis.texture.isRenderTargetTexture = true;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t}\n\n\tfromEquirectangularTexture( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.colorSpace = texture.colorSpace;\n\n\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\tthis.texture.minFilter = texture.minFilter;\n\t\tthis.texture.magFilter = texture.magFilter;\n\n\t\tconst shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: /* glsl */`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\n\t\t\tfragmentShader: /* glsl */`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t};\n\n\t\tconst geometry = new BoxGeometry( 5, 5, 5 );\n\n\t\tconst material = new ShaderMaterial( {\n\n\t\t\tname: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tconst mesh = new Mesh( geometry, material );\n\n\t\tconst currentMinFilter = texture.minFilter;\n\n\t\t// Avoid blurred poles\n\t\tif ( texture.minFilter === LinearMipmapLinearFilter ) texture.minFilter = LinearFilter;\n\n\t\tconst camera = new CubeCamera( 1, 10, this );\n\t\tcamera.update( renderer, mesh );\n\n\t\ttexture.minFilter = currentMinFilter;\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t}\n\n\tclear( renderer, color, depth, stencil ) {\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\trenderer.setRenderTarget( this, i );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n}\n\nconst _vector1 = /*@__PURE__*/ new Vector3();\nconst _vector2 = /*@__PURE__*/ new Vector3();\nconst _normalMatrix = /*@__PURE__*/ new Matrix3();\n\nclass Plane {\n\n\tconstructor( normal = new Vector3( 1, 0, 0 ), constant = 0 ) {\n\n\t\tthis.isPlane = true;\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = normal;\n\t\tthis.constant = constant;\n\n\t}\n\n\tset( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponents( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromNormalAndCoplanarPoint( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCoplanarPoints( a, b, c ) {\n\n\t\tconst normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t}\n\n\tnormalize() {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t}\n\n\tdistanceToSphere( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t}\n\n\tprojectPoint( point, target ) {\n\n\t\treturn target.copy( point ).addScaledVector( this.normal, - this.distanceToPoint( point ) );\n\n\t}\n\n\tintersectLine( line, target ) {\n\n\t\tconst direction = line.delta( _vector1 );\n\n\t\tconst denominator = this.normal.dot( direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\treturn target.copy( line.start );\n\n\t\t\t}\n\n\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn target.copy( line.start ).addScaledVector( direction, t );\n\n\t}\n\n\tintersectsLine( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tconst startSign = this.distanceToPoint( line.start );\n\t\tconst endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t}\n\n\tcoplanarPoint( target ) {\n\n\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t}\n\n\tapplyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\tconst referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\tconst normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t}\n\n\tequals( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _sphere$5 = /*@__PURE__*/ new Sphere();\nconst _vector$7 = /*@__PURE__*/ new Vector3();\n\nclass Frustum {\n\n\tconstructor( p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane() ) {\n\n\t\tthis.planes = [ p0, p1, p2, p3, p4, p5 ];\n\n\t}\n\n\tset( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tconst planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( frustum ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromProjectionMatrix( m, coordinateSystem = WebGLCoordinateSystem ) {\n\n\t\tconst planes = this.planes;\n\t\tconst me = m.elements;\n\t\tconst me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tconst me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tconst me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tconst me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\n\t\tif ( coordinateSystem === WebGLCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t} else if ( coordinateSystem === WebGPUCoordinateSystem ) {\n\n\t\t\tplanes[ 5 ].setComponents( me2, me6, me10, me14 ).normalize();\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: ' + coordinateSystem );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tintersectsObject( object ) {\n\n\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( object.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$5.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t}\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSprite( sprite ) {\n\n\t\t_sphere$5.center.set( 0, 0, 0 );\n\t\t_sphere$5.radius = 0.7071067811865476;\n\t\t_sphere$5.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn this.intersectsSphere( _sphere$5 );\n\n\t}\n\n\tintersectsSphere( sphere ) {\n\n\t\tconst planes = this.planes;\n\t\tconst center = sphere.center;\n\t\tconst negRadius = - sphere.radius;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst plane = planes[ i ];\n\n\t\t\t// corner at max distance\n\n\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\tif ( plane.distanceToPoint( _vector$7 ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\tconst planes = this.planes;\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nfunction WebGLAnimation() {\n\n\tlet context = null;\n\tlet isAnimating = false;\n\tlet animationLoop = null;\n\tlet requestId = null;\n\n\tfunction onAnimationFrame( time, frame ) {\n\n\t\tanimationLoop( time, frame );\n\n\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t}\n\n\treturn {\n\n\t\tstart: function () {\n\n\t\t\tif ( isAnimating === true ) return;\n\t\t\tif ( animationLoop === null ) return;\n\n\t\t\trequestId = context.requestAnimationFrame( onAnimationFrame );\n\n\t\t\tisAnimating = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tcontext.cancelAnimationFrame( requestId );\n\n\t\t\tisAnimating = false;\n\n\t\t},\n\n\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\tanimationLoop = callback;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\tcontext = value;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLAttributes( gl, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tconst buffers = new WeakMap();\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst usage = attribute.usage;\n\t\tconst size = array.byteLength;\n\n\t\tconst buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tlet type;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\tif ( attribute.isFloat16BufferAttribute ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\ttype = gl.HALF_FLOAT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t\t}\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else if ( array instanceof Uint8ClampedArray ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'THREE.WebGLAttributes: Unsupported buffer data format: ' + array );\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version,\n\t\t\tsize: size\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tconst array = attribute.array;\n\t\tconst updateRange = attribute._updateRange; // deprecated\n\t\tconst updateRanges = attribute.updateRanges;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( updateRange.count === - 1 && updateRanges.length === 0 ) {\n\n\t\t\t// Not using update ranges\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t}\n\n\t\tif ( updateRanges.length !== 0 ) {\n\n\t\t\tfor ( let i = 0, l = updateRanges.length; i < l; i ++ ) {\n\n\t\t\t\tconst range = updateRanges[ i ];\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray, range.start, range.count );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.bufferSubData( bufferType, range.start * array.BYTES_PER_ELEMENT,\n\t\t\t\t\t\tarray.subarray( range.start, range.start + range.count ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tattribute.clearUpdateRanges();\n\n\t\t}\n\n\t\t// deprecated\n\t\tif ( updateRange.count !== - 1 ) {\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray, updateRange.offset, updateRange.count );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t}\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t\tattribute.onUploadCallback();\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers.get( attribute );\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tbuffers.delete( attribute );\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isGLBufferAttribute ) {\n\n\t\t\tconst cached = buffers.get( attribute );\n\n\t\t\tif ( ! cached || cached.version < attribute.version ) {\n\n\t\t\t\tbuffers.set( attribute, {\n\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\tversion: attribute.version\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tconst data = buffers.get( attribute );\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tif ( data.size !== attribute.array.byteLength ) {\n\n\t\t\t\tthrow new Error( 'THREE.WebGLAttributes: The size of the buffer attribute\\'s array buffer does not match the original size. Resizing buffer attributes is not supported.' );\n\n\t\t\t}\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\nclass PlaneGeometry extends BufferGeometry {\n\n\tconstructor( width = 1, height = 1, widthSegments = 1, heightSegments = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tconst width_half = width / 2;\n\t\tconst height_half = height / 2;\n\n\t\tconst gridX = Math.floor( widthSegments );\n\t\tconst gridY = Math.floor( heightSegments );\n\n\t\tconst gridX1 = gridX + 1;\n\t\tconst gridY1 = gridY + 1;\n\n\t\tconst segment_width = width / gridX;\n\t\tconst segment_height = height / gridY;\n\n\t\t//\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\tfor ( let iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\tfor ( let ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tconst x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\tconst b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tconst c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tconst d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PlaneGeometry( data.width, data.height, data.widthSegments, data.heightSegments );\n\n\t}\n\n}\n\nvar alphahash_fragment = \"#ifdef USE_ALPHAHASH\\n\\tif ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;\\n#endif\";\n\nvar alphahash_pars_fragment = \"#ifdef USE_ALPHAHASH\\n\\tconst float ALPHA_HASH_SCALE = 0.05;\\n\\tfloat hash2D( vec2 value ) {\\n\\t\\treturn fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );\\n\\t}\\n\\tfloat hash3D( vec3 value ) {\\n\\t\\treturn hash2D( vec2( hash2D( value.xy ), value.z ) );\\n\\t}\\n\\tfloat getAlphaHashThreshold( vec3 position ) {\\n\\t\\tfloat maxDeriv = max(\\n\\t\\t\\tlength( dFdx( position.xyz ) ),\\n\\t\\t\\tlength( dFdy( position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );\\n\\t\\tvec2 pixScales = vec2(\\n\\t\\t\\texp2( floor( log2( pixScale ) ) ),\\n\\t\\t\\texp2( ceil( log2( pixScale ) ) )\\n\\t\\t);\\n\\t\\tvec2 alpha = vec2(\\n\\t\\t\\thash3D( floor( pixScales.x * position.xyz ) ),\\n\\t\\t\\thash3D( floor( pixScales.y * position.xyz ) )\\n\\t\\t);\\n\\t\\tfloat lerpFactor = fract( log2( pixScale ) );\\n\\t\\tfloat x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;\\n\\t\\tfloat a = min( lerpFactor, 1.0 - lerpFactor );\\n\\t\\tvec3 cases = vec3(\\n\\t\\t\\tx * x / ( 2.0 * a * ( 1.0 - a ) ),\\n\\t\\t\\t( x - 0.5 * a ) / ( 1.0 - a ),\\n\\t\\t\\t1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )\\n\\t\\t);\\n\\t\\tfloat threshold = ( x < ( 1.0 - a ) )\\n\\t\\t\\t? ( ( x < a ) ? cases.x : cases.y )\\n\\t\\t\\t: cases.z;\\n\\t\\treturn clamp( threshold , 1.0e-6, 1.0 );\\n\\t}\\n#endif\";\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\\n#endif\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar alphatest_fragment = \"#ifdef USE_ALPHATEST\\n\\tif ( diffuseColor.a < alphaTest ) discard;\\n#endif\";\n\nvar alphatest_pars_fragment = \"#ifdef USE_ALPHATEST\\n\\tuniform float alphaTest;\\n#endif\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_CLEARCOAT ) \\n\\t\\tclearcoatSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_SHEEN ) \\n\\t\\tsheenSpecularIndirect *= ambientOcclusion;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometryNormal, geometryViewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\\n\\t#endif\\n#endif\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar batching_pars_vertex = \"#ifdef USE_BATCHING\\n\\tattribute float batchId;\\n\\tuniform highp sampler2D batchingTexture;\\n\\tmat4 getBatchingMatrix( const in float i ) {\\n\\t\\tint size = textureSize( batchingTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar batching_vertex = \"#ifdef USE_BATCHING\\n\\tmat4 batchingMatrix = getBatchingMatrix( batchId );\\n#endif\";\n\nvar begin_vertex = \"vec3 transformed = vec3( position );\\n#ifdef USE_ALPHAHASH\\n\\tvPosition = vec3( position );\\n#endif\";\n\nvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\nvar bsdfs = \"float G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n} // validated\";\n\nvar iridescence_fragment = \"#ifdef USE_IRIDESCENCE\\n\\tconst mat3 XYZ_TO_REC709 = mat3(\\n\\t\\t 3.2404542, -0.9692660,  0.0556434,\\n\\t\\t-1.5371385,  1.8760108, -0.2040259,\\n\\t\\t-0.4985314,  0.0415560,  1.0572252\\n\\t);\\n\\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\\n\\t\\tvec3 sqrtF0 = sqrt( fresnel0 );\\n\\t\\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\\n\\t}\\n\\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\\n\\t}\\n\\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\\n\\t\\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\\n\\t}\\n\\tvec3 evalSensitivity( float OPD, vec3 shift ) {\\n\\t\\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\\n\\t\\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\\n\\t\\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\\n\\t\\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\\n\\t\\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\\n\\t\\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\\n\\t\\txyz /= 1.0685e-7;\\n\\t\\tvec3 rgb = XYZ_TO_REC709 * xyz;\\n\\t\\treturn rgb;\\n\\t}\\n\\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\\n\\t\\tvec3 I;\\n\\t\\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\\n\\t\\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\\n\\t\\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\\n\\t\\tif ( cosTheta2Sq < 0.0 ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t}\\n\\t\\tfloat cosTheta2 = sqrt( cosTheta2Sq );\\n\\t\\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\\n\\t\\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\\n\\t\\tfloat T121 = 1.0 - R12;\\n\\t\\tfloat phi12 = 0.0;\\n\\t\\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\\n\\t\\tfloat phi21 = PI - phi12;\\n\\t\\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\\t\\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\\n\\t\\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\\n\\t\\tvec3 phi23 = vec3( 0.0 );\\n\\t\\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\\n\\t\\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\\n\\t\\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\\n\\t\\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\\n\\t\\tvec3 phi = vec3( phi21 ) + phi23;\\n\\t\\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\\n\\t\\tvec3 r123 = sqrt( R123 );\\n\\t\\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\\n\\t\\tvec3 C0 = R12 + Rs;\\n\\t\\tI = C0;\\n\\t\\tvec3 Cm = Rs - T121;\\n\\t\\tfor ( int m = 1; m <= 2; ++ m ) {\\n\\t\\t\\tCm *= r123;\\n\\t\\t\\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\\n\\t\\t\\tI += Cm * Sm;\\n\\t\\t}\\n\\t\\treturn max( I, vec3( 0.0 ) );\\n\\t}\\n#endif\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vBumpMapUv );\\n\\t\\tvec2 dSTdy = dFdy( vBumpMapUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );\\n\\t\\tvec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\nvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nvec3 pow2( const in vec3 x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract( sin( sn ) * c );\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\n#ifdef USE_ALPHAHASH\\n\\tvarying vec3 vPosition;\\n#endif\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat luminance( const in vec3 rgb ) {\\n\\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\\n\\treturn dot( weights, rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n}\\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\\n\\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\\n\\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\\n} // validated\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\\n\\t\\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\\n\\t\\tuv.x *= CUBEUV_TEXEL_WIDTH;\\n\\t\\tuv.y *= CUBEUV_TEXEL_HEIGHT;\\n\\t\\t#ifdef texture2DGradEXT\\n\\t\\t\\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn texture2D( envMap, uv ).rgb;\\n\\t\\t#endif\\n\\t}\\n\\t#define cubeUV_r0 1.0\\n\\t#define cubeUV_v0 0.339\\n\\t#define cubeUV_m0 - 2.0\\n\\t#define cubeUV_r1 0.8\\n\\t#define cubeUV_v1 0.276\\n\\t#define cubeUV_m1 - 1.0\\n\\t#define cubeUV_r4 0.4\\n\\t#define cubeUV_v4 0.046\\n\\t#define cubeUV_m4 2.0\\n\\t#define cubeUV_r5 0.305\\n\\t#define cubeUV_v5 0.016\\n\\t#define cubeUV_m5 3.0\\n\\t#define cubeUV_r6 0.21\\n\\t#define cubeUV_v6 0.0038\\n\\t#define cubeUV_m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= cubeUV_r1 ) {\\n\\t\\t\\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\\n\\t\\t} else if ( roughness >= cubeUV_r4 ) {\\n\\t\\t\\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\\n\\t\\t} else if ( roughness >= cubeUV_r5 ) {\\n\\t\\t\\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\\n\\t\\t} else if ( roughness >= cubeUV_r6 ) {\\n\\t\\t\\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = objectTangent;\\n#endif\\n#ifdef USE_BATCHING\\n\\tmat3 bm = mat3( batchingMatrix );\\n\\ttransformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );\\n\\ttransformedNormal = bm * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = bm * transformedTangent;\\n\\t#endif\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmat3 im = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );\\n\\ttransformedNormal = im * transformedNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\ttransformedTangent = im * transformedTangent;\\n\\t#endif\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\ttransformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\\n#endif\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\nvar colorspace_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\nvar colorspace_pars_fragment = \"\\nconst mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(\\n\\tvec3( 0.8224621, 0.177538, 0.0 ),\\n\\tvec3( 0.0331941, 0.9668058, 0.0 ),\\n\\tvec3( 0.0170827, 0.0723974, 0.9105199 )\\n);\\nconst mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(\\n\\tvec3( 1.2249401, - 0.2249404, 0.0 ),\\n\\tvec3( - 0.0420569, 1.0420571, 0.0 ),\\n\\tvec3( - 0.0196376, - 0.0786361, 1.0982735 )\\n);\\nvec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );\\n}\\nvec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {\\n\\treturn vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );\\n}\\nvec4 LinearTransferOETF( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 sRGBTransferOETF( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn sRGBTransferOETF( value );\\n}\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\nvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\nvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar fog_vertex = \"#ifdef USE_FOG\\n\\tvFogDepth = - mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float vFogDepth;\\n#endif\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float vFogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\nvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn vec3( texture2D( gradientMap, coord ).r );\\n\\t#else\\n\\t\\tvec2 fw = fwidth( coord ) * 0.5;\\n\\t\\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\\n\\t#endif\\n}\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\treflectedLight.indirectDiffuse += lightMapIrradiance;\\n#endif\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_fragment = \"LambertMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_lambert_pars_fragment = \"varying vec3 vViewPosition;\\nstruct LambertMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Lambert\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Lambert\";\n\nvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\n#if defined( USE_LIGHT_PROBES )\\n\\tuniform vec3 lightProbe[ 9 ];\\n#endif\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\\n\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\treturn irradiance;\\n}\\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\t#if defined ( LEGACY_LIGHTS )\\n\\t\\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\t\\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t\\t}\\n\\t\\treturn 1.0;\\n\\t#else\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tif ( cutoffDistance > 0.0 ) {\\n\\t\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\t}\\n\\t\\treturn distanceFalloff;\\n\\t#endif\\n}\\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\\n\\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {\\n\\t\\tlight.color = directionalLight.color;\\n\\t\\tlight.direction = directionalLight.direction;\\n\\t\\tlight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = pointLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tlight.color = pointLight.color;\\n\\t\\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {\\n\\t\\tvec3 lVector = spotLight.position - geometryPosition;\\n\\t\\tlight.direction = normalize( lVector );\\n\\t\\tfloat angleCos = dot( light.direction, spotLight.direction );\\n\\t\\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\tif ( spotAttenuation > 0.0 ) {\\n\\t\\t\\tfloat lightDistance = length( lVector );\\n\\t\\t\\tlight.color = spotLight.color * spotAttenuation;\\n\\t\\t\\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tlight.visible = ( light.color != vec3( 0.0 ) );\\n\\t\\t} else {\\n\\t\\t\\tlight.color = vec3( 0.0 );\\n\\t\\t\\tlight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\\n\\t\\tfloat dotNL = dot( normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\nvar envmap_physical_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tvec3 getIBLIrradiance( const in vec3 normal ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\tvec3 reflectVec = reflect( - viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t\\t#else\\n\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t#endif\\n\\t}\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tvec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {\\n\\t\\t\\t#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t\\t\\t\\tvec3 bentNormal = cross( bitangent, viewDir );\\n\\t\\t\\t\\tbentNormal = normalize( cross( bentNormal, bitangent ) );\\n\\t\\t\\t\\tbentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );\\n\\t\\t\\t\\treturn getIBLRadiance( viewDir, bentNormal, roughness );\\n\\t\\t\\t#else\\n\\t\\t\\t\\treturn vec3( 0.0 );\\n\\t\\t\\t#endif\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\nvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\\nmaterial.roughness = min( material.roughness, 1.0 );\\n#ifdef IOR\\n\\tmaterial.ior = ior;\\n\\t#ifdef USE_SPECULAR\\n\\t\\tfloat specularIntensityFactor = specularIntensity;\\n\\t\\tvec3 specularColorFactor = specularColor;\\n\\t\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\t\\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\\n\\t\\t#endif\\n\\t\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\t\\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\\n\\t\\t#endif\\n\\t\\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\\n\\t#else\\n\\t\\tfloat specularIntensityFactor = 1.0;\\n\\t\\tvec3 specularColorFactor = vec3( 1.0 );\\n\\t\\tmaterial.specularF90 = 1.0;\\n\\t#endif\\n\\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.specularF90 = 1.0;\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\tmaterial.clearcoatF0 = vec3( 0.04 );\\n\\tmaterial.clearcoatF90 = 1.0;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tmaterial.iridescence = iridescence;\\n\\tmaterial.iridescenceIOR = iridescenceIOR;\\n\\t#ifdef USE_IRIDESCENCEMAP\\n\\t\\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\t\\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\\n\\t#else\\n\\t\\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\\n\\t#endif\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheenColor;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\\n\\t#endif\\n\\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tmat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );\\n\\t\\tvec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;\\n\\t\\tvec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;\\n\\t#else\\n\\t\\tvec2 anisotropyV = anisotropyVector;\\n\\t#endif\\n\\tmaterial.anisotropy = length( anisotropyV );\\n\\tif( material.anisotropy == 0.0 ) {\\n\\t\\tanisotropyV = vec2( 1.0, 0.0 );\\n\\t} else {\\n\\t\\tanisotropyV /= material.anisotropy;\\n\\t\\tmaterial.anisotropy = saturate( material.anisotropy );\\n\\t}\\n\\tmaterial.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );\\n\\tmaterial.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;\\n\\tmaterial.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;\\n#endif\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat roughness;\\n\\tvec3 specularColor;\\n\\tfloat specularF90;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat clearcoat;\\n\\t\\tfloat clearcoatRoughness;\\n\\t\\tvec3 clearcoatF0;\\n\\t\\tfloat clearcoatF90;\\n\\t#endif\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tfloat iridescence;\\n\\t\\tfloat iridescenceIOR;\\n\\t\\tfloat iridescenceThickness;\\n\\t\\tvec3 iridescenceFresnel;\\n\\t\\tvec3 iridescenceF0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tvec3 sheenColor;\\n\\t\\tfloat sheenRoughness;\\n\\t#endif\\n\\t#ifdef IOR\\n\\t\\tfloat ior;\\n\\t#endif\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat transmission;\\n\\t\\tfloat transmissionAlpha;\\n\\t\\tfloat thickness;\\n\\t\\tfloat attenuationDistance;\\n\\t\\tvec3 attenuationColor;\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat anisotropy;\\n\\t\\tfloat alphaT;\\n\\t\\tvec3 anisotropyT;\\n\\t\\tvec3 anisotropyB;\\n\\t#endif\\n};\\nvec3 clearcoatSpecularDirect = vec3( 0.0 );\\nvec3 clearcoatSpecularIndirect = vec3( 0.0 );\\nvec3 sheenSpecularDirect = vec3( 0.0 );\\nvec3 sheenSpecularIndirect = vec3(0.0 );\\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\\n    float x2 = x * x;\\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\\n}\\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\n#ifdef USE_ANISOTROPY\\n\\tfloat V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {\\n\\t\\tfloat gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );\\n\\t\\tfloat gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );\\n\\t\\tfloat v = 0.5 / ( gv + gl );\\n\\t\\treturn saturate(v);\\n\\t}\\n\\tfloat D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {\\n\\t\\tfloat a2 = alphaT * alphaB;\\n\\t\\thighp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );\\n\\t\\thighp float v2 = dot( v, v );\\n\\t\\tfloat w2 = a2 / v2;\\n\\t\\treturn RECIPROCAL_PI * a2 * pow2 ( w2 );\\n\\t}\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\\n\\t\\tvec3 f0 = material.clearcoatF0;\\n\\t\\tfloat f90 = material.clearcoatF90;\\n\\t\\tfloat roughness = material.clearcoatRoughness;\\n\\t\\tfloat alpha = pow2( roughness );\\n\\t\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\t\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\t\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\t\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\t\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\t\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t\\treturn F * ( V * D );\\n\\t}\\n#endif\\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\\n\\tvec3 f0 = material.specularColor;\\n\\tfloat f90 = material.specularF90;\\n\\tfloat roughness = material.roughness;\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\\n\\tvec3 F = F_Schlick( f0, f90, dotVH );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tF = mix( F, material.iridescenceFresnel, material.iridescence );\\n\\t#endif\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tfloat dotTL = dot( material.anisotropyT, lightDir );\\n\\t\\tfloat dotTV = dot( material.anisotropyT, viewDir );\\n\\t\\tfloat dotTH = dot( material.anisotropyT, halfDir );\\n\\t\\tfloat dotBL = dot( material.anisotropyB, lightDir );\\n\\t\\tfloat dotBV = dot( material.anisotropyB, viewDir );\\n\\t\\tfloat dotBH = dot( material.anisotropyB, halfDir );\\n\\t\\tfloat V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );\\n\\t\\tfloat D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );\\n\\t#else\\n\\t\\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\t\\tfloat D = D_GGX( alpha, dotNH );\\n\\t#endif\\n\\treturn F * ( V * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie( float roughness, float dotNH ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tfloat invAlpha = 1.0 / alpha;\\n\\tfloat cos2h = dotNH * dotNH;\\n\\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\\n\\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\\n}\\nfloat V_Neubelt( float dotNV, float dotNL ) {\\n\\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\\n}\\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\\n\\tvec3 halfDir = normalize( lightDir + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, lightDir ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat D = D_Charlie( sheenRoughness, dotNH );\\n\\tfloat V = V_Neubelt( dotNV, dotNL );\\n\\treturn sheenColor * ( D * V );\\n}\\n#endif\\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat r2 = roughness * roughness;\\n\\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\\n\\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\\n\\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\\n\\treturn saturate( DG * RECIPROCAL_PI );\\n}\\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\\n\\treturn fab;\\n}\\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\treturn specularColor * fab.x + specularF90 * fab.y;\\n}\\n#ifdef USE_IRIDESCENCE\\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#else\\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n#endif\\n\\tvec2 fab = DFGApprox( normal, viewDir, roughness );\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\\n\\t#else\\n\\t\\tvec3 Fr = specularColor;\\n\\t#endif\\n\\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\\n\\tfloat Ess = fab.x + fab.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometryNormal;\\n\\t\\tvec3 viewDir = geometryViewDir;\\n\\t\\tvec3 position = geometryPosition;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.roughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometryNormal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = dotNLcc * directLight.color;\\n\\t\\tclearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );\\n\\t#endif\\n\\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\tsheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );\\n\\t#endif\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\t#ifdef USE_IRIDESCENCE\\n\\t\\tcomputeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\\n\\t#else\\n\\t\\tcomputeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\\n\\t#endif\\n\\tvec3 totalScattering = singleScattering + multiScattering;\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\\n\\treflectedLight.indirectSpecular += radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\nvar lights_fragment_begin = \"\\nvec3 geometryPosition = - vViewPosition;\\nvec3 geometryNormal = normal;\\nvec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\nvec3 geometryClearcoatNormal = vec3( 0.0 );\\n#ifdef USE_CLEARCOAT\\n\\tgeometryClearcoatNormal = clearcoatNormal;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tfloat dotNVi = saturate( dot( normal, geometryViewDir ) );\\n\\tif ( material.iridescenceThickness == 0.0 ) {\\n\\t\\tmaterial.iridescence = 0.0;\\n\\t} else {\\n\\t\\tmaterial.iridescence = saturate( material.iridescence );\\n\\t}\\n\\tif ( material.iridescence > 0.0 ) {\\n\\t\\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\\n\\t\\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\\n\\t}\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointLightInfo( pointLight, geometryPosition, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tvec4 spotColor;\\n\\tvec3 spotLightCoord;\\n\\tbool inSpotLightMap;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotLightInfo( spotLight, geometryPosition, directLight );\\n\\t\\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\\n\\t\\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\\n\\t\\t#else\\n\\t\\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\\n\\t\\t#endif\\n\\t\\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\\n\\t\\t\\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\\n\\t\\t\\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\\n\\t\\t\\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\\n\\t\\t\\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\\n\\t\\t#endif\\n\\t\\t#undef SPOT_LIGHT_MAP_INDEX\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalLightInfo( directionalLight, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#if defined( USE_LIGHT_PROBES )\\n\\t\\tirradiance += getLightProbeIrradiance( lightProbe, geometryNormal );\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\nvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getIBLIrradiance( geometryNormal );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\t#ifdef USE_ANISOTROPY\\n\\t\\tradiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );\\n\\t#else\\n\\t\\tradiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tclearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );\\n\\t#endif\\n#endif\";\n\nvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );\\n#endif\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 sampledDiffuseColor = texture2D( map, vMapUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\tsampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );\\n\\t\\n\\t#endif\\n\\tdiffuseColor *= sampledDiffuseColor;\\n#endif\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\nvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t#if defined( USE_POINTS_UV )\\n\\t\\tvec2 uv = vUv;\\n\\t#else\\n\\t\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tdiffuseColor *= texture2D( map, uv );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\nvar map_particle_pars_fragment = \"#if defined( USE_POINTS_UV )\\n\\tvarying vec2 vUv;\\n#else\\n\\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\t\\tuniform mat3 uvTransform;\\n\\t#endif\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphcolor_vertex = \"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\\n\\tvColor *= morphTargetBaseInfluence;\\n\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t#if defined( USE_COLOR_ALPHA )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\\n\\t\\t#elif defined( USE_COLOR )\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\t\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\t\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\t\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\\n\\t\\tuniform sampler2DArray morphTargetsTexture;\\n\\t\\tuniform ivec2 morphTargetsTextureSize;\\n\\t\\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\\n\\t\\t\\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\\n\\t\\t\\tint y = texelIndex / morphTargetsTextureSize.x;\\n\\t\\t\\tint x = texelIndex - y * morphTargetsTextureSize.x;\\n\\t\\t\\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\\n\\t\\t\\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\\n\\t\\t}\\n\\t#else\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t\\t#else\\n\\t\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\t#ifdef MORPHTARGETS_TEXTURE\\n\\t\\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\\n\\t\\t\\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\\n\\t\\t}\\n\\t#else\\n\\t\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\t\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\t\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\t\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t\\t#ifndef USE_MORPHNORMALS\\n\\t\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\nvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = dFdx( vViewPosition );\\n\\tvec3 fdy = dFdy( vViewPosition );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal *= faceDirection;\\n\\t#endif\\n#endif\\n#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn = getTangentFrame( - vViewPosition, normal,\\n\\t\\t#if defined( USE_NORMALMAP )\\n\\t\\t\\tvNormalMapUv\\n\\t\\t#elif defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tvClearcoatNormalMapUv\\n\\t\\t#else\\n\\t\\t\\tvUv\\n\\t\\t#endif\\n\\t\\t);\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn[0] *= faceDirection;\\n\\t\\ttbn[1] *= faceDirection;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\t#ifdef USE_TANGENT\\n\\t\\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\\n\\t#else\\n\\t\\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\\n\\t#endif\\n\\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\\n\\t\\ttbn2[0] *= faceDirection;\\n\\t\\ttbn2[1] *= faceDirection;\\n\\t#endif\\n#endif\\nvec3 nonPerturbedNormal = normal;\";\n\nvar normal_fragment_maps = \"#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\tnormal = normalize( tbn * mapN );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\nvar normal_pars_fragment = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_pars_vertex = \"#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\";\n\nvar normal_vertex = \"#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef USE_NORMALMAP_OBJECTSPACE\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )\\n\\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\\n\\t\\tvec3 q0 = dFdx( eye_pos.xyz );\\n\\t\\tvec3 q1 = dFdy( eye_pos.xyz );\\n\\t\\tvec2 st0 = dFdx( uv.st );\\n\\t\\tvec2 st1 = dFdy( uv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\\n\\t\\treturn mat3( T * scale, B * scale, N );\\n\\t}\\n#endif\";\n\nvar clearcoat_normal_fragment_begin = \"#ifdef USE_CLEARCOAT\\n\\tvec3 clearcoatNormal = nonPerturbedNormal;\\n#endif\";\n\nvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\\n#endif\";\n\nvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\";\n\nvar iridescence_pars_fragment = \"#ifdef USE_IRIDESCENCEMAP\\n\\tuniform sampler2D iridescenceMap;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform sampler2D iridescenceThicknessMap;\\n#endif\";\n\nvar opaque_fragment = \"#ifdef OPAQUE\\ndiffuseColor.a = 1.0;\\n#endif\\n#ifdef USE_TRANSMISSION\\ndiffuseColor.a *= material.transmissionAlpha;\\n#endif\\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec2 packDepthToRG( in highp float v ) {\\n\\treturn packDepthToRGBA( v ).yx;\\n}\\nfloat unpackRGToDepth( const in highp vec2 v ) {\\n\\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn depth * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * depth - far );\\n}\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\nvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_BATCHING\\n\\tmvPosition = batchingMatrix * mvPosition;\\n#endif\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\nvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\nvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#if NUM_SPOT_LIGHT_MAPS > 0\\n\\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\\n\\t\\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t  f.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\nvar shadowmap_pars_vertex = \"#if NUM_SPOT_LIGHT_COORDS > 0\\n\\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\\n\\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\\n#endif\\n#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\nvar shadowmap_vertex = \"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\\n\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\tvec4 shadowWorldPosition;\\n#endif\\n#if defined( USE_SHADOWMAP )\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if NUM_SPOT_LIGHT_COORDS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition;\\n\\t\\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\t\\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\\n\\t\\t#endif\\n\\t\\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\tuniform highp sampler2D boneTexture;\\n\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\tint size = textureSize( boneTexture, 0 ).x;\\n\\t\\tint j = int( i ) * 4;\\n\\t\\tint x = j % size;\\n\\t\\tint y = j / size;\\n\\t\\tvec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );\\n\\t\\tvec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );\\n\\t\\tvec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );\\n\\t\\tvec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );\\n\\t\\treturn mat4( v1, v2, v3, v4 );\\n\\t}\\n#endif\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate( a ) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn saturate( toneMappingExposure * color );\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(  1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,  1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,  1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\nvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\tmaterial.transmission = transmission;\\n\\tmaterial.transmissionAlpha = 1.0;\\n\\tmaterial.thickness = thickness;\\n\\tmaterial.attenuationDistance = attenuationDistance;\\n\\tmaterial.attenuationColor = attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 n = inverseTransformDirection( normal, viewMatrix );\\n\\tvec4 transmitted = getIBLVolumeRefraction(\\n\\t\\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\\n\\t\\tmaterial.attenuationColor, material.attenuationDistance );\\n\\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );\\n\\ttotalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );\\n#endif\";\n\nvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform float attenuationDistance;\\n\\tuniform vec3 attenuationColor;\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec3 vWorldPosition;\\n\\tfloat w0( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w1( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\\n\\t}\\n\\tfloat w2( float a ){\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\\n\\t}\\n\\tfloat w3( float a ) {\\n\\t\\treturn ( 1.0 / 6.0 ) * ( a * a * a );\\n\\t}\\n\\tfloat g0( float a ) {\\n\\t\\treturn w0( a ) + w1( a );\\n\\t}\\n\\tfloat g1( float a ) {\\n\\t\\treturn w2( a ) + w3( a );\\n\\t}\\n\\tfloat h0( float a ) {\\n\\t\\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\\n\\t}\\n\\tfloat h1( float a ) {\\n\\t\\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\\n\\t}\\n\\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\\n\\t\\tuv = uv * texelSize.zw + 0.5;\\n\\t\\tvec2 iuv = floor( uv );\\n\\t\\tvec2 fuv = fract( uv );\\n\\t\\tfloat g0x = g0( fuv.x );\\n\\t\\tfloat g1x = g1( fuv.x );\\n\\t\\tfloat h0x = h0( fuv.x );\\n\\t\\tfloat h1x = h1( fuv.x );\\n\\t\\tfloat h0y = h0( fuv.y );\\n\\t\\tfloat h1y = h1( fuv.y );\\n\\t\\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\\n\\t\\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\\n\\t\\t\\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\\n\\t}\\n\\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\\n\\t\\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\\n\\t\\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\\n\\t\\tvec2 fLodSizeInv = 1.0 / fLodSize;\\n\\t\\tvec2 cLodSizeInv = 1.0 / cLodSize;\\n\\t\\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\\n\\t\\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\\n\\t\\treturn mix( fSample, cSample, fract( lod ) );\\n\\t}\\n\\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\\n\\t\\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\\n\\t\\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\\n\\t\\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\\n\\t\\treturn normalize( refractionVector ) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\\n\\t\\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\\n\\t}\\n\\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\\n\\t\\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\\n\\t\\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\\n\\t}\\n\\tvec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tif ( isinf( attenuationDistance ) ) {\\n\\t\\t\\treturn vec3( 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\\t\\t\\treturn transmittance;\\n\\t\\t}\\n\\t}\\n\\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\\n\\t\\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\\n\\t\\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\\n\\t\\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\\n\\t\\tvec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );\\n\\t\\tvec3 attenuatedColor = transmittance * transmittedLight.rgb;\\n\\t\\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\\n\\t\\tfloat transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;\\n\\t\\treturn vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );\\n\\t}\\n#endif\";\n\nvar uv_pars_fragment = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvarying vec2 vUv;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform mat3 mapTransform;\\n\\tvarying vec2 vMapUv;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform mat3 alphaMapTransform;\\n\\tvarying vec2 vAlphaMapUv;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tuniform mat3 lightMapTransform;\\n\\tvarying vec2 vLightMapUv;\\n#endif\\n#ifdef USE_AOMAP\\n\\tuniform mat3 aoMapTransform;\\n\\tvarying vec2 vAoMapUv;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tuniform mat3 bumpMapTransform;\\n\\tvarying vec2 vBumpMapUv;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tuniform mat3 normalMapTransform;\\n\\tvarying vec2 vNormalMapUv;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tuniform mat3 displacementMapTransform;\\n\\tvarying vec2 vDisplacementMapUv;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tuniform mat3 emissiveMapTransform;\\n\\tvarying vec2 vEmissiveMapUv;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tuniform mat3 metalnessMapTransform;\\n\\tvarying vec2 vMetalnessMapUv;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tuniform mat3 roughnessMapTransform;\\n\\tvarying vec2 vRoughnessMapUv;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tuniform mat3 anisotropyMapTransform;\\n\\tvarying vec2 vAnisotropyMapUv;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tuniform mat3 clearcoatMapTransform;\\n\\tvarying vec2 vClearcoatMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform mat3 clearcoatNormalMapTransform;\\n\\tvarying vec2 vClearcoatNormalMapUv;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform mat3 clearcoatRoughnessMapTransform;\\n\\tvarying vec2 vClearcoatRoughnessMapUv;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tuniform mat3 sheenColorMapTransform;\\n\\tvarying vec2 vSheenColorMapUv;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tuniform mat3 sheenRoughnessMapTransform;\\n\\tvarying vec2 vSheenRoughnessMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tuniform mat3 iridescenceMapTransform;\\n\\tvarying vec2 vIridescenceMapUv;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tuniform mat3 iridescenceThicknessMapTransform;\\n\\tvarying vec2 vIridescenceThicknessMapUv;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tuniform mat3 specularMapTransform;\\n\\tvarying vec2 vSpecularMapUv;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tuniform mat3 specularColorMapTransform;\\n\\tvarying vec2 vSpecularColorMapUv;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tuniform mat3 specularIntensityMapTransform;\\n\\tvarying vec2 vSpecularIntensityMapUv;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tuniform mat3 transmissionMapTransform;\\n\\tvarying vec2 vTransmissionMapUv;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tuniform mat3 thicknessMapTransform;\\n\\tvarying vec2 vThicknessMapUv;\\n#endif\";\n\nvar uv_vertex = \"#if defined( USE_UV ) || defined( USE_ANISOTROPY )\\n\\tvUv = vec3( uv, 1 ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_LIGHTMAP\\n\\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_AOMAP\\n\\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_BUMPMAP\\n\\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_DISPLACEMENTMAP\\n\\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_EMISSIVEMAP\\n\\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_METALNESSMAP\\n\\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ROUGHNESSMAP\\n\\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_ANISOTROPYMAP\\n\\tvAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOATMAP\\n\\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCEMAP\\n\\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\\n\\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_COLORMAP\\n\\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULARMAP\\n\\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_COLORMAP\\n\\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_SPECULAR_INTENSITYMAP\\n\\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_TRANSMISSIONMAP\\n\\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\\n#endif\\n#ifdef USE_THICKNESSMAP\\n\\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_BATCHING\\n\\t\\tworldPosition = batchingMatrix * worldPosition;\\n\\t#endif\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\nconst vertex$h = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\nconst fragment$h = \"uniform sampler2D t2D;\\nuniform float backgroundIntensity;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\t#ifdef DECODE_VIDEO_TEXTURE\\n\\t\\ttexColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$g = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$g = \"#ifdef ENVMAP_TYPE_CUBE\\n\\tuniform samplerCube envMap;\\n#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\tuniform sampler2D envMap;\\n#endif\\nuniform float flipEnvMap;\\nuniform float backgroundBlurriness;\\nuniform float backgroundIntensity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\\n\\t#else\\n\\t\\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\t#endif\\n\\ttexColor.rgb *= backgroundIntensity;\\n\\tgl_FragColor = texColor;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$f = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\nconst fragment$f = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = texColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$e = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\nconst fragment$e = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\nconst vertex$d = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\nconst fragment$d = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\nconst vertex$c = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\nconst fragment$c = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n}\";\n\nconst vertex$b = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$b = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$a = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinbase_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$a = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$9 = \"#define LAMBERT\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$9 = \"#define LAMBERT\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_lambert_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_lambert_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$8 = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\nconst fragment$8 = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$7 = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$7 = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <normal_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n\\t#ifdef OPAQUE\\n\\t\\tgl_FragColor.a = 1.0;\\n\\t#endif\\n}\";\n\nconst vertex$6 = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$6 = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$5 = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec3 vWorldPosition;\\n#endif\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition.xyz;\\n#endif\\n}\";\n\nconst fragment$5 = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define IOR\\n\\t#define USE_SPECULAR\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef IOR\\n\\tuniform float ior;\\n#endif\\n#ifdef USE_SPECULAR\\n\\tuniform float specularIntensity;\\n\\tuniform vec3 specularColor;\\n\\t#ifdef USE_SPECULAR_COLORMAP\\n\\t\\tuniform sampler2D specularColorMap;\\n\\t#endif\\n\\t#ifdef USE_SPECULAR_INTENSITYMAP\\n\\t\\tuniform sampler2D specularIntensityMap;\\n\\t#endif\\n#endif\\n#ifdef USE_CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_IRIDESCENCE\\n\\tuniform float iridescence;\\n\\tuniform float iridescenceIOR;\\n\\tuniform float iridescenceThicknessMinimum;\\n\\tuniform float iridescenceThicknessMaximum;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheenColor;\\n\\tuniform float sheenRoughness;\\n\\t#ifdef USE_SHEEN_COLORMAP\\n\\t\\tuniform sampler2D sheenColorMap;\\n\\t#endif\\n\\t#ifdef USE_SHEEN_ROUGHNESSMAP\\n\\t\\tuniform sampler2D sheenRoughnessMap;\\n\\t#endif\\n#endif\\n#ifdef USE_ANISOTROPY\\n\\tuniform vec2 anisotropyVector;\\n\\t#ifdef USE_ANISOTROPYMAP\\n\\t\\tuniform sampler2D anisotropyMap;\\n\\t#endif\\n#endif\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <iridescence_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_physical_pars_fragment>\\n#include <transmission_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <iridescence_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\\n\\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\\n\\t#include <transmission_fragment>\\n\\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\\n\\t#ifdef USE_SHEEN\\n\\t\\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\\n\\t\\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT\\n\\t\\tfloat dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );\\n\\t\\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\\n\\t\\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;\\n\\t#endif\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$4 = \"#define TOON\\nvarying vec3 vViewPosition;\\n#include <common>\\n#include <batching_pars_vertex>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <normal_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <normal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$4 = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <normal_pars_fragment>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\nconst vertex$3 = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\n#ifdef USE_POINTS_UV\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\nvoid main() {\\n\\t#ifdef USE_POINTS_UV\\n\\t\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\t#endif\\n\\t#include <color_vertex>\\n\\t#include <morphcolor_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$3 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\nconst vertex$2 = \"#include <common>\\n#include <batching_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <batching_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$2 = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <logdepthbuf_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst vertex$1 = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\nconst fragment$1 = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <alphatest_pars_fragment>\\n#include <alphahash_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <alphahash_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\t#include <opaque_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <colorspace_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\nconst ShaderChunk = {\n\talphahash_fragment: alphahash_fragment,\n\talphahash_pars_fragment: alphahash_pars_fragment,\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\talphatest_pars_fragment: alphatest_pars_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbatching_pars_vertex: batching_pars_vertex,\n\tbatching_vertex: batching_vertex,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tiridescence_fragment: iridescence_fragment,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tcolorspace_fragment: colorspace_fragment,\n\tcolorspace_pars_fragment: colorspace_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_fragment: lights_lambert_fragment,\n\tlights_lambert_pars_fragment: lights_lambert_pars_fragment,\n\tlights_pars_begin: lights_pars_begin,\n\tlights_toon_fragment: lights_toon_fragment,\n\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_fragment_begin: lights_fragment_begin,\n\tlights_fragment_maps: lights_fragment_maps,\n\tlights_fragment_end: lights_fragment_end,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphcolor_vertex: morphcolor_vertex,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment_begin: normal_fragment_begin,\n\tnormal_fragment_maps: normal_fragment_maps,\n\tnormal_pars_fragment: normal_pars_fragment,\n\tnormal_pars_vertex: normal_pars_vertex,\n\tnormal_vertex: normal_vertex,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\tiridescence_pars_fragment: iridescence_pars_fragment,\n\topaque_fragment: opaque_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\ttransmission_fragment: transmission_fragment,\n\ttransmission_pars_fragment: transmission_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tbackground_vert: vertex$h,\n\tbackground_frag: fragment$h,\n\tbackgroundCube_vert: vertex$g,\n\tbackgroundCube_frag: fragment$g,\n\tcube_vert: vertex$f,\n\tcube_frag: fragment$f,\n\tdepth_vert: vertex$e,\n\tdepth_frag: fragment$e,\n\tdistanceRGBA_vert: vertex$d,\n\tdistanceRGBA_frag: fragment$d,\n\tequirect_vert: vertex$c,\n\tequirect_frag: fragment$c,\n\tlinedashed_vert: vertex$b,\n\tlinedashed_frag: fragment$b,\n\tmeshbasic_vert: vertex$a,\n\tmeshbasic_frag: fragment$a,\n\tmeshlambert_vert: vertex$9,\n\tmeshlambert_frag: fragment$9,\n\tmeshmatcap_vert: vertex$8,\n\tmeshmatcap_frag: fragment$8,\n\tmeshnormal_vert: vertex$7,\n\tmeshnormal_frag: fragment$7,\n\tmeshphong_vert: vertex$6,\n\tmeshphong_frag: fragment$6,\n\tmeshphysical_vert: vertex$5,\n\tmeshphysical_frag: fragment$5,\n\tmeshtoon_vert: vertex$4,\n\tmeshtoon_frag: fragment$4,\n\tpoints_vert: vertex$3,\n\tpoints_frag: fragment$3,\n\tshadow_vert: vertex$2,\n\tshadow_frag: fragment$2,\n\tsprite_vert: vertex$1,\n\tsprite_frag: fragment$1\n};\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nconst UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\n\t\talphaTest: { value: 0 }\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\t\tspecularMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 }, // basic, lambert, phong\n\t\tior: { value: 1.5 }, // physical\n\t\trefractionRatio: { value: 0.98 }, // basic, lambert, phong\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 },\n\t\taoMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 },\n\t\tlightMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tnormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null },\n\t\temissiveMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null },\n\t\tmetalnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null },\n\t\troughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: /*@__PURE__*/ new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tlightProbe: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {}\n\t\t} },\n\n\t\tdirectionalLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {}\n\t\t} },\n\n\t\tspotLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotLightMap: { value: [] },\n\t\tspotShadowMap: { value: [] },\n\t\tspotLightMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {}\n\t\t} },\n\n\t\tpointLightShadows: { value: [], properties: {\n\t\t\tshadowBias: {},\n\t\t\tshadowNormalBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} },\n\n\t\tltc_1: { value: null },\n\t\tltc_2: { value: null }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 },\n\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() }\n\n\t},\n\n\tsprite: {\n\n\t\tdiffuse: { value: /*@__PURE__*/ new Color( 0xffffff ) },\n\t\topacity: { value: 1.0 },\n\t\tcenter: { value: /*@__PURE__*/ new Vector2( 0.5, 0.5 ) },\n\t\trotation: { value: 0.0 },\n\t\tmap: { value: null },\n\t\tmapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaMap: { value: null },\n\t\talphaMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\talphaTest: { value: 0 }\n\n\t}\n\n};\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tclearcoatNormalMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tiridescenceThicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\tsheenRoughnessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tthicknessMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t\tspecularColorMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularIntensityMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tanisotropyVector: { value: /*@__PURE__*/ new Vector2() },\n\t\t\tanisotropyMap: { value: null },\n\t\t\tanisotropyMapTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\nconst _rgb = { r: 0, b: 0, g: 0 };\n\nfunction WebGLBackground( renderer, cubemaps, cubeuvmaps, state, objects, alpha, premultipliedAlpha ) {\n\n\tconst clearColor = new Color( 0x000000 );\n\tlet clearAlpha = alpha === true ? 0 : 1;\n\n\tlet planeMesh;\n\tlet boxMesh;\n\n\tlet currentBackground = null;\n\tlet currentBackgroundVersion = 0;\n\tlet currentTonemapping = null;\n\n\tfunction render( renderList, scene ) {\n\n\t\tlet forceClear = false;\n\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\tif ( background && background.isTexture ) {\n\n\t\t\tconst usePMREM = scene.backgroundBlurriness > 0; // use PMREM if the user wants to blur the background\n\t\t\tbackground = ( usePMREM ? cubeuvmaps : cubemaps ).get( background );\n\n\t\t}\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tconst environmentBlendMode = renderer.xr.getEnvironmentBlendMode();\n\n\t\tif ( environmentBlendMode === 'additive' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 1, premultipliedAlpha );\n\n\t\t} else if ( environmentBlendMode === 'alpha-blend' ) {\n\n\t\t\tstate.buffers.color.setClear( 0, 0, 0, 0, premultipliedAlpha );\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && ( background.isCubeTexture || background.mapping === CubeUVReflectionMapping ) ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.backgroundCube.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.backgroundCube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.backgroundCube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\t// add \"envMap\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( boxMesh.material, 'envMap', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\tboxMesh.material.uniforms.flipEnvMap.value = ( background.isCubeTexture && background.isRenderTargetTexture === false ) ? - 1 : 1;\n\t\t\tboxMesh.material.uniforms.backgroundBlurriness.value = scene.backgroundBlurriness;\n\t\t\tboxMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tboxMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tboxMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneGeometry( 2, 2 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t// add \"map\" material property so the renderer can evaluate it like for built-in materials\n\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\t\t\tplaneMesh.material.uniforms.backgroundIntensity.value = scene.backgroundIntensity;\n\t\t\tplaneMesh.material.toneMapped = ColorManagement.getTransfer( background.colorSpace ) !== SRGBTransfer;\n\n\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\tbackground.updateMatrix();\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\tif ( currentBackground !== background ||\n\t\t\t\tcurrentBackgroundVersion !== background.version ||\n\t\t\t\tcurrentTonemapping !== renderer.toneMapping ) {\n\n\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\tcurrentBackground = background;\n\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t\tplaneMesh.layers.enableAll();\n\n\t\t\t// push to the pre-sorted opaque render list\n\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tcolor.getRGB( _rgb, getUnlitUniformColorSpace( renderer ) );\n\n\t\tstate.buffers.color.setClear( _rgb.r, _rgb.g, _rgb.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha = 1 ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\nfunction WebGLBindingStates( gl, extensions, attributes, capabilities ) {\n\n\tconst maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\n\tconst extension = capabilities.isWebGL2 ? null : extensions.get( 'OES_vertex_array_object' );\n\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\n\tconst bindingStates = {};\n\n\tconst defaultState = createBindingState( null );\n\tlet currentState = defaultState;\n\tlet forceUpdate = false;\n\n\tfunction setup( object, material, program, geometry, index ) {\n\n\t\tlet updateBuffers = false;\n\n\t\tif ( vaoAvailable ) {\n\n\t\t\tconst state = getBindingState( geometry, program, material );\n\n\t\t\tif ( currentState !== state ) {\n\n\t\t\t\tcurrentState = state;\n\t\t\t\tbindVertexArrayObject( currentState.object );\n\n\t\t\t}\n\n\t\t\tupdateBuffers = needsUpdate( object, geometry, program, index );\n\n\t\t\tif ( updateBuffers ) saveCache( object, geometry, program, index );\n\n\t\t} else {\n\n\t\t\tconst wireframe = ( material.wireframe === true );\n\n\t\t\tif ( currentState.geometry !== geometry.id ||\n\t\t\t\tcurrentState.program !== program.id ||\n\t\t\t\tcurrentState.wireframe !== wireframe ) {\n\n\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\tcurrentState.program = program.id;\n\t\t\t\tcurrentState.wireframe = wireframe;\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tif ( updateBuffers || forceUpdate ) {\n\n\t\t\tforceUpdate = false;\n\n\t\t\tsetupVertexAttributes( object, material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, attributes.get( index ).buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction createVertexArrayObject() {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.createVertexArray();\n\n\t\treturn extension.createVertexArrayOES();\n\n\t}\n\n\tfunction bindVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.bindVertexArray( vao );\n\n\t\treturn extension.bindVertexArrayOES( vao );\n\n\t}\n\n\tfunction deleteVertexArrayObject( vao ) {\n\n\t\tif ( capabilities.isWebGL2 ) return gl.deleteVertexArray( vao );\n\n\t\treturn extension.deleteVertexArrayOES( vao );\n\n\t}\n\n\tfunction getBindingState( geometry, program, material ) {\n\n\t\tconst wireframe = ( material.wireframe === true );\n\n\t\tlet programMap = bindingStates[ geometry.id ];\n\n\t\tif ( programMap === undefined ) {\n\n\t\t\tprogramMap = {};\n\t\t\tbindingStates[ geometry.id ] = programMap;\n\n\t\t}\n\n\t\tlet stateMap = programMap[ program.id ];\n\n\t\tif ( stateMap === undefined ) {\n\n\t\t\tstateMap = {};\n\t\t\tprogramMap[ program.id ] = stateMap;\n\n\t\t}\n\n\t\tlet state = stateMap[ wireframe ];\n\n\t\tif ( state === undefined ) {\n\n\t\t\tstate = createBindingState( createVertexArrayObject() );\n\t\t\tstateMap[ wireframe ] = state;\n\n\t\t}\n\n\t\treturn state;\n\n\t}\n\n\tfunction createBindingState( vao ) {\n\n\t\tconst newAttributes = [];\n\t\tconst enabledAttributes = [];\n\t\tconst attributeDivisors = [];\n\n\t\tfor ( let i = 0; i < maxVertexAttributes; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\t\t\tenabledAttributes[ i ] = 0;\n\t\t\tattributeDivisors[ i ] = 0;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\tgeometry: null,\n\t\t\tprogram: null,\n\t\t\twireframe: false,\n\n\t\t\tnewAttributes: newAttributes,\n\t\t\tenabledAttributes: enabledAttributes,\n\t\t\tattributeDivisors: attributeDivisors,\n\t\t\tobject: vao,\n\t\t\tattributes: {},\n\t\t\tindex: null\n\n\t\t};\n\n\t}\n\n\tfunction needsUpdate( object, geometry, program, index ) {\n\n\t\tconst cachedAttributes = currentState.attributes;\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tconst cachedAttribute = cachedAttributes[ name ];\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( cachedAttribute === undefined ) return true;\n\n\t\t\t\tif ( cachedAttribute.attribute !== geometryAttribute ) return true;\n\n\t\t\t\tif ( geometryAttribute && cachedAttribute.data !== geometryAttribute.data ) return true;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( currentState.attributesNum !== attributesNum ) return true;\n\n\t\tif ( currentState.index !== index ) return true;\n\n\t\treturn false;\n\n\t}\n\n\tfunction saveCache( object, geometry, program, index ) {\n\n\t\tconst cache = {};\n\t\tconst attributes = geometry.attributes;\n\t\tlet attributesNum = 0;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet attribute = attributes[ name ];\n\n\t\t\t\tif ( attribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) attribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) attribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif ( attribute && attribute.data ) {\n\n\t\t\t\t\tdata.data = attribute.data;\n\n\t\t\t\t}\n\n\t\t\t\tcache[ name ] = data;\n\n\t\t\t\tattributesNum ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentState.attributes = cache;\n\t\tcurrentState.attributesNum = attributesNum;\n\n\t\tcurrentState.index = index;\n\n\t}\n\n\tfunction initAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\n\t\tfor ( let i = 0, il = newAttributes.length; i < il; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\tconst attributeDivisors = currentState.attributeDivisors;\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension[ capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tconst newAttributes = currentState.newAttributes;\n\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\tfor ( let i = 0, il = enabledAttributes.length; i < il; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction vertexAttribPointer( index, size, type, normalized, stride, offset, integer ) {\n\n\t\tif ( integer === true ) {\n\n\t\t\tgl.vertexAttribIPointer( index, size, type, stride, offset );\n\n\t\t} else {\n\n\t\t\tgl.vertexAttribPointer( index, size, type, normalized, stride, offset );\n\n\t\t}\n\n\t}\n\n\tfunction setupVertexAttributes( object, material, program, geometry ) {\n\n\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) return;\n\n\t\t}\n\n\t\tinitAttributes();\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\tconst programAttributes = program.getAttributes();\n\n\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( const name in programAttributes ) {\n\n\t\t\tconst programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute.location >= 0 ) {\n\n\t\t\t\tlet geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute === undefined ) {\n\n\t\t\t\t\tif ( name === 'instanceMatrix' && object.instanceMatrix ) geometryAttribute = object.instanceMatrix;\n\t\t\t\t\tif ( name === 'instanceColor' && object.instanceColor ) geometryAttribute = object.instanceColor;\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\n\t\t\t\t\tconst attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t// check for integer attributes (WebGL 2 only)\n\n\t\t\t\t\tconst integer = ( capabilities.isWebGL2 === true && ( type === gl.INT || type === gl.UNSIGNED_INT || geometryAttribute.gpuType === IntType ) );\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tstride * bytesPerElement,\n\t\t\t\t\t\t\t\t( offset + ( size / programAttribute.locationSize ) * i ) * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor( programAttribute.location + i, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( object.isInstancedMesh !== true && geometry._maxInstanceCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\t\tenableAttribute( programAttribute.location + i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgl.bindBuffer( gl.ARRAY_BUFFER, buffer );\n\n\t\t\t\t\t\tfor ( let i = 0; i < programAttribute.locationSize; i ++ ) {\n\n\t\t\t\t\t\t\tvertexAttribPointer(\n\t\t\t\t\t\t\t\tprogramAttribute.location + i,\n\t\t\t\t\t\t\t\tsize / programAttribute.locationSize,\n\t\t\t\t\t\t\t\ttype,\n\t\t\t\t\t\t\t\tnormalized,\n\t\t\t\t\t\t\t\tsize * bytesPerElement,\n\t\t\t\t\t\t\t\t( size / programAttribute.locationSize ) * i * bytesPerElement,\n\t\t\t\t\t\t\t\tinteger\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tconst value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\tgl.vertexAttrib2fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tgl.vertexAttrib3fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\tgl.vertexAttrib4fv( programAttribute.location, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tgl.vertexAttrib1fv( programAttribute.location, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tdisableUnusedAttributes();\n\n\t}\n\n\tfunction dispose() {\n\n\t\treset();\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tfor ( const programId in programMap ) {\n\n\t\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[ programId ];\n\n\t\t\t}\n\n\t\t\tdelete bindingStates[ geometryId ];\n\n\t\t}\n\n\t}\n\n\tfunction releaseStatesOfGeometry( geometry ) {\n\n\t\tif ( bindingStates[ geometry.id ] === undefined ) return;\n\n\t\tconst programMap = bindingStates[ geometry.id ];\n\n\t\tfor ( const programId in programMap ) {\n\n\t\t\tconst stateMap = programMap[ programId ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ programId ];\n\n\t\t}\n\n\t\tdelete bindingStates[ geometry.id ];\n\n\t}\n\n\tfunction releaseStatesOfProgram( program ) {\n\n\t\tfor ( const geometryId in bindingStates ) {\n\n\t\t\tconst programMap = bindingStates[ geometryId ];\n\n\t\t\tif ( programMap[ program.id ] === undefined ) continue;\n\n\t\t\tconst stateMap = programMap[ program.id ];\n\n\t\t\tfor ( const wireframe in stateMap ) {\n\n\t\t\t\tdeleteVertexArrayObject( stateMap[ wireframe ].object );\n\n\t\t\t\tdelete stateMap[ wireframe ];\n\n\t\t\t}\n\n\t\t\tdelete programMap[ program.id ];\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\tresetDefaultState();\n\t\tforceUpdate = true;\n\n\t\tif ( currentState === defaultState ) return;\n\n\t\tcurrentState = defaultState;\n\t\tbindVertexArrayObject( currentState.object );\n\n\t}\n\n\t// for backward-compatibility\n\n\tfunction resetDefaultState() {\n\n\t\tdefaultState.geometry = null;\n\t\tdefaultState.program = null;\n\t\tdefaultState.wireframe = false;\n\n\t}\n\n\treturn {\n\n\t\tsetup: setup,\n\t\treset: reset,\n\t\tresetDefaultState: resetDefaultState,\n\t\tdispose: dispose,\n\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tdisableUnusedAttributes: disableUnusedAttributes\n\n\t};\n\n}\n\nfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ], counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawArraysWEBGL( mode, starts, 0, counts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl.constructor.name === 'WebGL2RenderingContext';\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\nfunction WebGLClipping( properties ) {\n\n\tconst scope = this;\n\n\tlet globalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false;\n\n\tconst plane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping ) {\n\n\t\tconst enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\n\t};\n\n\tthis.setGlobalState = function ( planes, camera ) {\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\n\t};\n\n\tthis.setState = function ( material, camera, useCache ) {\n\n\t\tconst planes = material.clippingPlanes,\n\t\t\tclipIntersection = material.clipIntersection,\n\t\t\tclipShadows = material.clipShadows;\n\n\t\tconst materialProperties = properties.get( material );\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4;\n\n\t\t\tlet dstArray = materialProperties.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, useCache );\n\n\t\t\tfor ( let i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\tlet dstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\t\tscope.numIntersection = 0;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\nfunction WebGLCubeMaps( renderer ) {\n\n\tlet cubemaps = new WeakMap();\n\n\tfunction mapTextureMapping( texture, mapping ) {\n\n\t\tif ( mapping === EquirectangularReflectionMapping ) {\n\n\t\t\ttexture.mapping = CubeReflectionMapping;\n\n\t\t} else if ( mapping === EquirectangularRefractionMapping ) {\n\n\t\t\ttexture.mapping = CubeRefractionMapping;\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tif ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping ) {\n\n\t\t\t\tif ( cubemaps.has( texture ) ) {\n\n\t\t\t\t\tconst cubemap = cubemaps.get( texture ).texture;\n\t\t\t\t\treturn mapTextureMapping( cubemap, texture.mapping );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\tif ( image && image.height > 0 ) {\n\n\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget( image.height / 2 );\n\t\t\t\t\t\trenderTarget.fromEquirectangularTexture( renderer, texture );\n\t\t\t\t\t\tcubemaps.set( texture, renderTarget );\n\n\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\treturn mapTextureMapping( renderTarget.texture, texture.mapping );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemap = cubemaps.get( texture );\n\n\t\tif ( cubemap !== undefined ) {\n\n\t\t\tcubemaps.delete( texture );\n\t\t\tcubemap.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubemaps = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass OrthographicCamera extends Camera {\n\n\tconstructor( left = - 1, right = 1, top = 1, bottom = - 1, near = 0.1, far = 2000 ) {\n\n\t\tsuper();\n\n\t\tthis.isOrthographicCamera = true;\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = left;\n\t\tthis.right = right;\n\t\tthis.top = top;\n\t\tthis.bottom = bottom;\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t}\n\n\tsetViewOffset( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tclearViewOffset() {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tupdateProjectionMatrix() {\n\n\t\tconst dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tconst dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tconst cx = ( this.right + this.left ) / 2;\n\t\tconst cy = ( this.top + this.bottom ) / 2;\n\n\t\tlet left = cx - dx;\n\t\tlet right = cx + dx;\n\t\tlet top = cy + dy;\n\t\tlet bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tconst scaleW = ( this.right - this.left ) / this.view.fullWidth / this.zoom;\n\t\t\tconst scaleH = ( this.top - this.bottom ) / this.view.fullHeight / this.zoom;\n\n\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\tright = left + scaleW * this.view.width;\n\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\tbottom = top - scaleH * this.view.height;\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far, this.coordinateSystem );\n\n\t\tthis.projectionMatrixInverse.copy( this.projectionMatrix ).invert();\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst LOD_MIN = 4;\n\n// The standard deviations (radians) associated with the extra mips. These are\n// chosen to approximate a Trowbridge-Reitz distribution function times the\n// geometric shadowing function. These sigma values squared must match the\n// variance #defines in cube_uv_reflection_fragment.glsl.js.\nconst EXTRA_LOD_SIGMA = [ 0.125, 0.215, 0.35, 0.446, 0.526, 0.582 ];\n\n// The maximum length of the blur for loop. Smaller sigmas will use fewer\n// samples and exit early, but not recompile the shader.\nconst MAX_SAMPLES = 20;\n\nconst _flatCamera = /*@__PURE__*/ new OrthographicCamera();\nconst _clearColor = /*@__PURE__*/ new Color();\nlet _oldTarget = null;\nlet _oldActiveCubeFace = 0;\nlet _oldActiveMipmapLevel = 0;\n\n// Golden Ratio\nconst PHI = ( 1 + Math.sqrt( 5 ) ) / 2;\nconst INV_PHI = 1 / PHI;\n\n// Vertices of a dodecahedron (except the opposites, which represent the\n// same axis), used as axis directions evenly spread on a sphere.\nconst _axisDirections = [\n\t/*@__PURE__*/ new Vector3( 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, 1 ),\n\t/*@__PURE__*/ new Vector3( 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( - 1, 1, - 1 ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, INV_PHI ),\n\t/*@__PURE__*/ new Vector3( 0, PHI, - INV_PHI ),\n\t/*@__PURE__*/ new Vector3( INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( - INV_PHI, 0, PHI ),\n\t/*@__PURE__*/ new Vector3( PHI, INV_PHI, 0 ),\n\t/*@__PURE__*/ new Vector3( - PHI, INV_PHI, 0 ) ];\n\n/**\n * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n * (PMREM) from a cubeMap environment texture. This allows different levels of\n * blur to be quickly accessed based on material roughness. It is packed into a\n * special CubeUV format that allows us to perform custom interpolation so that\n * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n * higher roughness levels. In this way we maintain resolution to smoothly\n * interpolate diffuse lighting while limiting sampling computation.\n *\n * Paper: Fast, Accurate Image-Based Lighting\n * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n*/\n\nclass PMREMGenerator {\n\n\tconstructor( renderer ) {\n\n\t\tthis._renderer = renderer;\n\t\tthis._pingPongRenderTarget = null;\n\n\t\tthis._lodMax = 0;\n\t\tthis._cubeSize = 0;\n\t\tthis._lodPlanes = [];\n\t\tthis._sizeLods = [];\n\t\tthis._sigmas = [];\n\n\t\tthis._blurMaterial = null;\n\t\tthis._cubemapMaterial = null;\n\t\tthis._equirectMaterial = null;\n\n\t\tthis._compileMaterial( this._blurMaterial );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t * is placed at the origin).\n\t */\n\tfromScene( scene, sigma = 0, near = 0.1, far = 100 ) {\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tthis._setSize( 256 );\n\n\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\t\tcubeUVRenderTarget.depthBuffer = true;\n\n\t\tthis._sceneToCubeUV( scene, near, far, cubeUVRenderTarget );\n\n\t\tif ( sigma > 0 ) {\n\n\t\t\tthis._blur( cubeUVRenderTarget, 0, 0, sigma );\n\n\t\t}\n\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t * or HDR. The ideal input image size is 1k (1024 x 512),\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromEquirectangular( equirectangular, renderTarget = null ) {\n\n\t\treturn this._fromTexture( equirectangular, renderTarget );\n\n\t}\n\n\t/**\n\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t * or HDR. The ideal input cube size is 256 x 256,\n\t * as this matches best with the 256 x 256 cubemap output.\n\t */\n\tfromCubemap( cubemap, renderTarget = null ) {\n\n\t\treturn this._fromTexture( cubemap, renderTarget );\n\n\t}\n\n\t/**\n\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileCubemapShader() {\n\n\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\t\t\tthis._compileMaterial( this._cubemapMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t * your texture's network fetch for increased concurrency.\n\t */\n\tcompileEquirectangularShader() {\n\n\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\t\t\tthis._compileMaterial( this._equirectMaterial );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t * one of them will cause any others to also become unusable.\n\t */\n\tdispose() {\n\n\t\tthis._dispose();\n\n\t\tif ( this._cubemapMaterial !== null ) this._cubemapMaterial.dispose();\n\t\tif ( this._equirectMaterial !== null ) this._equirectMaterial.dispose();\n\n\t}\n\n\t// private interface\n\n\t_setSize( cubeSize ) {\n\n\t\tthis._lodMax = Math.floor( Math.log2( cubeSize ) );\n\t\tthis._cubeSize = Math.pow( 2, this._lodMax );\n\n\t}\n\n\t_dispose() {\n\n\t\tif ( this._blurMaterial !== null ) this._blurMaterial.dispose();\n\n\t\tif ( this._pingPongRenderTarget !== null ) this._pingPongRenderTarget.dispose();\n\n\t\tfor ( let i = 0; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tthis._lodPlanes[ i ].dispose();\n\n\t\t}\n\n\t}\n\n\t_cleanup( outputTarget ) {\n\n\t\tthis._renderer.setRenderTarget( _oldTarget, _oldActiveCubeFace, _oldActiveMipmapLevel );\n\t\toutputTarget.scissorTest = false;\n\t\t_setViewport( outputTarget, 0, 0, outputTarget.width, outputTarget.height );\n\n\t}\n\n\t_fromTexture( texture, renderTarget ) {\n\n\t\tif ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping ) {\n\n\t\t\tthis._setSize( texture.image.length === 0 ? 16 : ( texture.image[ 0 ].width || texture.image[ 0 ].image.width ) );\n\n\t\t} else { // Equirectangular\n\n\t\t\tthis._setSize( texture.image.width / 4 );\n\n\t\t}\n\n\t\t_oldTarget = this._renderer.getRenderTarget();\n\t\t_oldActiveCubeFace = this._renderer.getActiveCubeFace();\n\t\t_oldActiveMipmapLevel = this._renderer.getActiveMipmapLevel();\n\n\t\tconst cubeUVRenderTarget = renderTarget || this._allocateTargets();\n\t\tthis._textureToCubeUV( texture, cubeUVRenderTarget );\n\t\tthis._applyPMREM( cubeUVRenderTarget );\n\t\tthis._cleanup( cubeUVRenderTarget );\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_allocateTargets() {\n\n\t\tconst width = 3 * Math.max( this._cubeSize, 16 * 7 );\n\t\tconst height = 4 * this._cubeSize;\n\n\t\tconst params = {\n\t\t\tmagFilter: LinearFilter,\n\t\t\tminFilter: LinearFilter,\n\t\t\tgenerateMipmaps: false,\n\t\t\ttype: HalfFloatType,\n\t\t\tformat: RGBAFormat,\n\t\t\tcolorSpace: LinearSRGBColorSpace,\n\t\t\tdepthBuffer: false\n\t\t};\n\n\t\tconst cubeUVRenderTarget = _createRenderTarget( width, height, params );\n\n\t\tif ( this._pingPongRenderTarget === null || this._pingPongRenderTarget.width !== width || this._pingPongRenderTarget.height !== height ) {\n\n\t\t\tif ( this._pingPongRenderTarget !== null ) {\n\n\t\t\t\tthis._dispose();\n\n\t\t\t}\n\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget( width, height, params );\n\n\t\t\tconst { _lodMax } = this;\n\t\t\t( { sizeLods: this._sizeLods, lodPlanes: this._lodPlanes, sigmas: this._sigmas } = _createPlanes( _lodMax ) );\n\n\t\t\tthis._blurMaterial = _getBlurShader( _lodMax, width, height );\n\n\t\t}\n\n\t\treturn cubeUVRenderTarget;\n\n\t}\n\n\t_compileMaterial( material ) {\n\n\t\tconst tmpMesh = new Mesh( this._lodPlanes[ 0 ], material );\n\t\tthis._renderer.compile( tmpMesh, _flatCamera );\n\n\t}\n\n\t_sceneToCubeUV( scene, near, far, cubeUVRenderTarget ) {\n\n\t\tconst fov = 90;\n\t\tconst aspect = 1;\n\t\tconst cubeCamera = new PerspectiveCamera( fov, aspect, near, far );\n\t\tconst upSign = [ 1, - 1, 1, 1, 1, 1 ];\n\t\tconst forwardSign = [ 1, 1, 1, - 1, - 1, - 1 ];\n\t\tconst renderer = this._renderer;\n\n\t\tconst originalAutoClear = renderer.autoClear;\n\t\tconst toneMapping = renderer.toneMapping;\n\t\trenderer.getClearColor( _clearColor );\n\n\t\trenderer.toneMapping = NoToneMapping;\n\t\trenderer.autoClear = false;\n\n\t\tconst backgroundMaterial = new MeshBasicMaterial( {\n\t\t\tname: 'PMREM.Background',\n\t\t\tside: BackSide,\n\t\t\tdepthWrite: false,\n\t\t\tdepthTest: false,\n\t\t} );\n\n\t\tconst backgroundBox = new Mesh( new BoxGeometry(), backgroundMaterial );\n\n\t\tlet useSolidColor = false;\n\t\tconst background = scene.background;\n\n\t\tif ( background ) {\n\n\t\t\tif ( background.isColor ) {\n\n\t\t\t\tbackgroundMaterial.color.copy( background );\n\t\t\t\tscene.background = null;\n\t\t\t\tuseSolidColor = true;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tbackgroundMaterial.color.copy( _clearColor );\n\t\t\tuseSolidColor = true;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\tconst col = i % 3;\n\n\t\t\tif ( col === 0 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( forwardSign[ i ], 0, 0 );\n\n\t\t\t} else if ( col === 1 ) {\n\n\t\t\t\tcubeCamera.up.set( 0, 0, upSign[ i ] );\n\t\t\t\tcubeCamera.lookAt( 0, forwardSign[ i ], 0 );\n\n\t\t\t} else {\n\n\t\t\t\tcubeCamera.up.set( 0, upSign[ i ], 0 );\n\t\t\t\tcubeCamera.lookAt( 0, 0, forwardSign[ i ] );\n\n\t\t\t}\n\n\t\t\tconst size = this._cubeSize;\n\n\t\t\t_setViewport( cubeUVRenderTarget, col * size, i > 2 ? size : 0, size, size );\n\n\t\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\n\t\t\tif ( useSolidColor ) {\n\n\t\t\t\trenderer.render( backgroundBox, cubeCamera );\n\n\t\t\t}\n\n\t\t\trenderer.render( scene, cubeCamera );\n\n\t\t}\n\n\t\tbackgroundBox.geometry.dispose();\n\t\tbackgroundBox.material.dispose();\n\n\t\trenderer.toneMapping = toneMapping;\n\t\trenderer.autoClear = originalAutoClear;\n\t\tscene.background = background;\n\n\t}\n\n\t_textureToCubeUV( texture, cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\n\t\tconst isCubeTexture = ( texture.mapping === CubeReflectionMapping || texture.mapping === CubeRefractionMapping );\n\n\t\tif ( isCubeTexture ) {\n\n\t\t\tif ( this._cubemapMaterial === null ) {\n\n\t\t\t\tthis._cubemapMaterial = _getCubemapMaterial();\n\n\t\t\t}\n\n\t\t\tthis._cubemapMaterial.uniforms.flipEnvMap.value = ( texture.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t} else {\n\n\t\t\tif ( this._equirectMaterial === null ) {\n\n\t\t\t\tthis._equirectMaterial = _getEquirectMaterial();\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst material = isCubeTexture ? this._cubemapMaterial : this._equirectMaterial;\n\t\tconst mesh = new Mesh( this._lodPlanes[ 0 ], material );\n\n\t\tconst uniforms = material.uniforms;\n\n\t\tuniforms[ 'envMap' ].value = texture;\n\n\t\tconst size = this._cubeSize;\n\n\t\t_setViewport( cubeUVRenderTarget, 0, 0, 3 * size, 2 * size );\n\n\t\trenderer.setRenderTarget( cubeUVRenderTarget );\n\t\trenderer.render( mesh, _flatCamera );\n\n\t}\n\n\t_applyPMREM( cubeUVRenderTarget ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst autoClear = renderer.autoClear;\n\t\trenderer.autoClear = false;\n\n\t\tfor ( let i = 1; i < this._lodPlanes.length; i ++ ) {\n\n\t\t\tconst sigma = Math.sqrt( this._sigmas[ i ] * this._sigmas[ i ] - this._sigmas[ i - 1 ] * this._sigmas[ i - 1 ] );\n\n\t\t\tconst poleAxis = _axisDirections[ ( i - 1 ) % _axisDirections.length ];\n\n\t\t\tthis._blur( cubeUVRenderTarget, i - 1, i, sigma, poleAxis );\n\n\t\t}\n\n\t\trenderer.autoClear = autoClear;\n\n\t}\n\n\t/**\n\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t * accurate at the poles, but still does a decent job.\n\t */\n\t_blur( cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis ) {\n\n\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\tthis._halfBlur(\n\t\t\tcubeUVRenderTarget,\n\t\t\tpingPongRenderTarget,\n\t\t\tlodIn,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'latitudinal',\n\t\t\tpoleAxis );\n\n\t\tthis._halfBlur(\n\t\t\tpingPongRenderTarget,\n\t\t\tcubeUVRenderTarget,\n\t\t\tlodOut,\n\t\t\tlodOut,\n\t\t\tsigma,\n\t\t\t'longitudinal',\n\t\t\tpoleAxis );\n\n\t}\n\n\t_halfBlur( targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis ) {\n\n\t\tconst renderer = this._renderer;\n\t\tconst blurMaterial = this._blurMaterial;\n\n\t\tif ( direction !== 'latitudinal' && direction !== 'longitudinal' ) {\n\n\t\t\tconsole.error(\n\t\t\t\t'blur direction must be either latitudinal or longitudinal!' );\n\n\t\t}\n\n\t\t// Number of standard deviations at which to cut off the discrete approximation.\n\t\tconst STANDARD_DEVIATIONS = 3;\n\n\t\tconst blurMesh = new Mesh( this._lodPlanes[ lodOut ], blurMaterial );\n\t\tconst blurUniforms = blurMaterial.uniforms;\n\n\t\tconst pixels = this._sizeLods[ lodIn ] - 1;\n\t\tconst radiansPerPixel = isFinite( sigmaRadians ) ? Math.PI / ( 2 * pixels ) : 2 * Math.PI / ( 2 * MAX_SAMPLES - 1 );\n\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\tconst samples = isFinite( sigmaRadians ) ? 1 + Math.floor( STANDARD_DEVIATIONS * sigmaPixels ) : MAX_SAMPLES;\n\n\t\tif ( samples > MAX_SAMPLES ) {\n\n\t\t\tconsole.warn( `sigmaRadians, ${\n\t\t\t\tsigmaRadians}, is too large and will clip, as it requested ${\n\t\t\t\tsamples} samples when the maximum is set to ${MAX_SAMPLES}` );\n\n\t\t}\n\n\t\tconst weights = [];\n\t\tlet sum = 0;\n\n\t\tfor ( let i = 0; i < MAX_SAMPLES; ++ i ) {\n\n\t\t\tconst x = i / sigmaPixels;\n\t\t\tconst weight = Math.exp( - x * x / 2 );\n\t\t\tweights.push( weight );\n\n\t\t\tif ( i === 0 ) {\n\n\t\t\t\tsum += weight;\n\n\t\t\t} else if ( i < samples ) {\n\n\t\t\t\tsum += 2 * weight;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( let i = 0; i < weights.length; i ++ ) {\n\n\t\t\tweights[ i ] = weights[ i ] / sum;\n\n\t\t}\n\n\t\tblurUniforms[ 'envMap' ].value = targetIn.texture;\n\t\tblurUniforms[ 'samples' ].value = samples;\n\t\tblurUniforms[ 'weights' ].value = weights;\n\t\tblurUniforms[ 'latitudinal' ].value = direction === 'latitudinal';\n\n\t\tif ( poleAxis ) {\n\n\t\t\tblurUniforms[ 'poleAxis' ].value = poleAxis;\n\n\t\t}\n\n\t\tconst { _lodMax } = this;\n\t\tblurUniforms[ 'dTheta' ].value = radiansPerPixel;\n\t\tblurUniforms[ 'mipInt' ].value = _lodMax - lodIn;\n\n\t\tconst outputSize = this._sizeLods[ lodOut ];\n\t\tconst x = 3 * outputSize * ( lodOut > _lodMax - LOD_MIN ? lodOut - _lodMax + LOD_MIN : 0 );\n\t\tconst y = 4 * ( this._cubeSize - outputSize );\n\n\t\t_setViewport( targetOut, x, y, 3 * outputSize, 2 * outputSize );\n\t\trenderer.setRenderTarget( targetOut );\n\t\trenderer.render( blurMesh, _flatCamera );\n\n\t}\n\n}\n\n\n\nfunction _createPlanes( lodMax ) {\n\n\tconst lodPlanes = [];\n\tconst sizeLods = [];\n\tconst sigmas = [];\n\n\tlet lod = lodMax;\n\n\tconst totalLods = lodMax - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length;\n\n\tfor ( let i = 0; i < totalLods; i ++ ) {\n\n\t\tconst sizeLod = Math.pow( 2, lod );\n\t\tsizeLods.push( sizeLod );\n\t\tlet sigma = 1.0 / sizeLod;\n\n\t\tif ( i > lodMax - LOD_MIN ) {\n\n\t\t\tsigma = EXTRA_LOD_SIGMA[ i - lodMax + LOD_MIN - 1 ];\n\n\t\t} else if ( i === 0 ) {\n\n\t\t\tsigma = 0;\n\n\t\t}\n\n\t\tsigmas.push( sigma );\n\n\t\tconst texelSize = 1.0 / ( sizeLod - 2 );\n\t\tconst min = - texelSize;\n\t\tconst max = 1 + texelSize;\n\t\tconst uv1 = [ min, min, max, min, max, max, min, min, max, max, min, max ];\n\n\t\tconst cubeFaces = 6;\n\t\tconst vertices = 6;\n\t\tconst positionSize = 3;\n\t\tconst uvSize = 2;\n\t\tconst faceIndexSize = 1;\n\n\t\tconst position = new Float32Array( positionSize * vertices * cubeFaces );\n\t\tconst uv = new Float32Array( uvSize * vertices * cubeFaces );\n\t\tconst faceIndex = new Float32Array( faceIndexSize * vertices * cubeFaces );\n\n\t\tfor ( let face = 0; face < cubeFaces; face ++ ) {\n\n\t\t\tconst x = ( face % 3 ) * 2 / 3 - 1;\n\t\t\tconst y = face > 2 ? 0 : - 1;\n\t\t\tconst coordinates = [\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y, 0,\n\t\t\t\tx + 2 / 3, y + 1, 0,\n\t\t\t\tx, y + 1, 0\n\t\t\t];\n\t\t\tposition.set( coordinates, positionSize * vertices * face );\n\t\t\tuv.set( uv1, uvSize * vertices * face );\n\t\t\tconst fill = [ face, face, face, face, face, face ];\n\t\t\tfaceIndex.set( fill, faceIndexSize * vertices * face );\n\n\t\t}\n\n\t\tconst planes = new BufferGeometry();\n\t\tplanes.setAttribute( 'position', new BufferAttribute( position, positionSize ) );\n\t\tplanes.setAttribute( 'uv', new BufferAttribute( uv, uvSize ) );\n\t\tplanes.setAttribute( 'faceIndex', new BufferAttribute( faceIndex, faceIndexSize ) );\n\t\tlodPlanes.push( planes );\n\n\t\tif ( lod > LOD_MIN ) {\n\n\t\t\tlod --;\n\n\t\t}\n\n\t}\n\n\treturn { lodPlanes, sizeLods, sigmas };\n\n}\n\nfunction _createRenderTarget( width, height, params ) {\n\n\tconst cubeUVRenderTarget = new WebGLRenderTarget( width, height, params );\n\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\tcubeUVRenderTarget.scissorTest = true;\n\treturn cubeUVRenderTarget;\n\n}\n\nfunction _setViewport( target, x, y, width, height ) {\n\n\ttarget.viewport.set( x, y, width, height );\n\ttarget.scissor.set( x, y, width, height );\n\n}\n\nfunction _getBlurShader( lodMax, width, height ) {\n\n\tconst weights = new Float32Array( MAX_SAMPLES );\n\tconst poleAxis = new Vector3( 0, 1, 0 );\n\tconst shaderMaterial = new ShaderMaterial( {\n\n\t\tname: 'SphericalGaussianBlur',\n\n\t\tdefines: {\n\t\t\t'n': MAX_SAMPLES,\n\t\t\t'CUBEUV_TEXEL_WIDTH': 1.0 / width,\n\t\t\t'CUBEUV_TEXEL_HEIGHT': 1.0 / height,\n\t\t\t'CUBEUV_MAX_MIP': `${lodMax}.0`,\n\t\t},\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'samples': { value: 1 },\n\t\t\t'weights': { value: weights },\n\t\t\t'latitudinal': { value: false },\n\t\t\t'dTheta': { value: 0 },\n\t\t\t'mipInt': { value: 0 },\n\t\t\t'poleAxis': { value: poleAxis }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n\treturn shaderMaterial;\n\n}\n\nfunction _getEquirectMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'EquirectangularToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCubemapMaterial() {\n\n\treturn new ShaderMaterial( {\n\n\t\tname: 'CubemapToCubeUV',\n\n\t\tuniforms: {\n\t\t\t'envMap': { value: null },\n\t\t\t'flipEnvMap': { value: - 1 }\n\t\t},\n\n\t\tvertexShader: _getCommonVertexShader(),\n\n\t\tfragmentShader: /* glsl */`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t`,\n\n\t\tblending: NoBlending,\n\t\tdepthTest: false,\n\t\tdepthWrite: false\n\n\t} );\n\n}\n\nfunction _getCommonVertexShader() {\n\n\treturn /* glsl */`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`;\n\n}\n\nfunction WebGLCubeUVMaps( renderer ) {\n\n\tlet cubeUVmaps = new WeakMap();\n\n\tlet pmremGenerator = null;\n\n\tfunction get( texture ) {\n\n\t\tif ( texture && texture.isTexture ) {\n\n\t\t\tconst mapping = texture.mapping;\n\n\t\t\tconst isEquirectMap = ( mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping );\n\t\t\tconst isCubeMap = ( mapping === CubeReflectionMapping || mapping === CubeRefractionMapping );\n\n\t\t\t// equirect/cube map to cubeUV conversion\n\n\t\t\tif ( isEquirectMap || isCubeMap ) {\n\n\t\t\t\tif ( texture.isRenderTargetTexture && texture.needsPMREMUpdate === true ) {\n\n\t\t\t\t\ttexture.needsPMREMUpdate = false;\n\n\t\t\t\t\tlet renderTarget = cubeUVmaps.get( texture );\n\n\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\trenderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture, renderTarget ) : pmremGenerator.fromCubemap( texture, renderTarget );\n\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( cubeUVmaps.has( texture ) ) {\n\n\t\t\t\t\t\treturn cubeUVmaps.get( texture ).texture;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif ( ( isEquirectMap && image && image.height > 0 ) || ( isCubeMap && image && isCubeTextureComplete( image ) ) ) {\n\n\t\t\t\t\t\t\tif ( pmremGenerator === null ) pmremGenerator = new PMREMGenerator( renderer );\n\n\t\t\t\t\t\t\tconst renderTarget = isEquirectMap ? pmremGenerator.fromEquirectangular( texture ) : pmremGenerator.fromCubemap( texture );\n\t\t\t\t\t\t\tcubeUVmaps.set( texture, renderTarget );\n\n\t\t\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\t\t\treturn renderTarget.texture;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\n\t\t\t\t\t\t\treturn null;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tfunction isCubeTextureComplete( image ) {\n\n\t\tlet count = 0;\n\t\tconst length = 6;\n\n\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\tif ( image[ i ] !== undefined ) count ++;\n\n\t\t}\n\n\t\treturn count === length;\n\n\n\t}\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tconst cubemapUV = cubeUVmaps.get( texture );\n\n\t\tif ( cubemapUV !== undefined ) {\n\n\t\t\tcubeUVmaps.delete( texture );\n\t\t\tcubemapUV.dispose();\n\n\t\t}\n\n\t}\n\n\tfunction dispose() {\n\n\t\tcubeUVmaps = new WeakMap();\n\n\t\tif ( pmremGenerator !== null ) {\n\n\t\t\tpmremGenerator.dispose();\n\t\t\tpmremGenerator = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLExtensions( gl ) {\n\n\tconst extensions = {};\n\n\tfunction getExtension( name ) {\n\n\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\treturn extensions[ name ];\n\n\t\t}\n\n\t\tlet extension;\n\n\t\tswitch ( name ) {\n\n\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\tbreak;\n\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\textension = gl.getExtension( name );\n\n\t\t}\n\n\t\textensions[ name ] = extension;\n\n\t\treturn extension;\n\n\t}\n\n\treturn {\n\n\t\thas: function ( name ) {\n\n\t\t\treturn getExtension( name ) !== null;\n\n\t\t},\n\n\t\tinit: function ( capabilities ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgetExtension( 'EXT_color_buffer_float' );\n\n\t\t\t} else {\n\n\t\t\t\tgetExtension( 'WEBGL_depth_texture' );\n\t\t\t\tgetExtension( 'OES_texture_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float' );\n\t\t\t\tgetExtension( 'OES_texture_half_float_linear' );\n\t\t\t\tgetExtension( 'OES_standard_derivatives' );\n\t\t\t\tgetExtension( 'OES_element_index_uint' );\n\t\t\t\tgetExtension( 'OES_vertex_array_object' );\n\t\t\t\tgetExtension( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\tgetExtension( 'OES_texture_float_linear' );\n\t\t\tgetExtension( 'EXT_color_buffer_half_float' );\n\t\t\tgetExtension( 'WEBGL_multisampled_render_to_texture' );\n\n\t\t},\n\n\t\tget: function ( name ) {\n\n\t\t\tconst extension = getExtension( name );\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tfor ( const name in geometry.morphAttributes ) {\n\n\t\t\tconst array = geometry.morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.remove( array[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else if ( geometryPosition !== undefined ) {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tlet mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tlet type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfo.update( count, mode, 1 );\n\n\t}\n\n\tfunction renderInstances( start, count, primcount ) {\n\n\t\tif ( primcount === 0 ) return;\n\n\t\tlet extension, methodName;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\textension = gl;\n\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t} else {\n\n\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\tinfo.update( count, mode, primcount );\n\n\t}\n\n\tfunction renderMultiDraw( starts, counts, drawCount ) {\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\tconst extension = extensions.get( 'WEBGL_multi_draw' );\n\t\tif ( extension === null ) {\n\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\tthis.render( starts[ i ] / bytesPerElement, counts[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\textension.multiDrawElementsWEBGL( mode, counts, 0, type, starts, 0, drawCount );\n\n\t\t\tlet elementCount = 0;\n\t\t\tfor ( let i = 0; i < drawCount; i ++ ) {\n\n\t\t\t\telementCount += counts[ i ];\n\n\t\t\t}\n\n\t\t\tinfo.update( elementCount, mode, 1 );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\tthis.renderMultiDraw = renderMultiDraw;\n\n}\n\nfunction WebGLInfo( gl ) {\n\n\tconst memory = {\n\t\tgeometries: 0,\n\t\ttextures: 0\n\t};\n\n\tconst render = {\n\t\tframe: 0,\n\t\tcalls: 0,\n\t\ttriangles: 0,\n\t\tpoints: 0,\n\t\tlines: 0\n\t};\n\n\tfunction update( count, mode, instanceCount ) {\n\n\t\trender.calls ++;\n\n\t\tswitch ( mode ) {\n\n\t\t\tcase gl.TRIANGLES:\n\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINES:\n\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_STRIP:\n\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\tbreak;\n\n\t\t\tcase gl.LINE_LOOP:\n\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tcase gl.POINTS:\n\t\t\t\trender.points += instanceCount * count;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tfunction reset() {\n\n\t\trender.calls = 0;\n\t\trender.triangles = 0;\n\t\trender.points = 0;\n\t\trender.lines = 0;\n\n\t}\n\n\treturn {\n\t\tmemory: memory,\n\t\trender: render,\n\t\tprograms: null,\n\t\tautoReset: true,\n\t\treset: reset,\n\t\tupdate: update\n\t};\n\n}\n\nfunction numericalSort( a, b ) {\n\n\treturn a[ 0 ] - b[ 0 ];\n\n}\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl, capabilities, textures ) {\n\n\tconst influencesList = {};\n\tconst morphInfluences = new Float32Array( 8 );\n\tconst morphTextures = new WeakMap();\n\tconst morph = new Vector4();\n\n\tconst workInfluences = [];\n\n\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\tworkInfluences[ i ] = [ i, 0 ];\n\n\t}\n\n\tfunction update( object, geometry, program ) {\n\n\t\tconst objectInfluences = object.morphTargetInfluences;\n\n\t\tif ( capabilities.isWebGL2 === true ) {\n\n\t\t\t// instead of using attributes, the WebGL 2 code path encodes morph targets\n\t\t\t// into an array of data textures. Each layer represents a single morph target.\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tlet entry = morphTextures.get( geometry );\n\n\t\t\tif ( entry === undefined || entry.count !== morphTargetsCount ) {\n\n\t\t\t\tif ( entry !== undefined ) entry.texture.dispose();\n\n\t\t\t\tconst hasMorphPosition = geometry.morphAttributes.position !== undefined;\n\t\t\t\tconst hasMorphNormals = geometry.morphAttributes.normal !== undefined;\n\t\t\t\tconst hasMorphColors = geometry.morphAttributes.color !== undefined;\n\n\t\t\t\tconst morphTargets = geometry.morphAttributes.position || [];\n\t\t\t\tconst morphNormals = geometry.morphAttributes.normal || [];\n\t\t\t\tconst morphColors = geometry.morphAttributes.color || [];\n\n\t\t\t\tlet vertexDataCount = 0;\n\n\t\t\t\tif ( hasMorphPosition === true ) vertexDataCount = 1;\n\t\t\t\tif ( hasMorphNormals === true ) vertexDataCount = 2;\n\t\t\t\tif ( hasMorphColors === true ) vertexDataCount = 3;\n\n\t\t\t\tlet width = geometry.attributes.position.count * vertexDataCount;\n\t\t\t\tlet height = 1;\n\n\t\t\t\tif ( width > capabilities.maxTextureSize ) {\n\n\t\t\t\t\theight = Math.ceil( width / capabilities.maxTextureSize );\n\t\t\t\t\twidth = capabilities.maxTextureSize;\n\n\t\t\t\t}\n\n\t\t\t\tconst buffer = new Float32Array( width * height * 4 * morphTargetsCount );\n\n\t\t\t\tconst texture = new DataArrayTexture( buffer, width, height, morphTargetsCount );\n\t\t\t\ttexture.type = FloatType;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t// fill buffer\n\n\t\t\t\tconst vertexDataStride = vertexDataCount * 4;\n\n\t\t\t\tfor ( let i = 0; i < morphTargetsCount; i ++ ) {\n\n\t\t\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\t\t\tconst morphNormal = morphNormals[ i ];\n\t\t\t\t\tconst morphColor = morphColors[ i ];\n\n\t\t\t\t\tconst offset = width * height * 4 * i;\n\n\t\t\t\t\tfor ( let j = 0; j < morphTarget.count; j ++ ) {\n\n\t\t\t\t\t\tconst stride = j * vertexDataStride;\n\n\t\t\t\t\t\tif ( hasMorphPosition === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphTarget, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 0 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 1 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 2 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 3 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphNormals === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphNormal, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 4 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 5 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 6 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 7 ] = 0;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasMorphColors === true ) {\n\n\t\t\t\t\t\t\tmorph.fromBufferAttribute( morphColor, j );\n\n\t\t\t\t\t\t\tbuffer[ offset + stride + 8 ] = morph.x;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 9 ] = morph.y;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 10 ] = morph.z;\n\t\t\t\t\t\t\tbuffer[ offset + stride + 11 ] = ( morphColor.itemSize === 4 ) ? morph.w : 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tentry = {\n\t\t\t\t\tcount: morphTargetsCount,\n\t\t\t\t\ttexture: texture,\n\t\t\t\t\tsize: new Vector2( width, height )\n\t\t\t\t};\n\n\t\t\t\tmorphTextures.set( geometry, entry );\n\n\t\t\t\tfunction disposeTexture() {\n\n\t\t\t\t\ttexture.dispose();\n\n\t\t\t\t\tmorphTextures.delete( geometry );\n\n\t\t\t\t\tgeometry.removeEventListener( 'dispose', disposeTexture );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.addEventListener( 'dispose', disposeTexture );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < objectInfluences.length; i ++ ) {\n\n\t\t\t\tmorphInfluencesSum += objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', objectInfluences );\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTexture', entry.texture, textures );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetsTextureSize', entry.size );\n\n\n\t\t} else {\n\n\t\t\t// When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\n\t\t\tlet influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined || influences.length !== length ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( let i = 0; i < length; i ++ ) {\n\n\t\t\t\tconst influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tif ( i < length && influences[ i ][ 1 ] ) {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = influences[ i ][ 0 ];\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = influences[ i ][ 1 ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tworkInfluences[ i ][ 0 ] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[ i ][ 1 ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tworkInfluences.sort( numericalSort );\n\n\t\t\tconst morphTargets = geometry.morphAttributes.position;\n\t\t\tconst morphNormals = geometry.morphAttributes.normal;\n\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor ( let i = 0; i < 8; i ++ ) {\n\n\t\t\t\tconst influence = workInfluences[ i ];\n\t\t\t\tconst index = influence[ 0 ];\n\t\t\t\tconst value = influence[ 1 ];\n\n\t\t\t\tif ( index !== Number.MAX_SAFE_INTEGER && value ) {\n\n\t\t\t\t\tif ( morphTargets && geometry.getAttribute( 'morphTarget' + i ) !== morphTargets[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.getAttribute( 'morphNormal' + i ) !== morphNormals[ index ] ) {\n\n\t\t\t\t\t\tgeometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( morphTargets && geometry.hasAttribute( 'morphTarget' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphTarget' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( morphNormals && geometry.hasAttribute( 'morphNormal' + i ) === true ) {\n\n\t\t\t\t\t\tgeometry.deleteAttribute( 'morphNormal' + i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\nfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\tlet updateMap = new WeakMap();\n\n\tfunction update( object ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\tconst geometry = object.geometry;\n\t\tconst buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateMap.get( buffergeometry ) !== frame ) {\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateMap.set( buffergeometry, frame );\n\n\t\t}\n\n\t\tif ( object.isInstancedMesh ) {\n\n\t\t\tif ( object.hasEventListener( 'dispose', onInstancedMeshDispose ) === false ) {\n\n\t\t\t\tobject.addEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\t\t}\n\n\t\t\tif ( updateMap.get( object ) !== frame ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, gl.ARRAY_BUFFER );\n\n\t\t\t\tif ( object.instanceColor !== null ) {\n\n\t\t\t\t\tattributes.update( object.instanceColor, gl.ARRAY_BUFFER );\n\n\t\t\t\t}\n\n\t\t\t\tupdateMap.set( object, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\tconst skeleton = object.skeleton;\n\n\t\t\tif ( updateMap.get( skeleton ) !== frame ) {\n\n\t\t\t\tskeleton.update();\n\n\t\t\t\tupdateMap.set( skeleton, frame );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tupdateMap = new WeakMap();\n\n\t}\n\n\tfunction onInstancedMeshDispose( event ) {\n\n\t\tconst instancedMesh = event.target;\n\n\t\tinstancedMesh.removeEventListener( 'dispose', onInstancedMeshDispose );\n\n\t\tattributes.remove( instancedMesh.instanceMatrix );\n\n\t\tif ( instancedMesh.instanceColor !== null ) attributes.remove( instancedMesh.instanceColor );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass DepthTexture extends Texture {\n\n\tconstructor( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) type = UnsignedIntType;\n\t\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isDepthTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.compareFunction = null;\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.compareFunction = source.compareFunction;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.compareFunction !== null ) data.compareFunction = this.compareFunction;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\n\nconst emptyShadowTexture = /*@__PURE__*/ new DepthTexture( 1, 1 );\nemptyShadowTexture.compareFunction = LessEqualCompare;\n\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\tconst emptyTexture2D = ( this.type === gl.SAMPLER_2D_SHADOW ) ? emptyShadowTexture : emptyTexture;\n\n\ttextures.setTexture2D( v || emptyTexture2D, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.type = activeInfo.type;\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tconst shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\treturn shader;\n\n}\n\n// From https://www.khronos.org/registry/webgl/extensions/KHR_parallel_shader_compile/\nconst COMPLETION_STATUS_KHR = 0x91B1;\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( colorSpace ) {\n\n\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\tconst encodingPrimaries = ColorManagement.getPrimaries( colorSpace );\n\n\tlet gamutMapping;\n\n\tif ( workingPrimaries === encodingPrimaries ) {\n\n\t\tgamutMapping = '';\n\n\t} else if ( workingPrimaries === P3Primaries && encodingPrimaries === Rec709Primaries ) {\n\n\t\tgamutMapping = 'LinearDisplayP3ToLinearSRGB';\n\n\t} else if ( workingPrimaries === Rec709Primaries && encodingPrimaries === P3Primaries ) {\n\n\t\tgamutMapping = 'LinearSRGBToLinearDisplayP3';\n\n\t}\n\n\tswitch ( colorSpace ) {\n\n\t\tcase LinearSRGBColorSpace:\n\t\tcase LinearDisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t\tcase SRGBColorSpace:\n\t\tcase DisplayP3ColorSpace:\n\t\t\treturn [ gamutMapping, 'sRGBTransferOETF' ];\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported color space:', colorSpace );\n\t\t\treturn [ gamutMapping, 'LinearTransferOETF' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, colorSpace ) {\n\n\tconst components = getEncodingComponents( colorSpace );\n\treturn `vec4 ${functionName}( vec4 value ) { return ${components[ 0 ]}( ${components[ 1 ]}( value ) ); }`;\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.normalMapTangentSpace || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nconst shaderChunkMap = new Map( [\n\t[ 'encodings_fragment', 'colorspace_fragment' ], // @deprecated, r154\n\t[ 'encodings_pars_fragment', 'colorspace_pars_fragment' ], // @deprecated, r154\n\t[ 'output_fragment', 'opaque_fragment' ], // @deprecated, r154\n] );\n\nfunction includeReplacer( match, include ) {\n\n\tlet string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tconst newInclude = shaderChunkMap.get( include );\n\n\t\tif ( newInclude !== undefined ) {\n\n\t\t\tstring = ShaderChunk[ newInclude ];\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Shader chunk \"%s\" has been deprecated. Use \"%s\" instead.', include, newInclude );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.batching ? '#define USE_BATCHING' : '',\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.displacementMap ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\t//\n\n\t\t\tparameters.mapUv ? '#define MAP_UV ' + parameters.mapUv : '',\n\t\t\tparameters.alphaMapUv ? '#define ALPHAMAP_UV ' + parameters.alphaMapUv : '',\n\t\t\tparameters.lightMapUv ? '#define LIGHTMAP_UV ' + parameters.lightMapUv : '',\n\t\t\tparameters.aoMapUv ? '#define AOMAP_UV ' + parameters.aoMapUv : '',\n\t\t\tparameters.emissiveMapUv ? '#define EMISSIVEMAP_UV ' + parameters.emissiveMapUv : '',\n\t\t\tparameters.bumpMapUv ? '#define BUMPMAP_UV ' + parameters.bumpMapUv : '',\n\t\t\tparameters.normalMapUv ? '#define NORMALMAP_UV ' + parameters.normalMapUv : '',\n\t\t\tparameters.displacementMapUv ? '#define DISPLACEMENTMAP_UV ' + parameters.displacementMapUv : '',\n\n\t\t\tparameters.metalnessMapUv ? '#define METALNESSMAP_UV ' + parameters.metalnessMapUv : '',\n\t\t\tparameters.roughnessMapUv ? '#define ROUGHNESSMAP_UV ' + parameters.roughnessMapUv : '',\n\n\t\t\tparameters.anisotropyMapUv ? '#define ANISOTROPYMAP_UV ' + parameters.anisotropyMapUv : '',\n\n\t\t\tparameters.clearcoatMapUv ? '#define CLEARCOATMAP_UV ' + parameters.clearcoatMapUv : '',\n\t\t\tparameters.clearcoatNormalMapUv ? '#define CLEARCOAT_NORMALMAP_UV ' + parameters.clearcoatNormalMapUv : '',\n\t\t\tparameters.clearcoatRoughnessMapUv ? '#define CLEARCOAT_ROUGHNESSMAP_UV ' + parameters.clearcoatRoughnessMapUv : '',\n\n\t\t\tparameters.iridescenceMapUv ? '#define IRIDESCENCEMAP_UV ' + parameters.iridescenceMapUv : '',\n\t\t\tparameters.iridescenceThicknessMapUv ? '#define IRIDESCENCE_THICKNESSMAP_UV ' + parameters.iridescenceThicknessMapUv : '',\n\n\t\t\tparameters.sheenColorMapUv ? '#define SHEEN_COLORMAP_UV ' + parameters.sheenColorMapUv : '',\n\t\t\tparameters.sheenRoughnessMapUv ? '#define SHEEN_ROUGHNESSMAP_UV ' + parameters.sheenRoughnessMapUv : '',\n\n\t\t\tparameters.specularMapUv ? '#define SPECULARMAP_UV ' + parameters.specularMapUv : '',\n\t\t\tparameters.specularColorMapUv ? '#define SPECULAR_COLORMAP_UV ' + parameters.specularColorMapUv : '',\n\t\t\tparameters.specularIntensityMapUv ? '#define SPECULAR_INTENSITYMAP_UV ' + parameters.specularIntensityMapUv : '',\n\n\t\t\tparameters.transmissionMapUv ? '#define TRANSMISSIONMAP_UV ' + parameters.transmissionMapUv : '',\n\t\t\tparameters.thicknessMapUv ? '#define THICKNESSMAP_UV ' + parameters.thicknessMapUv : '',\n\n\t\t\t//\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_UV1',\n\n\t\t\t'\tattribute vec2 uv1;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV2',\n\n\t\t\t'\tattribute vec2 uv2;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_UV3',\n\n\t\t\t'\tattribute vec2 uv3;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_TYPE ' + parameters.shaderType,\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.useFog && parameters.fog ? '#define USE_FOG' : '',\n\t\t\tparameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.normalMapObjectSpace ? '#define USE_NORMALMAP_OBJECTSPACE' : '',\n\t\t\tparameters.normalMapTangentSpace ? '#define USE_NORMALMAP_TANGENTSPACE' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\n\t\t\tparameters.anisotropy ? '#define USE_ANISOTROPY' : '',\n\t\t\tparameters.anisotropyMap ? '#define USE_ANISOTROPYMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULAR_COLORMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULAR_INTENSITYMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\t\t\tparameters.alphaHash ? '#define USE_ALPHAHASH' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEEN_COLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEEN_ROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents && parameters.flatShading === false ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUv1s ? '#define USE_UV1' : '',\n\t\t\tparameters.vertexUv2s ? '#define USE_UV2' : '',\n\t\t\tparameters.vertexUv3s ? '#define USE_UV3' : '',\n\n\t\t\tparameters.pointsUvs ? '#define USE_POINTS_UV' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.numLightProbes > 0 ? '#define USE_LIGHT_PROBES' : '',\n\n\t\t\tparameters.useLegacyLights ? '#define LEGACY_LIGHTS' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'colorspace_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputColorSpace ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tfunction onFirstUse( self ) {\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tif ( typeof renderer.debug.onShaderError === 'function' ) {\n\n\t\t\t\t\trenderer.debug.onShaderError( gl, program, glVertexShader, glFragmentShader );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// default error reporting\n\n\t\t\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\t\tconsole.error(\n\t\t\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\t\t\tfragmentErrors\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tself.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Clean up\n\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t}\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t// Populates cachedUniforms and cachedAttributes\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t// Populates cachedAttributes and cachedUniforms\n\t\t\tonFirstUse( this );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// indicate when the program is ready to be used. if the KHR_parallel_shader_compile extension isn't supported,\n\t// flag the program as ready immediately. It may cause a stall when it's first used.\n\n\tlet programReady = ( parameters.rendererExtensionParallelShaderCompile === false );\n\n\tthis.isReady = function () {\n\n\t\tif ( programReady === false ) {\n\n\t\t\tprogramReady = gl.getProgramParameter( program, COMPLETION_STATUS_KHR );\n\n\t\t}\n\n\t\treturn programReady;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.type = parameters.shaderType;\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nlet _id$1 = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id$1 ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst IS_WEBGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst SUPPORTS_VERTEX_TEXTURES = capabilities.vertexTextures;\n\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getChannel( value ) {\n\n\t\tif ( value === 0 ) return 'uv';\n\n\t\treturn `uv${ value }`;\n\n\t}\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst IS_INSTANCEDMESH = object.isInstancedMesh === true;\n\t\tconst IS_BATCHEDMESH = object.isBatchedMesh === true;\n\n\t\tconst HAS_MAP = !! material.map;\n\t\tconst HAS_MATCAP = !! material.matcap;\n\t\tconst HAS_ENVMAP = !! envMap;\n\t\tconst HAS_AOMAP = !! material.aoMap;\n\t\tconst HAS_LIGHTMAP = !! material.lightMap;\n\t\tconst HAS_BUMPMAP = !! material.bumpMap;\n\t\tconst HAS_NORMALMAP = !! material.normalMap;\n\t\tconst HAS_DISPLACEMENTMAP = !! material.displacementMap;\n\t\tconst HAS_EMISSIVEMAP = !! material.emissiveMap;\n\n\t\tconst HAS_METALNESSMAP = !! material.metalnessMap;\n\t\tconst HAS_ROUGHNESSMAP = !! material.roughnessMap;\n\n\t\tconst HAS_ANISOTROPY = material.anisotropy > 0;\n\t\tconst HAS_CLEARCOAT = material.clearcoat > 0;\n\t\tconst HAS_IRIDESCENCE = material.iridescence > 0;\n\t\tconst HAS_SHEEN = material.sheen > 0;\n\t\tconst HAS_TRANSMISSION = material.transmission > 0;\n\n\t\tconst HAS_ANISOTROPYMAP = HAS_ANISOTROPY && !! material.anisotropyMap;\n\n\t\tconst HAS_CLEARCOATMAP = HAS_CLEARCOAT && !! material.clearcoatMap;\n\t\tconst HAS_CLEARCOAT_NORMALMAP = HAS_CLEARCOAT && !! material.clearcoatNormalMap;\n\t\tconst HAS_CLEARCOAT_ROUGHNESSMAP = HAS_CLEARCOAT && !! material.clearcoatRoughnessMap;\n\n\t\tconst HAS_IRIDESCENCEMAP = HAS_IRIDESCENCE && !! material.iridescenceMap;\n\t\tconst HAS_IRIDESCENCE_THICKNESSMAP = HAS_IRIDESCENCE && !! material.iridescenceThicknessMap;\n\n\t\tconst HAS_SHEEN_COLORMAP = HAS_SHEEN && !! material.sheenColorMap;\n\t\tconst HAS_SHEEN_ROUGHNESSMAP = HAS_SHEEN && !! material.sheenRoughnessMap;\n\n\t\tconst HAS_SPECULARMAP = !! material.specularMap;\n\t\tconst HAS_SPECULAR_COLORMAP = !! material.specularColorMap;\n\t\tconst HAS_SPECULAR_INTENSITYMAP = !! material.specularIntensityMap;\n\n\t\tconst HAS_TRANSMISSIONMAP = HAS_TRANSMISSION && !! material.transmissionMap;\n\t\tconst HAS_THICKNESSMAP = HAS_TRANSMISSION && !! material.thicknessMap;\n\n\t\tconst HAS_GRADIENTMAP = !! material.gradientMap;\n\n\t\tconst HAS_ALPHAMAP = !! material.alphaMap;\n\n\t\tconst HAS_ALPHATEST = material.alphaTest > 0;\n\n\t\tconst HAS_ALPHAHASH = !! material.alphaHash;\n\n\t\tconst HAS_EXTENSIONS = !! material.extensions;\n\n\t\tconst HAS_ATTRIBUTE_UV1 = !! geometry.attributes.uv1;\n\t\tconst HAS_ATTRIBUTE_UV2 = !! geometry.attributes.uv2;\n\t\tconst HAS_ATTRIBUTE_UV3 = !! geometry.attributes.uv3;\n\n\t\tlet toneMapping = NoToneMapping;\n\n\t\tif ( material.toneMapped ) {\n\n\t\t\tif ( currentRenderTarget === null || currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\ttoneMapping = renderer.toneMapping;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: IS_WEBGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderType: material.type,\n\t\t\tshaderName: material.name,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tbatching: IS_BATCHEDMESH,\n\t\t\tinstancing: IS_INSTANCEDMESH,\n\t\t\tinstancingColor: IS_INSTANCEDMESH && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: SUPPORTS_VERTEX_TEXTURES,\n\t\t\toutputColorSpace: ( currentRenderTarget === null ) ? renderer.outputColorSpace : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace ),\n\n\t\t\tmap: HAS_MAP,\n\t\t\tmatcap: HAS_MATCAP,\n\t\t\tenvMap: HAS_ENVMAP,\n\t\t\tenvMapMode: HAS_ENVMAP && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\taoMap: HAS_AOMAP,\n\t\t\tlightMap: HAS_LIGHTMAP,\n\t\t\tbumpMap: HAS_BUMPMAP,\n\t\t\tnormalMap: HAS_NORMALMAP,\n\t\t\tdisplacementMap: SUPPORTS_VERTEX_TEXTURES && HAS_DISPLACEMENTMAP,\n\t\t\temissiveMap: HAS_EMISSIVEMAP,\n\n\t\t\tnormalMapObjectSpace: HAS_NORMALMAP && material.normalMapType === ObjectSpaceNormalMap,\n\t\t\tnormalMapTangentSpace: HAS_NORMALMAP && material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tmetalnessMap: HAS_METALNESSMAP,\n\t\t\troughnessMap: HAS_ROUGHNESSMAP,\n\n\t\t\tanisotropy: HAS_ANISOTROPY,\n\t\t\tanisotropyMap: HAS_ANISOTROPYMAP,\n\n\t\t\tclearcoat: HAS_CLEARCOAT,\n\t\t\tclearcoatMap: HAS_CLEARCOATMAP,\n\t\t\tclearcoatNormalMap: HAS_CLEARCOAT_NORMALMAP,\n\t\t\tclearcoatRoughnessMap: HAS_CLEARCOAT_ROUGHNESSMAP,\n\n\t\t\tiridescence: HAS_IRIDESCENCE,\n\t\t\tiridescenceMap: HAS_IRIDESCENCEMAP,\n\t\t\tiridescenceThicknessMap: HAS_IRIDESCENCE_THICKNESSMAP,\n\n\t\t\tsheen: HAS_SHEEN,\n\t\t\tsheenColorMap: HAS_SHEEN_COLORMAP,\n\t\t\tsheenRoughnessMap: HAS_SHEEN_ROUGHNESSMAP,\n\n\t\t\tspecularMap: HAS_SPECULARMAP,\n\t\t\tspecularColorMap: HAS_SPECULAR_COLORMAP,\n\t\t\tspecularIntensityMap: HAS_SPECULAR_INTENSITYMAP,\n\n\t\t\ttransmission: HAS_TRANSMISSION,\n\t\t\ttransmissionMap: HAS_TRANSMISSIONMAP,\n\t\t\tthicknessMap: HAS_THICKNESSMAP,\n\n\t\t\tgradientMap: HAS_GRADIENTMAP,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: HAS_ALPHAMAP,\n\t\t\talphaTest: HAS_ALPHATEST,\n\t\t\talphaHash: HAS_ALPHAHASH,\n\n\t\t\tcombine: material.combine,\n\n\t\t\t//\n\n\t\t\tmapUv: HAS_MAP && getChannel( material.map.channel ),\n\t\t\taoMapUv: HAS_AOMAP && getChannel( material.aoMap.channel ),\n\t\t\tlightMapUv: HAS_LIGHTMAP && getChannel( material.lightMap.channel ),\n\t\t\tbumpMapUv: HAS_BUMPMAP && getChannel( material.bumpMap.channel ),\n\t\t\tnormalMapUv: HAS_NORMALMAP && getChannel( material.normalMap.channel ),\n\t\t\tdisplacementMapUv: HAS_DISPLACEMENTMAP && getChannel( material.displacementMap.channel ),\n\t\t\temissiveMapUv: HAS_EMISSIVEMAP && getChannel( material.emissiveMap.channel ),\n\n\t\t\tmetalnessMapUv: HAS_METALNESSMAP && getChannel( material.metalnessMap.channel ),\n\t\t\troughnessMapUv: HAS_ROUGHNESSMAP && getChannel( material.roughnessMap.channel ),\n\n\t\t\tanisotropyMapUv: HAS_ANISOTROPYMAP && getChannel( material.anisotropyMap.channel ),\n\n\t\t\tclearcoatMapUv: HAS_CLEARCOATMAP && getChannel( material.clearcoatMap.channel ),\n\t\t\tclearcoatNormalMapUv: HAS_CLEARCOAT_NORMALMAP && getChannel( material.clearcoatNormalMap.channel ),\n\t\t\tclearcoatRoughnessMapUv: HAS_CLEARCOAT_ROUGHNESSMAP && getChannel( material.clearcoatRoughnessMap.channel ),\n\n\t\t\tiridescenceMapUv: HAS_IRIDESCENCEMAP && getChannel( material.iridescenceMap.channel ),\n\t\t\tiridescenceThicknessMapUv: HAS_IRIDESCENCE_THICKNESSMAP && getChannel( material.iridescenceThicknessMap.channel ),\n\n\t\t\tsheenColorMapUv: HAS_SHEEN_COLORMAP && getChannel( material.sheenColorMap.channel ),\n\t\t\tsheenRoughnessMapUv: HAS_SHEEN_ROUGHNESSMAP && getChannel( material.sheenRoughnessMap.channel ),\n\n\t\t\tspecularMapUv: HAS_SPECULARMAP && getChannel( material.specularMap.channel ),\n\t\t\tspecularColorMapUv: HAS_SPECULAR_COLORMAP && getChannel( material.specularColorMap.channel ),\n\t\t\tspecularIntensityMapUv: HAS_SPECULAR_INTENSITYMAP && getChannel( material.specularIntensityMap.channel ),\n\n\t\t\ttransmissionMapUv: HAS_TRANSMISSIONMAP && getChannel( material.transmissionMap.channel ),\n\t\t\tthicknessMapUv: HAS_THICKNESSMAP && getChannel( material.thicknessMap.channel ),\n\n\t\t\talphaMapUv: HAS_ALPHAMAP && getChannel( material.alphaMap.channel ),\n\n\t\t\t//\n\n\t\t\tvertexTangents: !! geometry.attributes.tangent && ( HAS_NORMALMAP || HAS_ANISOTROPY ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUv1s: HAS_ATTRIBUTE_UV1,\n\t\t\tvertexUv2s: HAS_ATTRIBUTE_UV2,\n\t\t\tvertexUv3s: HAS_ATTRIBUTE_UV3,\n\n\t\t\tpointsUvs: object.isPoints === true && !! geometry.attributes.uv && ( HAS_MAP || HAS_ALPHAMAP ),\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading === true,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation === true,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumLightProbes: lights.numLightProbes,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: toneMapping,\n\t\t\tuseLegacyLights: renderer._useLegacyLights,\n\n\t\t\tdecodeVideoTexture: HAS_MAP && ( material.map.isVideoTexture === true ) && ( ColorManagement.getTransfer( material.map.colorSpace ) === SRGBTransfer ),\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: material.depthPacking >= 0,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: HAS_EXTENSIONS && material.extensions.derivatives === true,\n\t\t\textensionFragDepth: HAS_EXTENSIONS && material.extensions.fragDepth === true,\n\t\t\textensionDrawBuffers: HAS_EXTENSIONS && material.extensions.drawBuffers === true,\n\t\t\textensionShaderTextureLOD: HAS_EXTENSIONS && material.extensions.shaderTextureLOD === true,\n\n\t\t\trendererExtensionFragDepth: IS_WEBGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: IS_WEBGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: IS_WEBGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\t\t\trendererExtensionParallelShaderCompile: extensions.has( 'KHR_parallel_shader_compile' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputColorSpace );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputColorSpace );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.mapUv );\n\t\tarray.push( parameters.alphaMapUv );\n\t\tarray.push( parameters.lightMapUv );\n\t\tarray.push( parameters.aoMapUv );\n\t\tarray.push( parameters.bumpMapUv );\n\t\tarray.push( parameters.normalMapUv );\n\t\tarray.push( parameters.displacementMapUv );\n\t\tarray.push( parameters.emissiveMapUv );\n\t\tarray.push( parameters.metalnessMapUv );\n\t\tarray.push( parameters.roughnessMapUv );\n\t\tarray.push( parameters.anisotropyMapUv );\n\t\tarray.push( parameters.clearcoatMapUv );\n\t\tarray.push( parameters.clearcoatNormalMapUv );\n\t\tarray.push( parameters.clearcoatRoughnessMapUv );\n\t\tarray.push( parameters.iridescenceMapUv );\n\t\tarray.push( parameters.iridescenceThicknessMapUv );\n\t\tarray.push( parameters.sheenColorMapUv );\n\t\tarray.push( parameters.sheenRoughnessMapUv );\n\t\tarray.push( parameters.specularMapUv );\n\t\tarray.push( parameters.specularColorMapUv );\n\t\tarray.push( parameters.specularIntensityMapUv );\n\t\tarray.push( parameters.transmissionMapUv );\n\t\tarray.push( parameters.thicknessMapUv );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.numLightProbes );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.normalMapObjectSpace )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.normalMapTangentSpace )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.vertexUv1s )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.vertexUv2s )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.vertexUv3s )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.anisotropy )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.alphaHash )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.batching )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.useLegacyLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.pointsUvs )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 19 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction WebGLProperties() {\n\n\tlet properties = new WeakMap();\n\n\tfunction get( object ) {\n\n\t\tlet map = properties.get( object );\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties.set( object, map );\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tproperties.delete( object );\n\n\t}\n\n\tfunction update( object, key, value ) {\n\n\t\tproperties.get( object )[ key ] = value;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tproperties = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\treturn a.groupOrder - b.groupOrder;\n\n\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\n\nfunction WebGLRenderList() {\n\n\tconst renderItems = [];\n\tlet renderItemsIndex = 0;\n\n\tconst opaque = [];\n\tconst transmissive = [];\n\tconst transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransmissive.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\tlet renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\trenderItemsIndex ++;\n\n\t\treturn renderItem;\n\n\t}\n\n\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.push( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.push( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.push( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\tconst renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\tif ( material.transmission > 0.0 ) {\n\n\t\t\ttransmissive.unshift( renderItem );\n\n\t\t} else if ( material.transparent === true ) {\n\n\t\t\ttransparent.unshift( renderItem );\n\n\t\t} else {\n\n\t\t\topaque.unshift( renderItem );\n\n\t\t}\n\n\t}\n\n\tfunction sort( customOpaqueSort, customTransparentSort ) {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( customOpaqueSort || painterSortStable );\n\t\tif ( transmissive.length > 1 ) transmissive.sort( customTransparentSort || reversePainterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( customTransparentSort || reversePainterSortStable );\n\n\t}\n\n\tfunction finish() {\n\n\t\t// Clear references from inactive renderItems in the list\n\n\t\tfor ( let i = renderItemsIndex, il = renderItems.length; i < il; i ++ ) {\n\n\t\t\tconst renderItem = renderItems[ i ];\n\n\t\t\tif ( renderItem.id === null ) break;\n\n\t\t\trenderItem.id = null;\n\t\t\trenderItem.object = null;\n\t\t\trenderItem.geometry = null;\n\t\t\trenderItem.material = null;\n\t\t\trenderItem.group = null;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\topaque: opaque,\n\t\ttransmissive: transmissive,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\t\tunshift: unshift,\n\t\tfinish: finish,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tlet lists = new WeakMap();\n\n\tfunction get( scene, renderCallDepth ) {\n\n\t\tconst listArray = lists.get( scene );\n\t\tlet list;\n\n\t\tif ( listArray === undefined ) {\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists.set( scene, [ list ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= listArray.length ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlistArray.push( list );\n\n\t\t\t} else {\n\n\t\t\t\tlist = listArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nfunction UniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction ShadowUniformsCache() {\n\n\tconst lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tlet uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\n\n\nlet nextVersion = 0;\n\nfunction shadowCastingAndTexturingLightsFirst( lightA, lightB ) {\n\n\treturn ( lightB.castShadow ? 2 : 0 ) - ( lightA.castShadow ? 2 : 0 ) + ( lightB.map ? 1 : 0 ) - ( lightA.map ? 1 : 0 );\n\n}\n\nfunction WebGLLights( extensions, capabilities ) {\n\n\tconst cache = new UniformsCache();\n\n\tconst shadowCache = ShadowUniformsCache();\n\n\tconst state = {\n\n\t\tversion: 0,\n\n\t\thash: {\n\t\t\tdirectionalLength: - 1,\n\t\t\tpointLength: - 1,\n\t\t\tspotLength: - 1,\n\t\t\trectAreaLength: - 1,\n\t\t\themiLength: - 1,\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1,\n\t\t\tnumSpotMaps: - 1,\n\n\t\t\tnumLightProbes: - 1\n\t\t},\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tprobe: [],\n\t\tdirectional: [],\n\t\tdirectionalShadow: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotLightMap: [],\n\t\tspotShadow: [],\n\t\tspotShadowMap: [],\n\t\tspotLightMatrix: [],\n\t\trectArea: [],\n\t\trectAreaLTC1: null,\n\t\trectAreaLTC2: null,\n\t\tpoint: [],\n\t\tpointShadow: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: [],\n\t\tnumSpotLightShadowsWithMaps: 0,\n\t\tnumLightProbes: 0\n\n\t};\n\n\tfor ( let i = 0; i < 9; i ++ ) state.probe.push( new Vector3() );\n\n\tconst vector3 = new Vector3();\n\tconst matrix4 = new Matrix4();\n\tconst matrix42 = new Matrix4();\n\n\tfunction setup( lights, useLegacyLights ) {\n\n\t\tlet r = 0, g = 0, b = 0;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) state.probe[ i ].set( 0, 0, 0 );\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tlet numDirectionalShadows = 0;\n\t\tlet numPointShadows = 0;\n\t\tlet numSpotShadows = 0;\n\t\tlet numSpotMaps = 0;\n\t\tlet numSpotShadowsWithMaps = 0;\n\n\t\tlet numLightProbes = 0;\n\n\t\t// ordering : [shadow casting + map texturing, map texturing, shadow casting, none ]\n\t\tlights.sort( shadowCastingAndTexturingLightsFirst );\n\n\t\t// artist-friendly light intensity scaling factor\n\t\tconst scaleFactor = ( useLegacyLights === true ) ? Math.PI : 1;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tconst color = light.color;\n\t\t\tconst intensity = light.intensity;\n\t\t\tconst distance = light.distance;\n\n\t\t\tconst shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity * scaleFactor;\n\t\t\t\tg += color.g * intensity * scaleFactor;\n\t\t\t\tb += color.b * intensity * scaleFactor;\n\n\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\tfor ( let j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t}\n\n\t\t\t\tnumLightProbes ++;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.directionalShadow[ directionalLength ] = shadowUniforms;\n\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif ( light.map ) {\n\n\t\t\t\t\tstate.spotLightMap[ numSpotMaps ] = light.map;\n\t\t\t\t\tnumSpotMaps ++;\n\n\t\t\t\t\t// make sure the lightMatrix is up to date\n\t\t\t\t\t// TODO : do it if required only\n\t\t\t\t\tshadow.updateMatrices( light );\n\n\t\t\t\t\tif ( light.castShadow ) numSpotShadowsWithMaps ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotLightMatrix[ spotLength ] = shadow.matrix;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\tstate.spotShadow[ spotLength ] = shadowUniforms;\n\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\n\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity * scaleFactor );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\t\tconst shadowUniforms = shadowCache.get( light );\n\n\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\tstate.pointShadow[ pointLength ] = shadowUniforms;\n\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = cache.get( light );\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity * scaleFactor );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity * scaleFactor );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( rectAreaLength > 0 ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t// WebGL 2\n\n\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t} else {\n\n\t\t\t\t// WebGL 1\n\n\t\t\t\tif ( extensions.has( 'OES_texture_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\n\t\t\t\t} else if ( extensions.has( 'OES_texture_half_float_linear' ) === true ) {\n\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tconst hash = state.hash;\n\n\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\thash.pointLength !== pointLength ||\n\t\t\thash.spotLength !== spotLength ||\n\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\thash.hemiLength !== hemiLength ||\n\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\thash.numSpotShadows !== numSpotShadows ||\n\t\t\thash.numSpotMaps !== numSpotMaps ||\n\t\t\thash.numLightProbes !== numLightProbes ) {\n\n\t\t\tstate.directional.length = directionalLength;\n\t\t\tstate.spot.length = spotLength;\n\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\tstate.point.length = pointLength;\n\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\tstate.spotLightMatrix.length = numSpotShadows + numSpotMaps - numSpotShadowsWithMaps;\n\t\t\tstate.spotLightMap.length = numSpotMaps;\n\t\t\tstate.numSpotLightShadowsWithMaps = numSpotShadowsWithMaps;\n\t\t\tstate.numLightProbes = numLightProbes;\n\n\t\t\thash.directionalLength = directionalLength;\n\t\t\thash.pointLength = pointLength;\n\t\t\thash.spotLength = spotLength;\n\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\thash.hemiLength = hemiLength;\n\n\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\thash.numPointShadows = numPointShadows;\n\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\thash.numSpotMaps = numSpotMaps;\n\n\t\t\thash.numLightProbes = numLightProbes;\n\n\t\t\tstate.version = nextVersion ++;\n\n\t\t}\n\n\t}\n\n\tfunction setupView( lights, camera ) {\n\n\t\tlet directionalLength = 0;\n\t\tlet pointLength = 0;\n\t\tlet spotLength = 0;\n\t\tlet rectAreaLength = 0;\n\t\tlet hemiLength = 0;\n\n\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( let i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\n\t\t\tif ( light.isDirectionalLight ) {\n\n\t\t\t\tconst uniforms = state.directional[ directionalLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tconst uniforms = state.spot[ spotLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tconst uniforms = state.rectArea[ rectAreaLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tconst uniforms = state.point[ pointLength ];\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tconst uniforms = state.hemi[ hemiLength ];\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tsetupView: setupView,\n\t\tstate: state\n\t};\n\n}\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( useLegacyLights ) {\n\n\t\tlights.setup( lightsArray, useLegacyLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\nclass MeshDepthMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDepthMaterial = true;\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshDistanceMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshDistanceMaterial = true;\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst vertex = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\nconst fragment = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tconst float samples = float( VSM_SAMPLES );\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\\n\\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\\n\\tfor ( float i = 0.0; i < samples; i ++ ) {\\n\\t\\tfloat uvOffset = uvStart + i * uvStride;\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean / samples;\\n\\tsquared_mean = squared_mean / samples;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\nfunction WebGLShadowMap( _renderer, _objects, _capabilities ) {\n\n\tlet _frustum = new Frustum();\n\n\tconst _shadowMapSize = new Vector2(),\n\t\t_viewportSize = new Vector2(),\n\n\t\t_viewport = new Vector4(),\n\n\t\t_depthMaterial = new MeshDepthMaterial( { depthPacking: RGBADepthPacking } ),\n\t\t_distanceMaterial = new MeshDistanceMaterial(),\n\n\t\t_materialCache = {},\n\n\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\tconst shadowSide = { [ FrontSide ]: BackSide, [ BackSide ]: FrontSide, [ DoubleSide ]: DoubleSide };\n\n\tconst shadowMaterialVertical = new ShaderMaterial( {\n\t\tdefines: {\n\t\t\tVSM_SAMPLES: 8\n\t\t},\n\t\tuniforms: {\n\t\t\tshadow_pass: { value: null },\n\t\t\tresolution: { value: new Vector2() },\n\t\t\tradius: { value: 4.0 }\n\t\t},\n\n\t\tvertexShader: vertex,\n\t\tfragmentShader: fragment\n\n\t} );\n\n\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\n\tconst fullScreenTri = new BufferGeometry();\n\tfullScreenTri.setAttribute(\n\t\t'position',\n\t\tnew BufferAttribute(\n\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t3\n\t\t)\n\t);\n\n\tconst fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\tconst scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\tlet _previousType = this.type;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\tconst _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.setBlending( NoBlending );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// check for shadow map type changes\n\n\t\tconst toVSM = ( _previousType !== VSMShadowMap && this.type === VSMShadowMap );\n\t\tconst fromVSM = ( _previousType === VSMShadowMap && this.type !== VSMShadowMap );\n\n\t\t// render depth map\n\n\t\tfor ( let i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tconst light = lights[ i ];\n\t\t\tconst shadow = light.shadow;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( shadow.autoUpdate === false && shadow.needsUpdate === false ) continue;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\tif ( _shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\tif ( _shadowMapSize.x > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.x = Math.floor( _maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _shadowMapSize.y > _maxTextureSize ) {\n\n\t\t\t\t\t_viewportSize.y = Math.floor( _maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null || toVSM === true || fromVSM === true ) {\n\n\t\t\t\tconst pars = ( this.type !== VSMShadowMap ) ? { minFilter: NearestFilter, magFilter: NearestFilter } : {};\n\n\t\t\t\tif ( shadow.map !== null ) {\n\n\t\t\t\t\tshadow.map.dispose();\n\n\t\t\t\t}\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\n\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\n\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\tfor ( let vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\tconst viewport = shadow.getViewport( vp );\n\n\t\t\t\t_viewport.set(\n\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t);\n\n\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t}\n\n\t\t\t// do blur pass for VSM\n\n\t\t\tif ( shadow.isPointLightShadow !== true && this.type === VSMShadowMap ) {\n\n\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t}\n\n\t\t\tshadow.needsUpdate = false;\n\n\t\t}\n\n\t\t_previousType = this.type;\n\n\t\tscope.needsUpdate = false;\n\n\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t};\n\n\tfunction VSMPass( shadow, camera ) {\n\n\t\tconst geometry = _objects.update( fullScreenMesh );\n\n\t\tif ( shadowMaterialVertical.defines.VSM_SAMPLES !== shadow.blurSamples ) {\n\n\t\t\tshadowMaterialVertical.defines.VSM_SAMPLES = shadow.blurSamples;\n\t\t\tshadowMaterialHorizontal.defines.VSM_SAMPLES = shadow.blurSamples;\n\n\t\t\tshadowMaterialVertical.needsUpdate = true;\n\t\t\tshadowMaterialHorizontal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( shadow.mapPass === null ) {\n\n\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y );\n\n\t\t}\n\n\t\t// vertical pass\n\n\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t// horizontal pass\n\n\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\t\t_renderer.setRenderTarget( shadow.map );\n\t\t_renderer.clear();\n\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null );\n\n\t}\n\n\tfunction getDepthMaterial( object, material, light, type ) {\n\n\t\tlet result = null;\n\n\t\tconst customMaterial = ( light.isPointLight === true ) ? object.customDistanceMaterial : object.customDepthMaterial;\n\n\t\tif ( customMaterial !== undefined ) {\n\n\t\t\tresult = customMaterial;\n\n\t\t} else {\n\n\t\t\tresult = ( light.isPointLight === true ) ? _distanceMaterial : _depthMaterial;\n\n\t\t\tif ( ( _renderer.localClippingEnabled && material.clipShadows === true && Array.isArray( material.clippingPlanes ) && material.clippingPlanes.length !== 0 ) ||\n\t\t\t\t( material.displacementMap && material.displacementScale !== 0 ) ||\n\t\t\t\t( material.alphaMap && material.alphaTest > 0 ) ||\n\t\t\t\t( material.map && material.alphaTest > 0 ) ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tconst keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tlet materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tif ( type === VSMShadowMap ) {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t} else {\n\n\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t}\n\n\t\tresult.alphaMap = material.alphaMap;\n\t\tresult.alphaTest = material.alphaTest;\n\t\tresult.map = material.map;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.displacementMap = material.displacementMap;\n\t\tresult.displacementScale = material.displacementScale;\n\t\tresult.displacementBias = material.displacementBias;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\tconst materialProperties = _renderer.properties.get( result );\n\t\t\tmaterialProperties.light = light;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tconst visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tconst geometry = _objects.update( object );\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\tfor ( let k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tconst group = groups[ k ];\n\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, groupMaterial, light, type );\n\n\t\t\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tconst depthMaterial = getDepthMaterial( object, material, light, type );\n\n\t\t\t\t\tobject.onBeforeShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\tobject.onAfterShadow( _renderer, object, camera, shadowCamera, geometry, depthMaterial, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t}\n\n\t}\n\n}\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgramMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentBlendColor = new Color( 0, 0, 0 );\n\tlet currentBlendAlpha = 0;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count, dimensions ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tif ( isWebGL2 && ( type === gl.TEXTURE_3D || type === gl.TEXTURE_2D_ARRAY ) ) {\n\n\t\t\t\tgl.texImage3D( target, 0, gl.RGBA, 1, 1, dimensions, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t} else {\n\n\t\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\tif ( isWebGL2 ) {\n\n\t\temptyTextures[ gl.TEXTURE_2D_ARRAY ] = createTexture( gl.TEXTURE_2D_ARRAY, gl.TEXTURE_2D_ARRAY, 1, 1 );\n\t\temptyTextures[ gl.TEXTURE_3D ] = createTexture( gl.TEXTURE_3D, gl.TEXTURE_3D, 1, 1 );\n\n\t}\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA,\n\t\t[ ConstantColorFactor ]: gl.CONSTANT_COLOR,\n\t\t[ OneMinusConstantColorFactor ]: gl.ONE_MINUS_CONSTANT_COLOR,\n\t\t[ ConstantAlphaFactor ]: gl.CONSTANT_ALPHA,\n\t\t[ OneMinusConstantAlphaFactor ]: gl.ONE_MINUS_CONSTANT_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, blendColor, blendAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\tcurrentBlendColor.set( 0, 0, 0 );\n\t\t\t\tcurrentBlendAlpha = 0;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tif ( blendColor.equals( currentBlendColor ) === false || blendAlpha !== currentBlendAlpha ) {\n\n\t\t\tgl.blendColor( blendColor.r, blendColor.g, blendColor.b, blendAlpha );\n\n\t\t\tcurrentBlendColor.copy( blendColor );\n\t\t\tcurrentBlendAlpha = blendAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.blendColor, material.blendAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgramMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgramMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgramMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( program ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( program, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\t\tgl.blendColor( 0, 0, 0, 0 );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentBlendColor = new Color( 0, 0, 0 );\n\t\tcurrentBlendAlpha = 0;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst maxTextures = capabilities.maxTextures;\n\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\tconst maxTextureSize = capabilities.maxTextureSize;\n\tconst maxSamples = capabilities.maxSamples;\n\tconst multisampledRTTExt = extensions.has( 'WEBGL_multisampled_render_to_texture' ) ? extensions.get( 'WEBGL_multisampled_render_to_texture' ) : null;\n\tconst supportsInvalidateFramebuffer = typeof navigator === 'undefined' ? false : /OculusBrowser/g.test( navigator.userAgent );\n\n\tconst _videoTextures = new WeakMap();\n\tlet _canvas;\n\n\tconst _sources = new WeakMap(); // maps WebglTexture objects to instances of Source\n\n\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\tlet useOffscreenCanvas = false;\n\n\ttry {\n\n\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( '2d' ) ) !== null;\n\n\t} catch ( err ) {\n\n\t\t// Ignore any errors\n\n\t}\n\n\tfunction createCanvas( width, height ) {\n\n\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\treturn useOffscreenCanvas ?\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\tnew OffscreenCanvas( width, height ) : createElementNS( 'canvas' );\n\n\t}\n\n\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\tlet scale = 1;\n\n\t\t// handle case if texture exceeds max size\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t}\n\n\t\t// only perform resize if necessary\n\n\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t// only perform resize for certain image types\n\n\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\n\t\t\t\tconst width = floor( scale * image.width );\n\t\t\t\tconst height = floor( scale * image.height );\n\n\t\t\t\tif ( _canvas === undefined ) _canvas = createCanvas( width, height );\n\n\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\tconst canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\tcanvas.width = width;\n\t\t\t\tcanvas.height = height;\n\n\t\t\t\tconst context = canvas.getContext( '2d' );\n\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\treturn canvas;\n\n\t\t\t} else {\n\n\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t}\n\n\t\t\t\treturn image;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo$1( image ) {\n\n\t\treturn isPowerOfTwo( image.width ) && isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\tif ( isWebGL2 ) return false;\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\tfunction generateMipmap( target ) {\n\n\t\t_gl.generateMipmap( target );\n\n\t}\n\n\tfunction getInternalFormat( internalFormatName, glFormat, glType, colorSpace, forceLinearTransfer = false ) {\n\n\t\tif ( isWebGL2 === false ) return glFormat;\n\n\t\tif ( internalFormatName !== null ) {\n\n\t\t\tif ( _gl[ internalFormatName ] !== undefined ) return _gl[ internalFormatName ];\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'' );\n\n\t\t}\n\n\t\tlet internalFormat = glFormat;\n\n\t\tif ( glFormat === _gl.RED ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.R32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.R16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RED_INTEGER ) {\n\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.R8UI;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT ) internalFormat = _gl.R16UI;\n\t\t\tif ( glType === _gl.UNSIGNED_INT ) internalFormat = _gl.R32UI;\n\t\t\tif ( glType === _gl.BYTE ) internalFormat = _gl.R8I;\n\t\t\tif ( glType === _gl.SHORT ) internalFormat = _gl.R16I;\n\t\t\tif ( glType === _gl.INT ) internalFormat = _gl.R32I;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RG ) {\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RG32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RG16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = _gl.RG8;\n\n\t\t}\n\n\t\tif ( glFormat === _gl.RGBA ) {\n\n\t\t\tconst transfer = forceLinearTransfer ? LinearTransfer : ColorManagement.getTransfer( colorSpace );\n\n\t\t\tif ( glType === _gl.FLOAT ) internalFormat = _gl.RGBA32F;\n\t\t\tif ( glType === _gl.HALF_FLOAT ) internalFormat = _gl.RGBA16F;\n\t\t\tif ( glType === _gl.UNSIGNED_BYTE ) internalFormat = ( transfer === SRGBTransfer ) ? _gl.SRGB8_ALPHA8 : _gl.RGBA8;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_4_4_4_4 ) internalFormat = _gl.RGBA4;\n\t\t\tif ( glType === _gl.UNSIGNED_SHORT_5_5_5_1 ) internalFormat = _gl.RGB5_A1;\n\n\t\t}\n\n\t\tif ( internalFormat === _gl.R16F || internalFormat === _gl.R32F ||\n\t\t\tinternalFormat === _gl.RG16F || internalFormat === _gl.RG32F ||\n\t\t\tinternalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F ) {\n\n\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t}\n\n\t\treturn internalFormat;\n\n\t}\n\n\tfunction getMipLevels( texture, image, supportsMips ) {\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) === true || ( texture.isFramebufferTexture && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) ) {\n\n\t\t\treturn Math.log2( Math.max( image.width, image.height ) ) + 1;\n\n\t\t} else if ( texture.mipmaps !== undefined && texture.mipmaps.length > 0 ) {\n\n\t\t\t// user-defined mipmaps\n\n\t\t\treturn texture.mipmaps.length;\n\n\t\t} else if ( texture.isCompressedTexture && Array.isArray( texture.image ) ) {\n\n\t\t\treturn image.mipmaps.length;\n\n\t\t} else {\n\n\t\t\t// texture without mipmaps (only base level)\n\n\t\t\treturn 1;\n\n\t\t}\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tconst texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t_videoTextures.delete( texture );\n\n\t\t}\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tconst renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t// check if it's necessary to remove the WebGLTexture object\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures ) {\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\t\t\twebglTexture.usedTimes --;\n\n\t\t\t// the WebGLTexture object is not used anymore, remove it\n\n\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\tdeleteTexture( texture );\n\n\t\t\t}\n\n\t\t\t// remove the weak map entry if no WebGLTexture uses the source anymore\n\n\t\t\tif ( Object.keys( webglTextures ).length === 0 ) {\n\n\t\t\t\t_sources.delete( source );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deleteTexture( texture ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\tconst source = texture.source;\n\t\tconst webglTextures = _sources.get( source );\n\t\tdelete webglTextures[ textureProperties.__cacheKey ];\n\n\t\tinfo.memory.textures --;\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer[ i ] ) ) {\n\n\t\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer[ i ].length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ][ level ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( Array.isArray( renderTargetProperties.__webglFramebuffer ) ) {\n\n\t\t\t\tfor ( let level = 0; level < renderTargetProperties.__webglFramebuffer.length; level ++ ) _gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ level ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\t\t\tif ( renderTargetProperties.__webglMultisampledFramebuffer ) _gl.deleteFramebuffer( renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer ) {\n\n\t\t\t\tfor ( let i = 0; i < renderTargetProperties.__webglColorRenderbuffer.length; i ++ ) {\n\n\t\t\t\t\tif ( renderTargetProperties.__webglColorRenderbuffer[ i ] ) _gl.deleteRenderbuffer( renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetProperties.__webglDepthRenderbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthRenderbuffer );\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\tfor ( let i = 0, il = texture.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachmentProperties = properties.get( texture[ i ] );\n\n\t\t\t\tif ( attachmentProperties.__webglTexture ) {\n\n\t\t\t\t\t_gl.deleteTexture( attachmentProperties.__webglTexture );\n\n\t\t\t\t\tinfo.memory.textures --;\n\n\t\t\t\t}\n\n\t\t\t\tproperties.remove( texture[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tproperties.remove( texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\tlet textureUnits = 0;\n\n\tfunction resetTextureUnits() {\n\n\t\ttextureUnits = 0;\n\n\t}\n\n\tfunction allocateTextureUnit() {\n\n\t\tconst textureUnit = textureUnits;\n\n\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t}\n\n\t\ttextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tfunction getTextureCacheKey( texture ) {\n\n\t\tconst array = [];\n\n\t\tarray.push( texture.wrapS );\n\t\tarray.push( texture.wrapT );\n\t\tarray.push( texture.wrapR || 0 );\n\t\tarray.push( texture.magFilter );\n\t\tarray.push( texture.minFilter );\n\t\tarray.push( texture.anisotropy );\n\t\tarray.push( texture.internalFormat );\n\t\tarray.push( texture.format );\n\t\tarray.push( texture.type );\n\t\tarray.push( texture.generateMipmaps );\n\t\tarray.push( texture.premultiplyAlpha );\n\t\tarray.push( texture.flipY );\n\t\tarray.push( texture.unpackAlignment );\n\t\tarray.push( texture.colorSpace );\n\n\t\treturn array.join();\n\n\t}\n\n\t//\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.isVideoTexture ) updateVideoTexture( texture );\n\n\t\tif ( texture.isRenderTargetTexture === false && texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tconst image = texture.image;\n\n\t\t\tif ( image === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but no image data found.' );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture2DArray( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTexture3D( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_3D, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tconst textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tuploadCubeTexture( textureProperties, texture, slot );\n\t\t\treturn;\n\n\t\t}\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t}\n\n\tconst wrappingToGL = {\n\t\t[ RepeatWrapping ]: _gl.REPEAT,\n\t\t[ ClampToEdgeWrapping ]: _gl.CLAMP_TO_EDGE,\n\t\t[ MirroredRepeatWrapping ]: _gl.MIRRORED_REPEAT\n\t};\n\n\tconst filterToGL = {\n\t\t[ NearestFilter ]: _gl.NEAREST,\n\t\t[ NearestMipmapNearestFilter ]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t[ NearestMipmapLinearFilter ]: _gl.NEAREST_MIPMAP_LINEAR,\n\n\t\t[ LinearFilter ]: _gl.LINEAR,\n\t\t[ LinearMipmapNearestFilter ]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t[ LinearMipmapLinearFilter ]: _gl.LINEAR_MIPMAP_LINEAR\n\t};\n\n\tconst compareToGL = {\n\t\t[ NeverCompare ]: _gl.NEVER,\n\t\t[ AlwaysCompare ]: _gl.ALWAYS,\n\t\t[ LessCompare ]: _gl.LESS,\n\t\t[ LessEqualCompare ]: _gl.LEQUAL,\n\t\t[ EqualCompare ]: _gl.EQUAL,\n\t\t[ GreaterEqualCompare ]: _gl.GEQUAL,\n\t\t[ GreaterCompare ]: _gl.GREATER,\n\t\t[ NotEqualCompare ]: _gl.NOTEQUAL\n\t};\n\n\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\tif ( supportsMips ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[ texture.wrapS ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[ texture.wrapT ] );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[ texture.magFilter ] );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[ texture.minFilter ] );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE );\n\n\t\t\t}\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( texture.compareFunction ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_MODE, _gl.COMPARE_REF_TO_TEXTURE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_COMPARE_FUNC, compareToGL[ texture.compareFunction ] );\n\n\t\t}\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( texture.magFilter === NearestFilter ) return;\n\t\t\tif ( texture.minFilter !== NearestMipmapLinearFilter && texture.minFilter !== LinearMipmapLinearFilter ) return;\n\t\t\tif ( texture.type === FloatType && extensions.has( 'OES_texture_float_linear' ) === false ) return; // verify extension for WebGL 1 and WebGL 2\n\t\t\tif ( isWebGL2 === false && ( texture.type === HalfFloatType && extensions.has( 'OES_texture_half_float_linear' ) === false ) ) return; // verify extension for WebGL 1 only\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction initTexture( textureProperties, texture ) {\n\n\t\tlet forceUpload = false;\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t}\n\n\t\t// create Source <-> WebGLTextures mapping if necessary\n\n\t\tconst source = texture.source;\n\t\tlet webglTextures = _sources.get( source );\n\n\t\tif ( webglTextures === undefined ) {\n\n\t\t\twebglTextures = {};\n\t\t\t_sources.set( source, webglTextures );\n\n\t\t}\n\n\t\t// check if there is already a WebGLTexture object for the given texture parameters\n\n\t\tconst textureCacheKey = getTextureCacheKey( texture );\n\n\t\tif ( textureCacheKey !== textureProperties.__cacheKey ) {\n\n\t\t\t// if not, create a new instance of WebGLTexture\n\n\t\t\tif ( webglTextures[ textureCacheKey ] === undefined ) {\n\n\t\t\t\t// create new entry\n\n\t\t\t\twebglTextures[ textureCacheKey ] = {\n\t\t\t\t\ttexture: _gl.createTexture(),\n\t\t\t\t\tusedTimes: 0\n\t\t\t\t};\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t// when a new instance of WebGLTexture was created, a texture upload is required\n\t\t\t\t// even if the image contents are identical\n\n\t\t\t\tforceUpload = true;\n\n\t\t\t}\n\n\t\t\twebglTextures[ textureCacheKey ].usedTimes ++;\n\n\t\t\t// every time the texture cache key changes, it's necessary to check if an instance of\n\t\t\t// WebGLTexture can be deleted in order to avoid a memory leak.\n\n\t\t\tconst webglTexture = webglTextures[ textureProperties.__cacheKey ];\n\n\t\t\tif ( webglTexture !== undefined ) {\n\n\t\t\t\twebglTextures[ textureProperties.__cacheKey ].usedTimes --;\n\n\t\t\t\tif ( webglTexture.usedTimes === 0 ) {\n\n\t\t\t\t\tdeleteTexture( texture );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// store references to cache key and WebGLTexture object\n\n\t\t\ttextureProperties.__cacheKey = textureCacheKey;\n\t\t\ttextureProperties.__webglTexture = webglTextures[ textureCacheKey ].texture;\n\n\t\t}\n\n\t\treturn forceUpload;\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tlet textureType = _gl.TEXTURE_2D;\n\n\t\tif ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\tif ( texture.isData3DTexture ) textureType = _gl.TEXTURE_3D;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( textureType, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo$1( texture.image ) === false;\n\t\t\tlet image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\t\t\timage = verifyColorSpace( texture, image );\n\n\t\t\tconst supportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace );\n\n\t\t\tlet glType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, texture.isVideoTexture );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true && glInternalFormat !== RGB_ETC1_Format );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tconst levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t} else if ( texture.type === UnsignedInt248Type ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\t\tconsole.error( 'WebGLRenderer: Floating point depth texture requires WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// validation checks for WebGL 1\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedIntType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t//\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, 1, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, image.width, image.height, glFormat, glType, image.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tif ( texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, mipmap.data, 0, 0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, i, 0, 0, 0, mipmap.width, mipmap.height, image.depth, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, i, glInternalFormat, mipmap.width, mipmap.height, image.depth, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isDataArrayTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_2D_ARRAY, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_2D_ARRAY, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage3D( _gl.TEXTURE_3D, levels, glInternalFormat, image.width, image.height, image.depth );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.texSubImage3D( _gl.TEXTURE_3D, 0, 0, 0, 0, image.width, image.height, image.depth, glFormat, glType, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage3D( _gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isFramebufferTexture ) {\n\n\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tlet width = image.width, height = image.height;\n\n\t\t\t\t\t\tfor ( let i = 0; i < levels; i ++ ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t\t\t\t\twidth >>= 1;\n\t\t\t\t\t\t\theight >>= 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, mipmaps[ 0 ].width, mipmaps[ 0 ].height );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( let i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, i, 0, 0, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\tif ( allocateMemory ) {\n\n\t\t\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_2D, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_2D, 0, 0, 0, glFormat, glType, image );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( textureType );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\tfunction uploadCubeTexture( textureProperties, texture, slot ) {\n\n\t\tif ( texture.image.length !== 6 ) return;\n\n\t\tconst forceUpload = initTexture( textureProperties, texture );\n\t\tconst source = texture.source;\n\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture, _gl.TEXTURE0 + slot );\n\n\t\tconst sourceProperties = properties.get( source );\n\n\t\tif ( source.version !== sourceProperties.__version || forceUpload === true ) {\n\n\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\n\t\t\tconst workingPrimaries = ColorManagement.getPrimaries( ColorManagement.workingColorSpace );\n\t\t\tconst texturePrimaries = texture.colorSpace === NoColorSpace ? null : ColorManagement.getPrimaries( texture.colorSpace );\n\t\t\tconst unpackConversion = texture.colorSpace === NoColorSpace || workingPrimaries === texturePrimaries ? _gl.NONE : _gl.BROWSER_DEFAULT_WEBGL;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, unpackConversion );\n\n\t\t\tconst isCompressed = ( texture.isCompressedTexture || texture.image[ 0 ].isCompressedTexture );\n\t\t\tconst isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcubeImage[ i ] = verifyColorSpace( texture, cubeImage[ i ] );\n\n\t\t\t}\n\n\t\t\tconst image = cubeImage[ 0 ],\n\t\t\t\tsupportsMips = isPowerOfTwo$1( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format, texture.colorSpace ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\n\t\t\tconst useTexStorage = ( isWebGL2 && texture.isVideoTexture !== true );\n\t\t\tconst allocateMemory = ( sourceProperties.__version === undefined ) || ( forceUpload === true );\n\t\t\tlet levels = getMipLevels( texture, image, supportsMips );\n\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tlet mipmaps;\n\n\t\t\tif ( isCompressed ) {\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\tif ( texture.format !== RGBAFormat ) {\n\n\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, 0, 0, mipmap.width, mipmap.height, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tif ( useTexStorage && allocateMemory ) {\n\n\t\t\t\t\t// TODO: Uniformly handle mipmap definitions\n\t\t\t\t\t// Normal textures and compressed cube textures define base level + mips with their mipmap array\n\t\t\t\t\t// Uncompressed cube textures use their mipmap array only for mips (no base level)\n\n\t\t\t\t\tif ( mipmaps.length > 0 ) levels ++;\n\n\t\t\t\t\tstate.texStorage2D( _gl.TEXTURE_CUBE_MAP, levels, glInternalFormat, cubeImage[ 0 ].width, cubeImage[ 0 ].height );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, cubeImage[ i ].width, cubeImage[ i ].height, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, mipmapImage.width, mipmapImage.height, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, 0, 0, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( let j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tconst mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( useTexStorage ) {\n\n\t\t\t\t\t\t\t\tstate.texSubImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, 0, 0, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tsourceProperties.__version = source.version;\n\n\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t}\n\n\t\ttextureProperties.__version = texture.version;\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, texture, attachment, textureTarget, level ) {\n\n\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\tconst glType = utils.convert( texture.type );\n\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( ! renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\tconst width = Math.max( 1, renderTarget.width >> level );\n\t\t\tconst height = Math.max( 1, renderTarget.height >> level );\n\n\t\t\tif ( textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY ) {\n\n\t\t\t\tstate.texImage3D( textureTarget, level, glInternalFormat, width, height, renderTarget.depth, 0, glFormat, glType, null );\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( textureTarget, level, glInternalFormat, width, height, 0, glFormat, glType, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, 0, getRenderTargetSamples( renderTarget ) );\n\n\t\t} else if ( textureTarget === _gl.TEXTURE_2D || ( textureTarget >= _gl.TEXTURE_CUBE_MAP_POSITIVE_X && textureTarget <= _gl.TEXTURE_CUBE_MAP_NEGATIVE_Z ) ) { // see #24753\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( texture ).__webglTexture, level );\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\tlet glInternalFormat = ( isWebGL2 === true ) ? _gl.DEPTH_COMPONENT24 : _gl.DEPTH_COMPONENT16;\n\n\t\t\tif ( isMultisample || useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\tif ( depthTexture && depthTexture.isDepthTexture ) {\n\n\t\t\t\t\tif ( depthTexture.type === FloatType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t\t\t} else if ( depthTexture.type === UnsignedIntType ) {\n\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\n\t\t\t}\n\n\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tconst texture = textures[ i ];\n\n\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace );\n\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\tif ( isMultisample && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else if ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\t\tmultisampledRTTExt.renderbufferStorageMultisampleEXT( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tconst isCube = ( renderTarget && renderTarget.isWebGLCubeRenderTarget );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tconst webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\t\tconst samples = getRenderTargetSamples( renderTarget );\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\tif ( useMultisampledRTT( renderTarget ) ) {\n\n\t\t\t\tmultisampledRTTExt.framebufferTexture2DMultisampleEXT( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0, samples );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\n\t\tif ( renderTarget.depthTexture && ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget, false );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget, false );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// rebind framebuffer with external textures\n\tfunction rebindTextures( renderTarget, colorTexture, depthTexture ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\tif ( colorTexture !== undefined ) {\n\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, renderTarget.texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, 0 );\n\n\t\t}\n\n\t\tif ( depthTexture !== undefined ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tconst texture = renderTarget.texture;\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\tconst textureProperties = properties.get( texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tif ( renderTarget.isWebGLMultipleRenderTargets !== true ) {\n\n\t\t\tif ( textureProperties.__webglTexture === undefined ) {\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tinfo.memory.textures ++;\n\n\t\t}\n\n\t\tconst isCube = ( renderTarget.isWebGLCubeRenderTarget === true );\n\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = [];\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ][ level ] = _gl.createFramebuffer();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ level ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tif ( capabilities.drawBuffers ) {\n\n\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst attachmentProperties = properties.get( textures[ i ] );\n\n\t\t\t\t\t\tif ( attachmentProperties.__webglTexture === undefined ) {\n\n\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\tconst textures = isMultipleRenderTargets ? texture : [ texture ];\n\n\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = [];\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tconst texture = textures[ i ];\n\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer[ i ] = _gl.createRenderbuffer();\n\n\t\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst glFormat = utils.convert( texture.format, texture.colorSpace );\n\t\t\t\t\tconst glType = utils.convert( texture.type );\n\t\t\t\t\tconst glInternalFormat = getInternalFormat( texture.internalFormat, glFormat, glType, texture.colorSpace, renderTarget.isXRRenderTarget === true );\n\t\t\t\t\tconst samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t_gl.renderbufferStorageMultisample( _gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, supportsMips );\n\n\t\t\tfor ( let i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ][ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, level );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else if ( isMultipleRenderTargets ) {\n\n\t\t\tconst textures = renderTarget.texture;\n\n\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\tconst attachment = textures[ i ];\n\t\t\t\tconst attachmentProperties = properties.get( attachment );\n\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_2D, attachmentProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, attachment, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, 0 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( attachment, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( _gl.TEXTURE_2D );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t} else {\n\n\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\tif ( renderTarget.isWebGL3DRenderTarget || renderTarget.isWebGLArrayRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tglTextureType = renderTarget.isWebGL3DRenderTarget ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindTexture( glTextureType, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( glTextureType, texture, supportsMips );\n\n\t\t\tif ( isWebGL2 && texture.mipmaps && texture.mipmaps.length > 0 ) {\n\n\t\t\t\tfor ( let level = 0; level < texture.mipmaps.length; level ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ level ], renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, level );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType, 0 );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( glTextureType );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tconst supportsMips = isPowerOfTwo$1( renderTarget ) || isWebGL2;\n\n\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [ renderTarget.texture ];\n\n\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\tconst texture = textures[ i ];\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\t\tconst webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target );\n\t\t\t\tstate.unbindTexture();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\tif ( ( isWebGL2 && renderTarget.samples > 0 ) && useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets ? renderTarget.texture : [ renderTarget.texture ];\n\t\t\tconst width = renderTarget.width;\n\t\t\tconst height = renderTarget.height;\n\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\tconst invalidationArray = [];\n\t\t\tconst depthStyle = renderTarget.stencilBuffer ? _gl.DEPTH_STENCIL_ATTACHMENT : _gl.DEPTH_ATTACHMENT;\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\tconst isMultipleRenderTargets = ( renderTarget.isWebGLMultipleRenderTargets === true );\n\n\t\t\t// If MRT we need to remove FBO attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, null );\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, null, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\n\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\tinvalidationArray.push( _gl.COLOR_ATTACHMENT0 + i );\n\n\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\tinvalidationArray.push( depthStyle );\n\n\t\t\t\t}\n\n\t\t\t\tconst ignoreDepthValues = ( renderTargetProperties.__ignoreDepthValues !== undefined ) ? renderTargetProperties.__ignoreDepthValues : false;\n\n\t\t\t\tif ( ignoreDepthValues === false ) {\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) mask |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.READ_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ignoreDepthValues === true ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, [ depthStyle ] );\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.DRAW_FRAMEBUFFER, [ depthStyle ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST );\n\n\t\t\t\tif ( supportsInvalidateFramebuffer ) {\n\n\t\t\t\t\t_gl.invalidateFramebuffer( _gl.READ_FRAMEBUFFER, invalidationArray );\n\n\t\t\t\t}\n\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.READ_FRAMEBUFFER, null );\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, null );\n\n\t\t\t// If MRT since pre-blit we removed the FBO we need to reconstruct the attachments\n\t\t\tif ( isMultipleRenderTargets ) {\n\n\t\t\t\tfor ( let i = 0; i < textures.length; i ++ ) {\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer[ i ] );\n\n\t\t\t\t\tconst webglTexture = properties.get( textures[ i ] ).__webglTexture;\n\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\t_gl.framebufferTexture2D( _gl.DRAW_FRAMEBUFFER, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D, webglTexture, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer( _gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer );\n\n\t\t}\n\n\t}\n\n\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\treturn Math.min( maxSamples, renderTarget.samples );\n\n\t}\n\n\tfunction useMultisampledRTT( renderTarget ) {\n\n\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\treturn isWebGL2 && renderTarget.samples > 0 && extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true && renderTargetProperties.__useRenderToTexture !== false;\n\n\t}\n\n\tfunction updateVideoTexture( texture ) {\n\n\t\tconst frame = info.render.frame;\n\n\t\t// Check the last frame we updated the VideoTexture\n\n\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t_videoTextures.set( texture, frame );\n\t\t\ttexture.update();\n\n\t\t}\n\n\t}\n\n\tfunction verifyColorSpace( texture, image ) {\n\n\t\tconst colorSpace = texture.colorSpace;\n\t\tconst format = texture.format;\n\t\tconst type = texture.type;\n\n\t\tif ( texture.isCompressedTexture === true || texture.isVideoTexture === true || texture.format === _SRGBAFormat ) return image;\n\n\t\tif ( colorSpace !== LinearSRGBColorSpace && colorSpace !== NoColorSpace ) {\n\n\t\t\t// sRGB\n\n\t\t\tif ( ColorManagement.getTransfer( colorSpace ) === SRGBTransfer ) {\n\n\t\t\t\tif ( isWebGL2 === false ) {\n\n\t\t\t\t\t// in WebGL 1, try to use EXT_sRGB extension and unsized formats\n\n\t\t\t\t\tif ( extensions.has( 'EXT_sRGB' ) === true && format === RGBAFormat ) {\n\n\t\t\t\t\t\ttexture.format = _SRGBAFormat;\n\n\t\t\t\t\t\t// it's not possible to generate mips in WebGL 1 with this extension\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// slow fallback (CPU decode)\n\n\t\t\t\t\t\timage = ImageUtils.sRGBToLinear( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// in WebGL 2 uncompressed textures can only be sRGB encoded if they have the RGBA8 format\n\n\t\t\t\t\tif ( format !== RGBAFormat || type !== UnsignedByteType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.WebGLTextures: Unsupported texture color space:', colorSpace );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\t//\n\n\tthis.allocateTextureUnit = allocateTextureUnit;\n\tthis.resetTextureUnits = resetTextureUnits;\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTexture2DArray = setTexture2DArray;\n\tthis.setTexture3D = setTexture3D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.rebindTextures = rebindTextures;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\tthis.setupDepthRenderbuffer = setupDepthRenderbuffer;\n\tthis.setupFrameBufferTexture = setupFrameBufferTexture;\n\tthis.useMultisampledRTT = useMultisampledRTT;\n\n}\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, colorSpace = NoColorSpace ) {\n\n\t\tlet extension;\n\n\t\tconst transfer = ColorManagement.getTransfer( colorSpace );\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( transfer === SRGBTransfer ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format || p === RGB_BPTC_SIGNED_Format || p === RGB_BPTC_UNSIGNED_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( transfer === SRGBTransfer ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\t\t\t\tif ( p === RGB_BPTC_SIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;\n\t\t\t\tif ( p === RGB_BPTC_UNSIGNED_Format ) return extension.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// RGTC\n\n\t\tif ( p === RED_RGTC1_Format || p === SIGNED_RED_RGTC1_Format || p === RED_GREEN_RGTC2_Format || p === SIGNED_RED_GREEN_RGTC2_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_rgtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return extension.COMPRESSED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === SIGNED_RED_RGTC1_Format ) return extension.COMPRESSED_SIGNED_RED_RGTC1_EXT;\n\t\t\t\tif ( p === RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_RED_GREEN_RGTC2_EXT;\n\t\t\t\tif ( p === SIGNED_RED_GREEN_RGTC2_Format ) return extension.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\nclass ArrayCamera extends PerspectiveCamera {\n\n\tconstructor( array = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isArrayCamera = true;\n\n\t\tthis.cameras = array;\n\n\t}\n\n}\n\nclass Group extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isGroup = true;\n\n\t\tthis.type = 'Group';\n\n\t}\n\n}\n\nconst _moveEvent = { type: 'move' };\n\nclass WebXRController {\n\n\tconstructor() {\n\n\t\tthis._targetRay = null;\n\t\tthis._grip = null;\n\t\tthis._hand = null;\n\n\t}\n\n\tgetHandSpace() {\n\n\t\tif ( this._hand === null ) {\n\n\t\t\tthis._hand = new Group();\n\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\tthis._hand.visible = false;\n\n\t\t\tthis._hand.joints = {};\n\t\t\tthis._hand.inputState = { pinching: false };\n\n\t\t}\n\n\t\treturn this._hand;\n\n\t}\n\n\tgetTargetRaySpace() {\n\n\t\tif ( this._targetRay === null ) {\n\n\t\t\tthis._targetRay = new Group();\n\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\tthis._targetRay.visible = false;\n\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._targetRay;\n\n\t}\n\n\tgetGripSpace() {\n\n\t\tif ( this._grip === null ) {\n\n\t\t\tthis._grip = new Group();\n\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\tthis._grip.visible = false;\n\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\tthis._grip.angularVelocity = new Vector3();\n\n\t\t}\n\n\t\treturn this._grip;\n\n\t}\n\n\tdispatchEvent( event ) {\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.dispatchEvent( event );\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.dispatchEvent( event );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tconnect( inputSource ) {\n\n\t\tif ( inputSource && inputSource.hand ) {\n\n\t\t\tconst hand = this._hand;\n\n\t\t\tif ( hand ) {\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Initialize hand with joints when connected\n\t\t\t\t\tthis._getHandJoint( hand, inputjoint );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.dispatchEvent( { type: 'connected', data: inputSource } );\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect( inputSource ) {\n\n\t\tthis.dispatchEvent( { type: 'disconnected', data: inputSource } );\n\n\t\tif ( this._targetRay !== null ) {\n\n\t\t\tthis._targetRay.visible = false;\n\n\t\t}\n\n\t\tif ( this._grip !== null ) {\n\n\t\t\tthis._grip.visible = false;\n\n\t\t}\n\n\t\tif ( this._hand !== null ) {\n\n\t\t\tthis._hand.visible = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tupdate( inputSource, frame, referenceSpace ) {\n\n\t\tlet inputPose = null;\n\t\tlet gripPose = null;\n\t\tlet handPose = null;\n\n\t\tconst targetRay = this._targetRay;\n\t\tconst grip = this._grip;\n\t\tconst hand = this._hand;\n\n\t\tif ( inputSource && frame.session.visibilityState !== 'visible-blurred' ) {\n\n\t\t\tif ( hand && inputSource.hand ) {\n\n\t\t\t\thandPose = true;\n\n\t\t\t\tfor ( const inputjoint of inputSource.hand.values() ) {\n\n\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\tconst jointPose = frame.getJointPose( inputjoint, referenceSpace );\n\n\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\tconst joint = this._getHandJoint( hand, inputjoint );\n\n\t\t\t\t\tif ( jointPose !== null ) {\n\n\t\t\t\t\t\tjoint.matrix.fromArray( jointPose.transform.matrix );\n\t\t\t\t\t\tjoint.matrix.decompose( joint.position, joint.rotation, joint.scale );\n\t\t\t\t\t\tjoint.matrixWorldNeedsUpdate = true;\n\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tjoint.visible = jointPose !== null;\n\n\t\t\t\t}\n\n\t\t\t\t// Custom events\n\n\t\t\t\t// Check pinchz\n\t\t\t\tconst indexTip = hand.joints[ 'index-finger-tip' ];\n\t\t\t\tconst thumbTip = hand.joints[ 'thumb-tip' ];\n\t\t\t\tconst distance = indexTip.position.distanceTo( thumbTip.position );\n\n\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\tif ( hand.inputState.pinching && distance > distanceToPinch + threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t} else if ( ! hand.inputState.pinching && distance <= distanceToPinch - threshold ) {\n\n\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\tthis.dispatchEvent( {\n\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\ttarget: this\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( grip !== null && inputSource.gripSpace ) {\n\n\t\t\t\t\tgripPose = frame.getPose( inputSource.gripSpace, referenceSpace );\n\n\t\t\t\t\tif ( gripPose !== null ) {\n\n\t\t\t\t\t\tgrip.matrix.fromArray( gripPose.transform.matrix );\n\t\t\t\t\t\tgrip.matrix.decompose( grip.position, grip.rotation, grip.scale );\n\t\t\t\t\t\tgrip.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\t\tif ( gripPose.linearVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\tgrip.linearVelocity.copy( gripPose.linearVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( gripPose.angularVelocity ) {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\tgrip.angularVelocity.copy( gripPose.angularVelocity );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( targetRay !== null ) {\n\n\t\t\t\tinputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t// Some runtimes (namely Vive Cosmos with Vive OpenXR Runtime) have only grip space and ray space is equal to it\n\t\t\t\tif ( inputPose === null && gripPose !== null ) {\n\n\t\t\t\t\tinputPose = gripPose;\n\n\t\t\t\t}\n\n\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\ttargetRay.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\ttargetRay.matrix.decompose( targetRay.position, targetRay.rotation, targetRay.scale );\n\t\t\t\t\ttargetRay.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t\tif ( inputPose.linearVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\ttargetRay.linearVelocity.copy( inputPose.linearVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( inputPose.angularVelocity ) {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\ttargetRay.angularVelocity.copy( inputPose.angularVelocity );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.dispatchEvent( _moveEvent );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tif ( targetRay !== null ) {\n\n\t\t\ttargetRay.visible = ( inputPose !== null );\n\n\t\t}\n\n\t\tif ( grip !== null ) {\n\n\t\t\tgrip.visible = ( gripPose !== null );\n\n\t\t}\n\n\t\tif ( hand !== null ) {\n\n\t\t\thand.visible = ( handPose !== null );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// private method\n\n\t_getHandJoint( hand, inputjoint ) {\n\n\t\tif ( hand.joints[ inputjoint.jointName ] === undefined ) {\n\n\t\t\tconst joint = new Group();\n\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\tjoint.visible = false;\n\t\t\thand.joints[ inputjoint.jointName ] = joint;\n\n\t\t\thand.add( joint );\n\n\t\t}\n\n\t\treturn hand.joints[ inputjoint.jointName ];\n\n\t}\n\n}\n\nclass WebXRManager extends EventDispatcher {\n\n\tconstructor( renderer, gl ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\n\t\tlet session = null;\n\n\t\tlet framebufferScaleFactor = 1.0;\n\n\t\tlet referenceSpace = null;\n\t\tlet referenceSpaceType = 'local-floor';\n\t\t// Set default foveation to maximum.\n\t\tlet foveation = 1.0;\n\t\tlet customReferenceSpace = null;\n\n\t\tlet pose = null;\n\t\tlet glBinding = null;\n\t\tlet glProjLayer = null;\n\t\tlet glBaseLayer = null;\n\t\tlet xrFrame = null;\n\t\tconst attributes = gl.getContextAttributes();\n\t\tlet initialRenderTarget = null;\n\t\tlet newRenderTarget = null;\n\n\t\tconst controllers = [];\n\t\tconst controllerInputSources = [];\n\n\t\tconst currentSize = new Vector2();\n\t\tlet currentPixelRatio = null;\n\n\t\t//\n\n\t\tconst cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tconst cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tconst cameras = [ cameraL, cameraR ];\n\n\t\tconst cameraXR = new ArrayCamera();\n\t\tcameraXR.layers.enable( 1 );\n\t\tcameraXR.layers.enable( 2 );\n\n\t\tlet _currentDepthNear = null;\n\t\tlet _currentDepthFar = null;\n\n\t\t//\n\n\t\tthis.cameraAutoUpdate = true;\n\t\tthis.enabled = false;\n\n\t\tthis.isPresenting = false;\n\n\t\tthis.getController = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getTargetRaySpace();\n\n\t\t};\n\n\t\tthis.getControllerGrip = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getGripSpace();\n\n\t\t};\n\n\t\tthis.getHand = function ( index ) {\n\n\t\t\tlet controller = controllers[ index ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new WebXRController();\n\t\t\t\tcontrollers[ index ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller.getHandSpace();\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tconst controllerIndex = controllerInputSources.indexOf( event.inputSource );\n\n\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\tif ( controller !== undefined ) {\n\n\t\t\t\tcontroller.update( event.inputSource, event.frame, customReferenceSpace || referenceSpace );\n\t\t\t\tcontroller.dispatchEvent( { type: event.type, data: event.inputSource } );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\tsession.removeEventListener( 'select', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectstart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'selectend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeeze', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezestart', onSessionEvent );\n\t\t\tsession.removeEventListener( 'squeezeend', onSessionEvent );\n\t\t\tsession.removeEventListener( 'end', onSessionEnd );\n\t\t\tsession.removeEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\n\t\t\t\tif ( inputSource === null ) continue;\n\n\t\t\t\tcontrollerInputSources[ i ] = null;\n\n\t\t\t\tcontrollers[ i ].disconnect( inputSource );\n\n\t\t\t}\n\n\t\t\t_currentDepthNear = null;\n\t\t\t_currentDepthFar = null;\n\n\t\t\t// restore framebuffer/rendering state\n\n\t\t\trenderer.setRenderTarget( initialRenderTarget );\n\n\t\t\tglBaseLayer = null;\n\t\t\tglProjLayer = null;\n\t\t\tglBinding = null;\n\t\t\tsession = null;\n\t\t\tnewRenderTarget = null;\n\n\t\t\t//\n\n\t\t\tanimation.stop();\n\n\t\t\tscope.isPresenting = false;\n\n\t\t\trenderer.setPixelRatio( currentPixelRatio );\n\t\t\trenderer.setSize( currentSize.width, currentSize.height, false );\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change framebuffer scale while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t\tif ( scope.isPresenting === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebXRManager: Cannot change reference space type while presenting.' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getReferenceSpace = function () {\n\n\t\t\treturn customReferenceSpace || referenceSpace;\n\n\t\t};\n\n\t\tthis.setReferenceSpace = function ( space ) {\n\n\t\t\tcustomReferenceSpace = space;\n\n\t\t};\n\n\t\tthis.getBaseLayer = function () {\n\n\t\t\treturn glProjLayer !== null ? glProjLayer : glBaseLayer;\n\n\t\t};\n\n\t\tthis.getBinding = function () {\n\n\t\t\treturn glBinding;\n\n\t\t};\n\n\t\tthis.getFrame = function () {\n\n\t\t\treturn xrFrame;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = async function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tinitialRenderTarget = renderer.getRenderTarget();\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeeze', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezestart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'squeezeend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\t\t\t\tsession.addEventListener( 'inputsourceschange', onInputSourcesChange );\n\n\t\t\t\tif ( attributes.xrCompatible !== true ) {\n\n\t\t\t\t\tawait gl.makeXRCompatible();\n\n\t\t\t\t}\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\tif ( ( session.renderState.layers === undefined ) || ( renderer.capabilities.isWebGL2 === false ) ) {\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: ( session.renderState.layers === undefined ) ? attributes.antialias : true,\n\t\t\t\t\t\talpha: true,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBaseLayer = new XRWebGLLayer( session, gl, layerInit );\n\n\t\t\t\t\tsession.updateRenderState( { baseLayer: glBaseLayer } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glBaseLayer.framebufferWidth, glBaseLayer.framebufferHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglBaseLayer.framebufferWidth,\n\t\t\t\t\t\tglBaseLayer.framebufferHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tlet depthFormat = null;\n\t\t\t\t\tlet depthType = null;\n\t\t\t\t\tlet glDepthFormat = null;\n\n\t\t\t\t\tif ( attributes.depth ) {\n\n\t\t\t\t\t\tglDepthFormat = attributes.stencil ? gl.DEPTH24_STENCIL8 : gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\tdepthFormat = attributes.stencil ? DepthStencilFormat : DepthFormat;\n\t\t\t\t\t\tdepthType = attributes.stencil ? UnsignedInt248Type : UnsignedIntType;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst projectionlayerInit = {\n\t\t\t\t\t\tcolorFormat: gl.RGBA8,\n\t\t\t\t\t\tdepthFormat: glDepthFormat,\n\t\t\t\t\t\tscaleFactor: framebufferScaleFactor\n\t\t\t\t\t};\n\n\t\t\t\t\tglBinding = new XRWebGLBinding( session, gl );\n\n\t\t\t\t\tglProjLayer = glBinding.createProjectionLayer( projectionlayerInit );\n\n\t\t\t\t\tsession.updateRenderState( { layers: [ glProjLayer ] } );\n\n\t\t\t\t\trenderer.setPixelRatio( 1 );\n\t\t\t\t\trenderer.setSize( glProjLayer.textureWidth, glProjLayer.textureHeight, false );\n\n\t\t\t\t\tnewRenderTarget = new WebGLRenderTarget(\n\t\t\t\t\t\tglProjLayer.textureWidth,\n\t\t\t\t\t\tglProjLayer.textureHeight,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tformat: RGBAFormat,\n\t\t\t\t\t\t\ttype: UnsignedByteType,\n\t\t\t\t\t\t\tdepthTexture: new DepthTexture( glProjLayer.textureWidth, glProjLayer.textureHeight, depthType, undefined, undefined, undefined, undefined, undefined, undefined, depthFormat ),\n\t\t\t\t\t\t\tstencilBuffer: attributes.stencil,\n\t\t\t\t\t\t\tcolorSpace: renderer.outputColorSpace,\n\t\t\t\t\t\t\tsamples: attributes.antialias ? 4 : 0\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tconst renderTargetProperties = renderer.properties.get( newRenderTarget );\n\t\t\t\t\trenderTargetProperties.__ignoreDepthValues = glProjLayer.ignoreDepthValues;\n\n\t\t\t\t}\n\n\t\t\t\tnewRenderTarget.isXRRenderTarget = true; // TODO Remove this when possible, see #23278\n\n\t\t\t\tthis.setFoveation( foveation );\n\n\t\t\t\tcustomReferenceSpace = null;\n\t\t\t\treferenceSpace = await session.requestReferenceSpace( referenceSpaceType );\n\n\t\t\t\tanimation.setContext( session );\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.isPresenting = true;\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.getEnvironmentBlendMode = function () {\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\treturn session.environmentBlendMode;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction onInputSourcesChange( event ) {\n\n\t\t\t// Notify disconnected\n\n\t\t\tfor ( let i = 0; i < event.removed.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.removed[ i ];\n\t\t\t\tconst index = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( index >= 0 ) {\n\n\t\t\t\t\tcontrollerInputSources[ index ] = null;\n\t\t\t\t\tcontrollers[ index ].disconnect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Notify connected\n\n\t\t\tfor ( let i = 0; i < event.added.length; i ++ ) {\n\n\t\t\t\tconst inputSource = event.added[ i ];\n\n\t\t\t\tlet controllerIndex = controllerInputSources.indexOf( inputSource );\n\n\t\t\t\tif ( controllerIndex === - 1 ) {\n\n\t\t\t\t\t// Assign input source a controller that currently has no input source\n\n\t\t\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( i >= controllerInputSources.length ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources.push( inputSource );\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t} else if ( controllerInputSources[ i ] === null ) {\n\n\t\t\t\t\t\t\tcontrollerInputSources[ i ] = inputSource;\n\t\t\t\t\t\t\tcontrollerIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If all controllers do currently receive input we ignore new ones\n\n\t\t\t\t\tif ( controllerIndex === - 1 ) break;\n\n\t\t\t\t}\n\n\t\t\t\tconst controller = controllers[ controllerIndex ];\n\n\t\t\t\tif ( controller ) {\n\n\t\t\t\t\tcontroller.connect( inputSource );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst cameraLPos = new Vector3();\n\t\tconst cameraRPos = new Vector3();\n\n\t\t/**\n\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t * the cameras' projection and world matrices have already been set.\n\t\t * And that near and far planes are identical for both cameras.\n\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t */\n\t\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\t\tconst ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\tconst projR = cameraR.projectionMatrix.elements;\n\n\t\t\t// VR systems will have identical far and near planes, and\n\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t// Use the left camera for these values.\n\t\t\tconst near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\t\tconst far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\t\tconst topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\t\tconst bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\t\tconst leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\t\tconst rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\t\tconst left = near * leftFov;\n\t\t\tconst right = near * rightFov;\n\n\t\t\t// Calculate the new camera's position offset from the\n\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\t\tconst zOffset = ipd / ( - leftFov + rightFov );\n\t\t\tconst xOffset = zOffset * - leftFov;\n\n\t\t\t// TODO: Better way to apply this offset?\n\t\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.translateX( xOffset );\n\t\t\tcamera.translateZ( zOffset );\n\t\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t\t// Find the union of the frustum values of the cameras and scale\n\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t// although must now be relative to the new union camera.\n\t\t\tconst near2 = near + zOffset;\n\t\t\tconst far2 = far + zOffset;\n\t\t\tconst left2 = left - xOffset;\n\t\t\tconst right2 = right + ( ipd - xOffset );\n\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\n\t\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\n\t\t}\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.copy( camera.matrixWorld ).invert();\n\n\t\t}\n\n\t\tthis.updateCamera = function ( camera ) {\n\n\t\t\tif ( session === null ) return;\n\n\t\t\tcameraXR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\tcameraXR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\tif ( _currentDepthNear !== cameraXR.near || _currentDepthFar !== cameraXR.far ) {\n\n\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\n\t\t\t\tsession.updateRenderState( {\n\t\t\t\t\tdepthNear: cameraXR.near,\n\t\t\t\t\tdepthFar: cameraXR.far\n\t\t\t\t} );\n\n\t\t\t\t_currentDepthNear = cameraXR.near;\n\t\t\t\t_currentDepthFar = cameraXR.far;\n\n\t\t\t}\n\n\t\t\tconst parent = camera.parent;\n\t\t\tconst cameras = cameraXR.cameras;\n\n\t\t\tupdateCamera( cameraXR, parent );\n\n\t\t\tfor ( let i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t}\n\n\t\t\t// update projection matrix for proper view frustum culling\n\n\t\t\tif ( cameras.length === 2 ) {\n\n\t\t\t\tsetProjectionFromUnion( cameraXR, cameraL, cameraR );\n\n\t\t\t} else {\n\n\t\t\t\t// assume single camera setup (AR)\n\n\t\t\t\tcameraXR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t\t}\n\n\t\t\t// update user camera and its children\n\n\t\t\tupdateUserCamera( camera, cameraXR, parent );\n\n\t\t};\n\n\t\tfunction updateUserCamera( camera, cameraXR, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrix.copy( cameraXR.matrixWorld );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrix.copy( parent.matrixWorld );\n\t\t\t\tcamera.matrix.invert();\n\t\t\t\tcamera.matrix.multiply( cameraXR.matrixWorld );\n\n\t\t\t}\n\n\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\tcamera.updateMatrixWorld( true );\n\n\t\t\tcamera.projectionMatrix.copy( cameraXR.projectionMatrix );\n\t\t\tcamera.projectionMatrixInverse.copy( cameraXR.projectionMatrixInverse );\n\n\t\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\t\tcamera.fov = RAD2DEG * 2 * Math.atan( 1 / camera.projectionMatrix.elements[ 5 ] );\n\t\t\t\tcamera.zoom = 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.getCamera = function () {\n\n\t\t\treturn cameraXR;\n\n\t\t};\n\n\t\tthis.getFoveation = function () {\n\n\t\t\tif ( glProjLayer === null && glBaseLayer === null ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn foveation;\n\n\t\t};\n\n\t\tthis.setFoveation = function ( value ) {\n\n\t\t\t// 0 = no foveation = full resolution\n\t\t\t// 1 = maximum foveation = the edges render at lower resolution\n\n\t\t\tfoveation = value;\n\n\t\t\tif ( glProjLayer !== null ) {\n\n\t\t\t\tglProjLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t\tif ( glBaseLayer !== null && glBaseLayer.fixedFoveation !== undefined ) {\n\n\t\t\t\tglBaseLayer.fixedFoveation = value;\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( customReferenceSpace || referenceSpace );\n\t\t\txrFrame = frame;\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tconst views = pose.views;\n\n\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\trenderer.setRenderTargetFramebuffer( newRenderTarget, glBaseLayer.framebuffer );\n\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t}\n\n\t\t\t\tlet cameraXRNeedsUpdate = false;\n\n\t\t\t\t// check if it's necessary to rebuild cameraXR's camera list\n\n\t\t\t\tif ( views.length !== cameraXR.cameras.length ) {\n\n\t\t\t\t\tcameraXR.cameras.length = 0;\n\t\t\t\t\tcameraXRNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tconst view = views[ i ];\n\n\t\t\t\t\tlet viewport = null;\n\n\t\t\t\t\tif ( glBaseLayer !== null ) {\n\n\t\t\t\t\t\tviewport = glBaseLayer.getViewport( view );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst glSubImage = glBinding.getViewSubImage( glProjLayer, view );\n\t\t\t\t\t\tviewport = glSubImage.viewport;\n\n\t\t\t\t\t\t// For side-by-side projection, we only produce a single texture for both eyes.\n\t\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\t\trenderer.setRenderTargetTextures(\n\t\t\t\t\t\t\t\tnewRenderTarget,\n\t\t\t\t\t\t\t\tglSubImage.colorTexture,\n\t\t\t\t\t\t\t\tglProjLayer.ignoreDepthValues ? undefined : glSubImage.depthStencilTexture );\n\n\t\t\t\t\t\t\trenderer.setRenderTarget( newRenderTarget );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet camera = cameras[ i ];\n\n\t\t\t\t\tif ( camera === undefined ) {\n\n\t\t\t\t\t\tcamera = new PerspectiveCamera();\n\t\t\t\t\t\tcamera.layers.enable( i );\n\t\t\t\t\t\tcamera.viewport = new Vector4();\n\t\t\t\t\t\tcameras[ i ] = camera;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcamera.matrix.fromArray( view.transform.matrix );\n\t\t\t\t\tcamera.matrix.decompose( camera.position, camera.quaternion, camera.scale );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.projectionMatrixInverse.copy( camera.projectionMatrix ).invert();\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraXR.matrix.copy( camera.matrix );\n\t\t\t\t\t\tcameraXR.matrix.decompose( cameraXR.position, cameraXR.quaternion, cameraXR.scale );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( cameraXRNeedsUpdate === true ) {\n\n\t\t\t\t\t\tcameraXR.cameras.push( camera );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( let i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tconst inputSource = controllerInputSources[ i ];\n\t\t\t\tconst controller = controllers[ i ];\n\n\t\t\t\tif ( inputSource !== null && controller !== undefined ) {\n\n\t\t\t\t\tcontroller.update( inputSource, frame, customReferenceSpace || referenceSpace );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time, frame );\n\n\t\t\tif ( frame.detectedPlanes ) {\n\n\t\t\t\tscope.dispatchEvent( { type: 'planesdetected', data: frame } );\n\n\t\t\t}\n\n\t\t\txrFrame = null;\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t}\n\n}\n\nfunction WebGLMaterials( renderer, properties ) {\n\n\tfunction refreshTransformUniform( map, uniform ) {\n\n\t\tif ( map.matrixAutoUpdate === true ) {\n\n\t\t\tmap.updateMatrix();\n\n\t\t}\n\n\t\tuniform.value.copy( map.matrix );\n\n\t}\n\n\tfunction refreshFogUniforms( uniforms, fog ) {\n\n\t\tfog.color.getRGB( uniforms.fogColor.value, getUnlitUniformColorSpace( renderer ) );\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshMaterialUniforms( uniforms, material, pixelRatio, height, transmissionRenderTarget ) {\n\n\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshToonMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsToon( uniforms, material );\n\n\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\trefreshUniformsPhysical( uniforms, material, transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsMatcap( uniforms, material );\n\n\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\t\t\trefreshUniformsDistance( uniforms, material );\n\n\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\trefreshUniformsCommon( uniforms, material );\n\n\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\trefreshUniformsLine( uniforms, material );\n\n\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\trefreshUniformsDash( uniforms, material );\n\n\t\t\t}\n\n\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\trefreshUniformsPoints( uniforms, material, pixelRatio, height );\n\n\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\trefreshUniformsSprites( uniforms, material );\n\n\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\tuniforms.color.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t} else if ( material.isShaderMaterial ) {\n\n\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\n\t\t\trefreshTransformUniform( material.bumpMap, uniforms.bumpMapTransform );\n\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.bumpScale.value *= - 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\trefreshTransformUniform( material.normalMap, uniforms.normalMapTransform );\n\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tuniforms.normalScale.value.negate();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\n\t\t\trefreshTransformUniform( material.displacementMap, uniforms.displacementMapTransform );\n\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\trefreshTransformUniform( material.emissiveMap, uniforms.emissiveMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\trefreshTransformUniform( material.specularMap, uniforms.specularMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\tuniforms.envMap.value = envMap;\n\n\t\t\tuniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.ior.value = material.ior;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\n\t\t\t// artist-friendly light intensity scaling factor\n\t\t\tconst scaleFactor = ( renderer._useLegacyLights === true ) ? Math.PI : 1;\n\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity * scaleFactor;\n\n\t\t\trefreshTransformUniform( material.lightMap, uniforms.lightMapTransform );\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\trefreshTransformUniform( material.aoMap, uniforms.aoMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material, pixelRatio, height ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * pixelRatio;\n\t\tuniforms.scale.value = height * 0.5;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.uvTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\tuniforms.diffuse.value.copy( material.color );\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.rotation.value = material.rotation;\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t\trefreshTransformUniform( material.map, uniforms.mapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\trefreshTransformUniform( material.alphaMap, uniforms.alphaMapTransform );\n\n\t\t}\n\n\t\tif ( material.alphaTest > 0 ) {\n\n\t\t\tuniforms.alphaTest.value = material.alphaTest;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value.copy( material.specular );\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\trefreshTransformUniform( material.metalnessMap, uniforms.metalnessMapTransform );\n\n\t\t}\n\n\t\tuniforms.roughness.value = material.roughness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\trefreshTransformUniform( material.roughnessMap, uniforms.roughnessMapTransform );\n\n\t\t}\n\n\t\tconst envMap = properties.get( material ).envMap;\n\n\t\tif ( envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material, transmissionRenderTarget ) {\n\n\t\tuniforms.ior.value = material.ior; // also part of uniforms common\n\n\t\tif ( material.sheen > 0 ) {\n\n\t\t\tuniforms.sheenColor.value.copy( material.sheenColor ).multiplyScalar( material.sheen );\n\n\t\t\tuniforms.sheenRoughness.value = material.sheenRoughness;\n\n\t\t\tif ( material.sheenColorMap ) {\n\n\t\t\t\tuniforms.sheenColorMap.value = material.sheenColorMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenColorMap, uniforms.sheenColorMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.sheenRoughnessMap ) {\n\n\t\t\t\tuniforms.sheenRoughnessMap.value = material.sheenRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.sheenRoughnessMap, uniforms.sheenRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.clearcoat > 0 ) {\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n\t\t\tif ( material.clearcoatMap ) {\n\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatMap, uniforms.clearcoatMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatRoughnessMap ) {\n\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatRoughnessMap, uniforms.clearcoatRoughnessMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\trefreshTransformUniform( material.clearcoatNormalMap, uniforms.clearcoatNormalMapTransform );\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.iridescence > 0 ) {\n\n\t\t\tuniforms.iridescence.value = material.iridescence;\n\t\t\tuniforms.iridescenceIOR.value = material.iridescenceIOR;\n\t\t\tuniforms.iridescenceThicknessMinimum.value = material.iridescenceThicknessRange[ 0 ];\n\t\t\tuniforms.iridescenceThicknessMaximum.value = material.iridescenceThicknessRange[ 1 ];\n\n\t\t\tif ( material.iridescenceMap ) {\n\n\t\t\t\tuniforms.iridescenceMap.value = material.iridescenceMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceMap, uniforms.iridescenceMapTransform );\n\n\t\t\t}\n\n\t\t\tif ( material.iridescenceThicknessMap ) {\n\n\t\t\t\tuniforms.iridescenceThicknessMap.value = material.iridescenceThicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.iridescenceThicknessMap, uniforms.iridescenceThicknessMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.transmission > 0 ) {\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\tuniforms.transmissionSamplerSize.value.set( transmissionRenderTarget.width, transmissionRenderTarget.height );\n\n\t\t\tif ( material.transmissionMap ) {\n\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\n\t\t\t\trefreshTransformUniform( material.transmissionMap, uniforms.transmissionMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif ( material.thicknessMap ) {\n\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\n\t\t\t\trefreshTransformUniform( material.thicknessMap, uniforms.thicknessMapTransform );\n\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy( material.attenuationColor );\n\n\t\t}\n\n\t\tif ( material.anisotropy > 0 ) {\n\n\t\t\tuniforms.anisotropyVector.value.set( material.anisotropy * Math.cos( material.anisotropyRotation ), material.anisotropy * Math.sin( material.anisotropyRotation ) );\n\n\t\t\tif ( material.anisotropyMap ) {\n\n\t\t\t\tuniforms.anisotropyMap.value = material.anisotropyMap;\n\n\t\t\t\trefreshTransformUniform( material.anisotropyMap, uniforms.anisotropyMapTransform );\n\n\t\t\t}\n\n\t\t}\n\n\t\tuniforms.specularIntensity.value = material.specularIntensity;\n\t\tuniforms.specularColor.value.copy( material.specularColor );\n\n\t\tif ( material.specularColorMap ) {\n\n\t\t\tuniforms.specularColorMap.value = material.specularColorMap;\n\n\t\t\trefreshTransformUniform( material.specularColorMap, uniforms.specularColorMapTransform );\n\n\t\t}\n\n\t\tif ( material.specularIntensityMap ) {\n\n\t\t\tuniforms.specularIntensityMap.value = material.specularIntensityMap;\n\n\t\t\trefreshTransformUniform( material.specularIntensityMap, uniforms.specularIntensityMapTransform );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\tif ( material.matcap ) {\n\n\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tconst light = properties.get( material ).light;\n\n\t\tuniforms.referencePosition.value.setFromMatrixPosition( light.matrixWorld );\n\t\tuniforms.nearDistance.value = light.shadow.camera.near;\n\t\tuniforms.farDistance.value = light.shadow.camera.far;\n\n\t}\n\n\treturn {\n\t\trefreshFogUniforms: refreshFogUniforms,\n\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t};\n\n}\n\nfunction WebGLUniformsGroups( gl, info, capabilities, state ) {\n\n\tlet buffers = {};\n\tlet updateList = {};\n\tlet allocatedBindingPoints = [];\n\n\tconst maxBindingPoints = ( capabilities.isWebGL2 ) ? gl.getParameter( gl.MAX_UNIFORM_BUFFER_BINDINGS ) : 0; // binding points are global whereas block indices are per shader program\n\n\tfunction bind( uniformsGroup, program ) {\n\n\t\tconst webglProgram = program.program;\n\t\tstate.uniformBlockBinding( uniformsGroup, webglProgram );\n\n\t}\n\n\tfunction update( uniformsGroup, program ) {\n\n\t\tlet buffer = buffers[ uniformsGroup.id ];\n\n\t\tif ( buffer === undefined ) {\n\n\t\t\tprepareUniformsGroup( uniformsGroup );\n\n\t\t\tbuffer = createBuffer( uniformsGroup );\n\t\t\tbuffers[ uniformsGroup.id ] = buffer;\n\n\t\t\tuniformsGroup.addEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\t}\n\n\t\t// ensure to update the binding points/block indices mapping for this program\n\n\t\tconst webglProgram = program.program;\n\t\tstate.updateUBOMapping( uniformsGroup, webglProgram );\n\n\t\t// update UBO once per frame\n\n\t\tconst frame = info.render.frame;\n\n\t\tif ( updateList[ uniformsGroup.id ] !== frame ) {\n\n\t\t\tupdateBufferData( uniformsGroup );\n\n\t\t\tupdateList[ uniformsGroup.id ] = frame;\n\n\t\t}\n\n\t}\n\n\tfunction createBuffer( uniformsGroup ) {\n\n\t\t// the setup of an UBO is independent of a particular shader program but global\n\n\t\tconst bindingPointIndex = allocateBindingPointIndex();\n\t\tuniformsGroup.__bindingPointIndex = bindingPointIndex;\n\n\t\tconst buffer = gl.createBuffer();\n\t\tconst size = uniformsGroup.__size;\n\t\tconst usage = uniformsGroup.usage;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\t\tgl.bufferData( gl.UNIFORM_BUFFER, size, usage );\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\t\tgl.bindBufferBase( gl.UNIFORM_BUFFER, bindingPointIndex, buffer );\n\n\t\treturn buffer;\n\n\t}\n\n\tfunction allocateBindingPointIndex() {\n\n\t\tfor ( let i = 0; i < maxBindingPoints; i ++ ) {\n\n\t\t\tif ( allocatedBindingPoints.indexOf( i ) === - 1 ) {\n\n\t\t\t\tallocatedBindingPoints.push( i );\n\t\t\t\treturn i;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconsole.error( 'THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached.' );\n\n\t\treturn 0;\n\n\t}\n\n\tfunction updateBufferData( uniformsGroup ) {\n\n\t\tconst buffer = buffers[ uniformsGroup.id ];\n\t\tconst uniforms = uniformsGroup.uniforms;\n\t\tconst cache = uniformsGroup.__cache;\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, buffer );\n\n\t\tfor ( let i = 0, il = uniforms.length; i < il; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\t// partly update the buffer if necessary\n\n\t\t\tif ( hasUniformChanged( uniform, i, cache ) === true ) {\n\n\t\t\t\tconst offset = uniform.__offset;\n\n\t\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\t\tlet arrayOffset = 0;\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value;\n\t\t\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset + arrayOffset, uniform.__data );\n\n\t\t\t\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t\t\t\t// manually converting 3x3 to 3x4\n\n\t\t\t\t\t\tuniform.__data[ 0 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 1 ] = value.elements[ 1 ];\n\t\t\t\t\t\tuniform.__data[ 2 ] = value.elements[ 2 ];\n\t\t\t\t\t\tuniform.__data[ 3 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 4 ] = value.elements[ 3 ];\n\t\t\t\t\t\tuniform.__data[ 5 ] = value.elements[ 4 ];\n\t\t\t\t\t\tuniform.__data[ 6 ] = value.elements[ 5 ];\n\t\t\t\t\t\tuniform.__data[ 7 ] = value.elements[ 0 ];\n\t\t\t\t\t\tuniform.__data[ 8 ] = value.elements[ 6 ];\n\t\t\t\t\t\tuniform.__data[ 9 ] = value.elements[ 7 ];\n\t\t\t\t\t\tuniform.__data[ 10 ] = value.elements[ 8 ];\n\t\t\t\t\t\tuniform.__data[ 11 ] = value.elements[ 0 ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvalue.toArray( uniform.__data, arrayOffset );\n\n\t\t\t\t\t\tarrayOffset += info.storage / Float32Array.BYTES_PER_ELEMENT;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgl.bufferSubData( gl.UNIFORM_BUFFER, offset, uniform.__data );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgl.bindBuffer( gl.UNIFORM_BUFFER, null );\n\n\t}\n\n\tfunction hasUniformChanged( uniform, index, cache ) {\n\n\t\tconst value = uniform.value;\n\n\t\tif ( cache[ index ] === undefined ) {\n\n\t\t\t// cache entry does not exist so far\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tcache[ index ] = value;\n\n\t\t\t} else {\n\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tconst tempValues = [];\n\n\t\t\t\tfor ( let i = 0; i < values.length; i ++ ) {\n\n\t\t\t\t\ttempValues.push( values[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tcache[ index ] = tempValues;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t} else {\n\n\t\t\t// compare current value with cached entry\n\n\t\t\tif ( typeof value === 'number' ) {\n\n\t\t\t\tif ( cache[ index ] !== value ) {\n\n\t\t\t\t\tcache[ index ] = value;\n\t\t\t\t\treturn true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconst cachedObjects = Array.isArray( cache[ index ] ) ? cache[ index ] : [ cache[ index ] ];\n\t\t\t\tconst values = Array.isArray( value ) ? value : [ value ];\n\n\t\t\t\tfor ( let i = 0; i < cachedObjects.length; i ++ ) {\n\n\t\t\t\t\tconst cachedObject = cachedObjects[ i ];\n\n\t\t\t\t\tif ( cachedObject.equals( values[ i ] ) === false ) {\n\n\t\t\t\t\t\tcachedObject.copy( values[ i ] );\n\t\t\t\t\t\treturn true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction prepareUniformsGroup( uniformsGroup ) {\n\n\t\t// determine total buffer size according to the STD140 layout\n\t\t// Hint: STD140 is the only supported layout in WebGL 2\n\n\t\tconst uniforms = uniformsGroup.uniforms;\n\n\t\tlet offset = 0; // global buffer offset in bytes\n\t\tconst chunkSize = 16; // size of a chunk in bytes\n\t\tlet chunkOffset = 0; // offset within a single chunk in bytes\n\n\t\tfor ( let i = 0, l = uniforms.length; i < l; i ++ ) {\n\n\t\t\tconst uniform = uniforms[ i ];\n\n\t\t\tconst infos = {\n\t\t\t\tboundary: 0, // bytes\n\t\t\t\tstorage: 0 // bytes\n\t\t\t};\n\n\t\t\tconst values = Array.isArray( uniform.value ) ? uniform.value : [ uniform.value ];\n\n\t\t\tfor ( let j = 0, jl = values.length; j < jl; j ++ ) {\n\n\t\t\t\tconst value = values[ j ];\n\n\t\t\t\tconst info = getUniformSize( value );\n\n\t\t\t\tinfos.boundary += info.boundary;\n\t\t\t\tinfos.storage += info.storage;\n\n\t\t\t}\n\n\t\t\t// the following two properties will be used for partial buffer updates\n\n\t\t\tuniform.__data = new Float32Array( infos.storage / Float32Array.BYTES_PER_ELEMENT );\n\t\t\tuniform.__offset = offset;\n\n\t\t\t//\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\tchunkOffset = offset % chunkSize;\n\n\t\t\t\tconst remainingSizeInChunk = chunkSize - chunkOffset;\n\n\t\t\t\t// check for chunk overflow\n\n\t\t\t\tif ( chunkOffset !== 0 && ( remainingSizeInChunk - infos.boundary ) < 0 ) {\n\n\t\t\t\t\t// add padding and adjust offset\n\n\t\t\t\t\toffset += ( chunkSize - chunkOffset );\n\t\t\t\t\tuniform.__offset = offset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset += infos.storage;\n\n\t\t}\n\n\t\t// ensure correct final padding\n\n\t\tchunkOffset = offset % chunkSize;\n\n\t\tif ( chunkOffset > 0 ) offset += ( chunkSize - chunkOffset );\n\n\t\t//\n\n\t\tuniformsGroup.__size = offset;\n\t\tuniformsGroup.__cache = {};\n\n\t\treturn this;\n\n\t}\n\n\tfunction getUniformSize( value ) {\n\n\t\tconst info = {\n\t\t\tboundary: 0, // bytes\n\t\t\tstorage: 0 // bytes\n\t\t};\n\n\t\t// determine sizes according to STD140\n\n\t\tif ( typeof value === 'number' ) {\n\n\t\t\t// float/int\n\n\t\t\tinfo.boundary = 4;\n\t\t\tinfo.storage = 4;\n\n\t\t} else if ( value.isVector2 ) {\n\n\t\t\t// vec2\n\n\t\t\tinfo.boundary = 8;\n\t\t\tinfo.storage = 8;\n\n\t\t} else if ( value.isVector3 || value.isColor ) {\n\n\t\t\t// vec3\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 12; // evil: vec3 must start on a 16-byte boundary but it only consumes 12 bytes\n\n\t\t} else if ( value.isVector4 ) {\n\n\t\t\t// vec4\n\n\t\t\tinfo.boundary = 16;\n\t\t\tinfo.storage = 16;\n\n\t\t} else if ( value.isMatrix3 ) {\n\n\t\t\t// mat3 (in STD140 a 3x3 matrix is represented as 3x4)\n\n\t\t\tinfo.boundary = 48;\n\t\t\tinfo.storage = 48;\n\n\t\t} else if ( value.isMatrix4 ) {\n\n\t\t\t// mat4\n\n\t\t\tinfo.boundary = 64;\n\t\t\tinfo.storage = 64;\n\n\t\t} else if ( value.isTexture ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group.' );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Unsupported uniform value type.', value );\n\n\t\t}\n\n\t\treturn info;\n\n\t}\n\n\tfunction onUniformsGroupsDispose( event ) {\n\n\t\tconst uniformsGroup = event.target;\n\n\t\tuniformsGroup.removeEventListener( 'dispose', onUniformsGroupsDispose );\n\n\t\tconst index = allocatedBindingPoints.indexOf( uniformsGroup.__bindingPointIndex );\n\t\tallocatedBindingPoints.splice( index, 1 );\n\n\t\tgl.deleteBuffer( buffers[ uniformsGroup.id ] );\n\n\t\tdelete buffers[ uniformsGroup.id ];\n\t\tdelete updateList[ uniformsGroup.id ];\n\n\t}\n\n\tfunction dispose() {\n\n\t\tfor ( const id in buffers ) {\n\n\t\t\tgl.deleteBuffer( buffers[ id ] );\n\n\t\t}\n\n\t\tallocatedBindingPoints = [];\n\t\tbuffers = {};\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tbind: bind,\n\t\tupdate: update,\n\n\t\tdispose: dispose\n\n\t};\n\n}\n\nclass WebGLRenderer {\n\n\tconstructor( parameters = {} ) {\n\n\t\tconst {\n\t\t\tcanvas = createCanvasElement(),\n\t\t\tcontext = null,\n\t\t\tdepth = true,\n\t\t\tstencil = true,\n\t\t\talpha = false,\n\t\t\tantialias = false,\n\t\t\tpremultipliedAlpha = true,\n\t\t\tpreserveDrawingBuffer = false,\n\t\t\tpowerPreference = 'default',\n\t\t\tfailIfMajorPerformanceCaveat = false,\n\t\t} = parameters;\n\n\t\tthis.isWebGLRenderer = true;\n\n\t\tlet _alpha;\n\n\t\tif ( context !== null ) {\n\n\t\t\t_alpha = context.getContextAttributes().alpha;\n\n\t\t} else {\n\n\t\t\t_alpha = alpha;\n\n\t\t}\n\n\t\tconst uintClearColor = new Uint32Array( 4 );\n\t\tconst intClearColor = new Int32Array( 4 );\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null;\n\n\t\t// render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = [];\n\n\t\t// public properties\n\n\t\tthis.domElement = canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true,\n\t\t\t/**\n\t\t\t * Callback for custom error reporting.\n\t\t\t * @type {?Function}\n\t\t\t */\n\t\t\tonShaderError: null\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis._outputColorSpace = SRGBColorSpace;\n\n\t\t// physical lights\n\n\t\tthis._useLegacyLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\n\t\t// internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false;\n\n\t\t// internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\t\tlet _currentMaterialId = - 1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\t\tconst _currentScissor = new Vector4();\n\t\tlet _currentScissorTest = null;\n\n\t\tconst _currentClearColor = new Color( 0x000000 );\n\t\tlet _currentClearAlpha = 0;\n\n\t\t//\n\n\t\tlet _width = canvas.width;\n\t\tlet _height = canvas.height;\n\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4( 0, 0, _width, _height );\n\t\tconst _scissor = new Vector4( 0, 0, _width, _height );\n\t\tlet _scissorTest = false;\n\n\t\t// frustum\n\n\t\tconst _frustum = new Frustum();\n\n\t\t// clipping\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false;\n\n\t\t// transmission\n\n\t\tlet _transmissionRenderTarget = null;\n\n\t\t// camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector2 = new Vector2();\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = { background: null, fog: null, environment: null, overrideMaterial: null, isScene: true };\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tlet _gl = context;\n\n\t\tfunction getContext( contextNames, contextAttributes ) {\n\n\t\t\tfor ( let i = 0; i < contextNames.length; i ++ ) {\n\n\t\t\t\tconst contextName = contextNames[ i ];\n\t\t\t\tconst context = canvas.getContext( contextName, contextAttributes );\n\t\t\t\tif ( context !== null ) return context;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\ttry {\n\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: true,\n\t\t\t\tdepth,\n\t\t\t\tstencil,\n\t\t\t\tantialias,\n\t\t\t\tpremultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer,\n\t\t\t\tpowerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat,\n\t\t\t};\n\n\t\t\t// OffscreenCanvas does not have setAttribute, see #22811\n\t\t\tif ( 'setAttribute' in canvas ) canvas.setAttribute( 'data-engine', `three.js r${REVISION}` );\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\t\t\tcanvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.addEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tconst contextNames = [ 'webgl2', 'webgl', 'experimental-webgl' ];\n\n\t\t\t\tif ( _this.isWebGL1Renderer === true ) {\n\n\t\t\t\t\tcontextNames.shift();\n\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext( contextNames, contextAttributes );\n\n\t\t\t\tif ( _gl === null ) {\n\n\t\t\t\t\tif ( getContext( contextNames ) ) {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( typeof WebGLRenderingContext !== 'undefined' && _gl instanceof WebGLRenderingContext ) { // @deprecated, r153\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163.' );\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, cubeuvmaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tlet utils, bindingStates, uniformsGroups;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\textensions.init( capabilities );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tcubemaps = new WebGLCubeMaps( _this );\n\t\t\tcubeuvmaps = new WebGLCubeUVMaps( _this );\n\t\t\tattributes = new WebGLAttributes( _gl, capabilities );\n\t\t\tbindingStates = new WebGLBindingStates( _gl, extensions, attributes, capabilities );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info, bindingStates );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl, capabilities, textures );\n\t\t\tclipping = new WebGLClipping( properties );\n\t\t\tprogramCache = new WebGLPrograms( _this, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping );\n\t\t\tmaterials = new WebGLMaterials( _this, properties );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates( extensions, capabilities );\n\t\t\tbackground = new WebGLBackground( _this, cubemaps, cubeuvmaps, state, objects, _alpha, premultipliedAlpha );\n\t\t\tshadowMap = new WebGLShadowMap( _this, objects, capabilities );\n\t\t\tuniformsGroups = new WebGLUniformsGroups( _gl, info, capabilities, state );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// xr\n\n\t\tconst xr = new WebXRManager( _this, _gl );\n\n\t\tthis.xr = xr;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.loseContext();\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tconst extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) extension.restoreContext();\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) return;\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle = true ) {\n\n\t\t\tif ( xr.isPresenting ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\tcanvas.width = Math.floor( width * _pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle === true ) {\n\n\t\t\t\tcanvas.style.width = width + 'px';\n\t\t\t\tcanvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\tcanvas.width = Math.floor( width * pixelRatio );\n\t\t\tcanvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\tthis.setOpaqueSort = function ( method ) {\n\n\t\t\t_opaqueSort = method;\n\n\t\t};\n\n\t\tthis.setTransparentSort = function ( method ) {\n\n\t\t\t_transparentSort = method;\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function ( target ) {\n\n\t\t\treturn target.copy( background.getClearColor() );\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color = true, depth = true, stencil = true ) {\n\n\t\t\tlet bits = 0;\n\n\t\t\tif ( color ) {\n\n\t\t\t\t// check if we're trying to clear an integer target\n\t\t\t\tlet isIntegerFormat = false;\n\t\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t\tconst targetFormat = _currentRenderTarget.texture.format;\n\t\t\t\t\tisIntegerFormat = targetFormat === RGBAIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RGIntegerFormat ||\n\t\t\t\t\t\ttargetFormat === RedIntegerFormat;\n\n\t\t\t\t}\n\n\t\t\t\t// use the appropriate clear functions to clear the target if it's a signed\n\t\t\t\t// or unsigned integer target\n\t\t\t\tif ( isIntegerFormat ) {\n\n\t\t\t\t\tconst targetType = _currentRenderTarget.texture.type;\n\t\t\t\t\tconst isUnsignedType = targetType === UnsignedByteType ||\n\t\t\t\t\t\ttargetType === UnsignedIntType ||\n\t\t\t\t\t\ttargetType === UnsignedShortType ||\n\t\t\t\t\t\ttargetType === UnsignedInt248Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort4444Type ||\n\t\t\t\t\t\ttargetType === UnsignedShort5551Type;\n\n\t\t\t\t\tconst clearColor = background.getClearColor();\n\t\t\t\t\tconst a = background.getClearAlpha();\n\t\t\t\t\tconst r = clearColor.r;\n\t\t\t\t\tconst g = clearColor.g;\n\t\t\t\t\tconst b = clearColor.b;\n\n\t\t\t\t\tif ( isUnsignedType ) {\n\n\t\t\t\t\t\tuintClearColor[ 0 ] = r;\n\t\t\t\t\t\tuintClearColor[ 1 ] = g;\n\t\t\t\t\t\tuintClearColor[ 2 ] = b;\n\t\t\t\t\t\tuintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferuiv( _gl.COLOR, 0, uintClearColor );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tintClearColor[ 0 ] = r;\n\t\t\t\t\t\tintClearColor[ 1 ] = g;\n\t\t\t\t\t\tintClearColor[ 2 ] = b;\n\t\t\t\t\t\tintClearColor[ 3 ] = a;\n\t\t\t\t\t\t_gl.clearBufferiv( _gl.COLOR, 0, intClearColor );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbits |= _gl.COLOR_BUFFER_BIT;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif ( stencil ) {\n\n\t\t\t\tbits |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\tthis.state.buffers.stencil.setMask( 0xffffffff );\n\n\t\t\t}\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\tcanvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\t\t\tcanvas.removeEventListener( 'webglcontextcreationerror', onContextCreationError, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tcubeuvmaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\tuniformsGroups.dispose();\n\t\t\tprogramCache.dispose();\n\n\t\t\txr.dispose();\n\n\t\t\txr.removeEventListener( 'sessionstart', onXRSessionStart );\n\t\t\txr.removeEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t\tif ( _transmissionRenderTarget ) {\n\n\t\t\t\t_transmissionRenderTarget.dispose();\n\t\t\t\t_transmissionRenderTarget = null;\n\n\t\t\t}\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\n\t\t\tinitGLContext();\n\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\n\t\t}\n\n\t\tfunction onContextCreationError( event ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: A WebGL context could not be created. Reason: ', event.statusMessage );\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tconst material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReferences( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReferences( material ) {\n\n\t\t\tconst programs = properties.get( material ).programs;\n\n\t\t\tif ( programs !== undefined ) {\n\n\t\t\t\tprograms.forEach( function ( program ) {\n\n\t\t\t\t\tprogramCache.releaseProgram( program );\n\n\t\t\t\t} );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tprogramCache.releaseShaderCache( material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tthis.renderBufferDirect = function ( camera, scene, geometry, material, object, group ) {\n\n\t\t\tif ( scene === null ) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tconst program = setProgram( camera, scene, geometry, material, object );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\t//\n\n\t\t\tlet index = geometry.index;\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\n\t\t\t\tif ( index === undefined ) return;\n\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst drawRange = geometry.drawRange;\n\t\t\tconst position = geometry.attributes.position;\n\n\t\t\tlet drawStart = drawRange.start * rangeFactor;\n\t\t\tlet drawEnd = ( drawRange.start + drawRange.count ) * rangeFactor;\n\n\t\t\tif ( group !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, group.start * rangeFactor );\n\t\t\t\tdrawEnd = Math.min( drawEnd, ( group.start + group.count ) * rangeFactor );\n\n\t\t\t}\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, index.count );\n\n\t\t\t} else if ( position !== undefined && position !== null ) {\n\n\t\t\t\tdrawStart = Math.max( drawStart, 0 );\n\t\t\t\tdrawEnd = Math.min( drawEnd, position.count );\n\n\t\t\t}\n\n\t\t\tconst drawCount = drawEnd - drawStart;\n\n\t\t\tif ( drawCount < 0 || drawCount === Infinity ) return;\n\n\t\t\t//\n\n\t\t\tbindingStates.setup( object, material, program, geometry, index );\n\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tlet lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\trenderer.renderMultiDraw( object._multiDrawStarts, object._multiDrawCounts, object._multiDrawCount );\n\n\t\t\t} else if ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\tconst maxInstanceCount = geometry._maxInstanceCount !== undefined ? geometry._maxInstanceCount : Infinity;\n\t\t\t\tconst instanceCount = Math.min( geometry.instanceCount, maxInstanceCount );\n\n\t\t\t\trenderer.renderInstances( drawStart, drawCount, instanceCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Compile\n\n\t\tfunction prepareMaterial( material, scene, object ) {\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\tgetProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.compile = function ( scene, camera, targetScene = null ) {\n\n\t\t\tif ( targetScene === null ) targetScene = scene;\n\n\t\t\tcurrentRenderState = renderStates.get( targetScene );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t// gather lights from both the target scene and the new object that will be added to the scene.\n\n\t\t\ttargetScene.traverseVisible( function ( object ) {\n\n\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tif ( scene !== targetScene ) {\n\n\t\t\t\tscene.traverseVisible( function ( object ) {\n\n\t\t\t\t\tif ( object.isLight && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\t// Only initialize materials in the new scene, not the targetScene.\n\n\t\t\tconst materials = new Set();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif ( material ) {\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( let i = 0; i < material.length; i ++ ) {\n\n\t\t\t\t\t\t\tconst material2 = material[ i ];\n\n\t\t\t\t\t\t\tprepareMaterial( material2, targetScene, object );\n\t\t\t\t\t\t\tmaterials.add( material2 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tprepareMaterial( material, targetScene, object );\n\t\t\t\t\t\tmaterials.add( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\trenderStateStack.pop();\n\t\t\tcurrentRenderState = null;\n\n\t\t\treturn materials;\n\n\t\t};\n\n\t\t// compileAsync\n\n\t\tthis.compileAsync = function ( scene, camera, targetScene = null ) {\n\n\t\t\tconst materials = this.compile( scene, camera, targetScene );\n\n\t\t\t// Wait for all the materials in the new object to indicate that they're\n\t\t\t// ready to be used before resolving the promise.\n\n\t\t\treturn new Promise( ( resolve ) => {\n\n\t\t\t\tfunction checkMaterialsReady() {\n\n\t\t\t\t\tmaterials.forEach( function ( material ) {\n\n\t\t\t\t\t\tconst materialProperties = properties.get( material );\n\t\t\t\t\t\tconst program = materialProperties.currentProgram;\n\n\t\t\t\t\t\tif ( program.isReady() ) {\n\n\t\t\t\t\t\t\t// remove any programs that report they're ready to use from the list\n\t\t\t\t\t\t\tmaterials.delete( material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\t// once the list of compiling materials is empty, call the callback\n\n\t\t\t\t\tif ( materials.size === 0 ) {\n\n\t\t\t\t\t\tresolve( scene );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// if some materials are still not ready, wait a bit and check again\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extensions.get( 'KHR_parallel_shader_compile' ) !== null ) {\n\n\t\t\t\t\t// If we can check the compilation status of the materials without\n\t\t\t\t\t// blocking then do so right away.\n\n\t\t\t\t\tcheckMaterialsReady();\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Otherwise start by waiting a bit to give the materials we just\n\t\t\t\t\t// initialized a chance to finish.\n\n\t\t\t\t\tsetTimeout( checkMaterialsReady, 10 );\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( onAnimationFrameCallback ) onAnimationFrameCallback( time );\n\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\n\t\t\tanimation.stop();\n\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\n\t\t\tanimation.start();\n\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof self !== 'undefined' ) animation.setContext( self );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop( callback );\n\n\t\t\t( callback === null ) ? animation.stop() : animation.start();\n\n\t\t};\n\n\t\txr.addEventListener( 'sessionstart', onXRSessionStart );\n\t\txr.addEventListener( 'sessionend', onXRSessionEnd );\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tif ( camera !== undefined && camera.isCamera !== true ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost === true ) return;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.matrixWorldAutoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null && camera.matrixWorldAutoUpdate === true ) camera.updateMatrixWorld();\n\n\t\t\tif ( xr.enabled === true && xr.isPresenting === true ) {\n\n\t\t\t\tif ( xr.cameraAutoUpdate === true ) xr.updateCamera( camera );\n\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\n\t\t\t}\n\n\t\t\t//\n\t\t\tif ( scene.isScene === true ) scene.onBeforeRender( _this, scene, camera, _currentRenderTarget );\n\n\t\t\tcurrentRenderState = renderStates.get( scene, renderStateStack.length );\n\t\t\tcurrentRenderState.init();\n\n\t\t\trenderStateStack.push( currentRenderState );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init( this.clippingPlanes, _localClippingEnabled );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, renderListStack.length );\n\t\t\tcurrentRenderList.init();\n\n\t\t\trenderListStack.push( currentRenderList );\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort( _opaqueSort, _transparentSort );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tthis.info.render.frame ++;\n\n\t\t\tif ( _clippingEnabled === true ) clipping.beginShadows();\n\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.endShadows();\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset === true ) this.info.reset();\n\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene );\n\n\t\t\t// render scene\n\n\t\t\tcurrentRenderState.setupLights( _this._useLegacyLights );\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\tfor ( let i = 0, l = cameras.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst camera2 = cameras[ i ];\n\n\t\t\t\t\trenderScene( currentRenderList, scene, camera2, camera2.viewport );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderScene( currentRenderList, scene, camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( scene.isScene === true ) scene.onAfterRender( _this, scene, camera );\n\n\t\t\t// _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\trenderStateStack.pop();\n\n\t\t\tif ( renderStateStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderState = renderStateStack[ renderStateStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderState = null;\n\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif ( renderListStack.length > 0 ) {\n\n\t\t\t\tcurrentRenderList = renderListStack[ renderListStack.length - 1 ];\n\n\t\t\t} else {\n\n\t\t\t\tcurrentRenderList = null;\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) return;\n\n\t\t\tconst visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) object.update( camera );\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tconst geometry = objects.update( object );\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\tif ( object.boundingSphere !== undefined ) {\n\n\t\t\t\t\t\t\t\tif ( object.boundingSphere === null ) object.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( object.boundingSphere.center );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\t\t\t\t\t\t\t\t_vector3.copy( geometry.boundingSphere.center );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_vector3\n\t\t\t\t\t\t\t\t.applyMatrix4( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tconst group = groups[ i ];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderScene( currentRenderList, scene, camera, viewport ) {\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\n\t\t\tcurrentRenderState.setupLightsView( camera );\n\n\t\t\tif ( _clippingEnabled === true ) clipping.setGlobalState( _this.clippingPlanes, camera );\n\n\t\t\tif ( transmissiveObjects.length > 0 ) renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera );\n\n\t\t\tif ( viewport ) state.viewport( _currentViewport.copy( viewport ) );\n\n\t\t\tif ( opaqueObjects.length > 0 ) renderObjects( opaqueObjects, scene, camera );\n\t\t\tif ( transmissiveObjects.length > 0 ) renderObjects( transmissiveObjects, scene, camera );\n\t\t\tif ( transparentObjects.length > 0 ) renderObjects( transparentObjects, scene, camera );\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t}\n\n\t\tfunction renderTransmissionPass( opaqueObjects, transmissiveObjects, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tif ( overrideMaterial !== null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\t\tif ( _transmissionRenderTarget === null ) {\n\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget( 1, 1, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\ttype: extensions.has( 'EXT_color_buffer_half_float' ) ? HalfFloatType : UnsignedByteType,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tsamples: ( isWebGL2 ) ? 4 : 0\n\t\t\t\t} );\n\n\t\t\t\t// debug\n\n\t\t\t\t/*\n\t\t\t\tconst geometry = new PlaneGeometry();\n\t\t\t\tconst material = new MeshBasicMaterial( { map: _transmissionRenderTarget.texture } );\n\n\t\t\t\tconst mesh = new Mesh( geometry, material );\n\t\t\t\tscene.add( mesh );\n\t\t\t\t*/\n\n\t\t\t}\n\n\t\t\t_this.getDrawingBufferSize( _vector2 );\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t_transmissionRenderTarget.setSize( _vector2.x, _vector2.y );\n\n\t\t\t} else {\n\n\t\t\t\t_transmissionRenderTarget.setSize( floorPowerOfTwo( _vector2.x ), floorPowerOfTwo( _vector2.y ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\t\t\t_this.setRenderTarget( _transmissionRenderTarget );\n\n\t\t\t_this.getClearColor( _currentClearColor );\n\t\t\t_currentClearAlpha = _this.getClearAlpha();\n\t\t\tif ( _currentClearAlpha < 1 ) _this.setClearColor( 0xffffff, 0.5 );\n\n\t\t\t_this.clear();\n\n\t\t\t// Turn off the features which can affect the frag color for opaque objects pass.\n\t\t\t// Otherwise they are applied twice in opaque objects pass and transmission objects pass.\n\t\t\tconst currentToneMapping = _this.toneMapping;\n\t\t\t_this.toneMapping = NoToneMapping;\n\n\t\t\trenderObjects( opaqueObjects, scene, camera );\n\n\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\tlet renderTargetNeedsUpdate = false;\n\n\t\t\tfor ( let i = 0, l = transmissiveObjects.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = transmissiveObjects[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = renderItem.material;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( material.side === DoubleSide && object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\tconst currentSide = material.side;\n\n\t\t\t\t\tmaterial.side = BackSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\tmaterial.side = currentSide;\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\trenderTargetNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( renderTargetNeedsUpdate === true ) {\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _transmissionRenderTarget );\n\t\t\t\ttextures.updateRenderTargetMipmap( _transmissionRenderTarget );\n\n\t\t\t}\n\n\t\t\t_this.setRenderTarget( currentRenderTarget );\n\n\t\t\t_this.setClearColor( _currentClearColor, _currentClearAlpha );\n\n\t\t\t_this.toneMapping = currentToneMapping;\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera ) {\n\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor ( let i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tconst renderItem = renderList[ i ];\n\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif ( object.layers.test( camera.layers ) ) {\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tmaterial.onBeforeRender( _this, scene, camera, geometry, object, group );\n\n\t\t\tif ( material.transparent === true && material.side === DoubleSide && material.forceSinglePass === false ) {\n\n\t\t\t\tmaterial.side = BackSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = FrontSide;\n\t\t\t\tmaterial.needsUpdate = true;\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t\tmaterial.side = DoubleSide;\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t\t}\n\n\t\tfunction getProgram( material, scene, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tconst lightsStateVersion = lights.state.version;\n\n\t\t\tconst parameters = programCache.getParameters( material, lights.state, shadowsArray, scene, object );\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey( parameters );\n\n\t\t\tlet programs = materialProperties.programs;\n\n\t\t\t// always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || materialProperties.environment );\n\n\t\t\tif ( programs === undefined ) {\n\n\t\t\t\t// new material\n\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\n\t\t\t}\n\n\t\t\tlet program = programs.get( programCacheKey );\n\n\t\t\tif ( program !== undefined ) {\n\n\t\t\t\t// early out if program and light state is identical\n\n\t\t\t\tif ( materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion ) {\n\n\t\t\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t\t\treturn program;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tparameters.uniforms = programCache.getUniforms( material );\n\n\t\t\t\tmaterial.onBuild( object, parameters, _this );\n\n\t\t\t\tmaterial.onBeforeCompile( parameters, _this );\n\n\t\t\t\tprogram = programCache.acquireProgram( parameters, programCacheKey );\n\t\t\t\tprograms.set( programCacheKey, program );\n\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif ( ( ! material.isShaderMaterial && ! material.isRawShaderMaterial ) || material.clipping === true ) {\n\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties( material, parameters );\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotLightMatrix.value = lights.state.spotLightMatrix;\n\t\t\t\tuniforms.spotLightMap.value = lights.state.spotLightMap;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = null;\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\tfunction getUniformList( materialProperties ) {\n\n\t\t\tif ( materialProperties.uniformsList === null ) {\n\n\t\t\t\tconst progUniforms = materialProperties.currentProgram.getUniforms();\n\t\t\t\tmaterialProperties.uniformsList = WebGLUniforms.seqWithValue( progUniforms.seq, materialProperties.uniforms );\n\n\t\t\t}\n\n\t\t\treturn materialProperties.uniformsList;\n\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties( material, parameters ) {\n\n\t\t\tconst materialProperties = properties.get( material );\n\n\t\t\tmaterialProperties.outputColorSpace = parameters.outputColorSpace;\n\t\t\tmaterialProperties.batching = parameters.batching;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.instancingColor = parameters.instancingColor;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.morphTargets = parameters.morphTargets;\n\t\t\tmaterialProperties.morphNormals = parameters.morphNormals;\n\t\t\tmaterialProperties.morphColors = parameters.morphColors;\n\t\t\tmaterialProperties.morphTargetsCount = parameters.morphTargetsCount;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t\tmaterialProperties.vertexTangents = parameters.vertexTangents;\n\t\t\tmaterialProperties.toneMapping = parameters.toneMapping;\n\n\t\t}\n\n\t\tfunction setProgram( camera, scene, geometry, material, object ) {\n\n\t\t\tif ( scene.isScene !== true ) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst colorSpace = ( _currentRenderTarget === null ) ? _this.outputColorSpace : ( _currentRenderTarget.isXRRenderTarget === true ? _currentRenderTarget.texture.colorSpace : LinearSRGBColorSpace );\n\t\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\t\tconst vertexAlphas = material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4;\n\t\t\tconst vertexTangents = !! geometry.attributes.tangent && ( !! material.normalMap || material.anisotropy > 0 );\n\t\t\tconst morphTargets = !! geometry.morphAttributes.position;\n\t\t\tconst morphNormals = !! geometry.morphAttributes.normal;\n\t\t\tconst morphColors = !! geometry.morphAttributes.color;\n\n\t\t\tlet toneMapping = NoToneMapping;\n\n\t\t\tif ( material.toneMapped ) {\n\n\t\t\t\tif ( _currentRenderTarget === null || _currentRenderTarget.isXRRenderTarget === true ) {\n\n\t\t\t\t\ttoneMapping = _this.toneMapping;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\t\tconst materialProperties = properties.get( material );\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled === true ) {\n\n\t\t\t\tif ( _localClippingEnabled === true || camera !== _currentCamera ) {\n\n\t\t\t\t\tconst useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\tclipping.setState( material, camera, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif ( material.version === materialProperties.__version ) {\n\n\t\t\t\tif ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.outputColorSpace !== colorSpace ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isBatchedMesh && materialProperties.batching === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isBatchedMesh && materialProperties.batching === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancing === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isInstancedMesh && materialProperties.instancing === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isSkinnedMesh && materialProperties.skinning === false ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( ! object.isSkinnedMesh && materialProperties.skinning === true ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === true && object.instanceColor === null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( object.isInstancedMesh && materialProperties.instancingColor === false && object.instanceColor !== null ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.envMap !== envMap ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( material.fog === true && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== clipping.numIntersection ) ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexAlphas !== vertexAlphas ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.vertexTangents !== vertexTangents ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphTargets !== morphTargets ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphNormals !== morphNormals ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.morphColors !== morphColors ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( materialProperties.toneMapping !== toneMapping ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t} else if ( capabilities.isWebGL2 === true && materialProperties.morphTargetsCount !== morphTargetsCount ) {\n\n\t\t\t\t\tneedsProgramChange = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif ( needsProgramChange === true ) {\n\n\t\t\t\tprogram = getProgram( material, scene, object );\n\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\t// common camera uniforms\n\n\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl, _vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// consider moving isOrthographic to UniformLib and WebGLMaterials, see https://github.com/mrdoob/three.js/pull/26467#issuecomment-1645185067\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshToonMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning and morph target uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone and morph texture must go before other textures\n\t\t\t// otherwise textures used for skinning and morphing can take over texture units reserved for other material textures\n\n\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === null ) skeleton.computeBoneTexture();\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isBatchedMesh ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'batchingTexture' );\n\t\t\t\tp_uniforms.setValue( _gl, 'batchingTexture', object._matricesTexture, textures );\n\n\t\t\t}\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tif ( morphAttributes.position !== undefined || morphAttributes.normal !== undefined || ( morphAttributes.color !== undefined && capabilities.isWebGL2 === true ) ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, program );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\t// https://github.com/mrdoob/three.js/pull/24467#issuecomment-1209031512\n\n\t\t\tif ( material.isMeshGouraudMaterial && material.envMap !== null ) {\n\n\t\t\t\tm_uniforms.envMap.value = envMap;\n\n\t\t\t\tm_uniforms.flipEnvMap.value = ( envMap.isCubeTexture && envMap.isRenderTargetTexture === false ) ? - 1 : 1;\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog === true ) {\n\n\t\t\t\t\tmaterials.refreshFogUniforms( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms( m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget );\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, getUniformList( materialProperties ), m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\t// UBOs\n\n\t\t\tif ( material.isShaderMaterial || material.isRawShaderMaterial ) {\n\n\t\t\t\tconst groups = material.uniformsGroups;\n\n\t\t\t\tfor ( let i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\t\t\tuniformsGroups.update( group, program );\n\t\t\t\t\t\tuniformsGroups.bind( group, program );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTargetTextures = function ( renderTarget, colorTexture, depthTexture ) {\n\n\t\t\tproperties.get( renderTarget.texture ).__webglTexture = colorTexture;\n\t\t\tproperties.get( renderTarget.depthTexture ).__webglTexture = depthTexture;\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__hasExternalTextures = true;\n\n\t\t\tif ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\trenderTargetProperties.__autoAllocateDepthBuffer = depthTexture === undefined;\n\n\t\t\t\tif ( ! renderTargetProperties.__autoAllocateDepthBuffer ) {\n\n\t\t\t\t\t// The multisample_render_to_texture extension doesn't work properly if there\n\t\t\t\t\t// are midframe flushes and an external depth buffer. Disable use of the extension.\n\t\t\t\t\tif ( extensions.has( 'WEBGL_multisampled_render_to_texture' ) === true ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided' );\n\t\t\t\t\t\trenderTargetProperties.__useRenderToTexture = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.setRenderTargetFramebuffer = function ( renderTarget, defaultFramebuffer ) {\n\n\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\t\t\trenderTargetProperties.__webglFramebuffer = defaultFramebuffer;\n\t\t\trenderTargetProperties.__useDefaultFramebuffer = defaultFramebuffer === undefined;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace = 0, activeMipmapLevel = 0 ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tlet useDefaultFramebuffer = true;\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tconst renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\tif ( renderTargetProperties.__useDefaultFramebuffer !== undefined ) {\n\n\t\t\t\t\t// We need to make sure to rebind the framebuffer.\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\t\t\t\t\tuseDefaultFramebuffer = false;\n\n\t\t\t\t} else if ( renderTargetProperties.__webglFramebuffer === undefined ) {\n\n\t\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t\t} else if ( renderTargetProperties.__hasExternalTextures ) {\n\n\t\t\t\t\t// Color and depth texture must be rebound in order for the swapchain to update.\n\t\t\t\t\ttextures.rebindTextures( renderTarget, properties.get( renderTarget.texture ).__webglTexture, properties.get( renderTarget.depthTexture ).__webglTexture );\n\n\t\t\t\t}\n\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif ( texture.isData3DTexture || texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tisRenderTarget3D = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLCubeRenderTarget ) {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer[ activeCubeFace ] ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ][ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( ( capabilities.isWebGL2 && renderTarget.samples > 0 ) && textures.useMultisampledRTT( renderTarget ) === false ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Array.isArray( __webglFramebuffer ) ) {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer[ activeMipmapLevel ];\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\tif ( framebufferBound && capabilities.drawBuffers && useDefaultFramebuffer ) {\n\n\t\t\t\tstate.drawBuffers( renderTarget, framebuffer );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel );\n\n\t\t\t} else if ( isRenderTarget3D ) {\n\n\t\t\t\tconst textureProperties = properties.get( renderTarget.texture );\n\t\t\t\tconst layer = activeCubeFace || 0;\n\t\t\t\t_gl.framebufferTextureLayer( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer );\n\n\t\t\t}\n\n\t\t\t_currentMaterialId = - 1; // reset current material to ensure correct uniform bindings\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\ttry {\n\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = ( textureType === HalfFloatType ) && ( extensions.has( 'EXT_color_buffer_half_float' ) || ( capabilities.isWebGL2 && extensions.has( 'EXT_color_buffer_float' ) ) );\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.has( 'OES_texture_float' ) || extensions.has( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! halfFloatSupportedByExt ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\n\t\t\t\t\tconst framebuffer = ( _currentRenderTarget !== null ) ? properties.get( _currentRenderTarget ).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level = 0 ) {\n\n\t\t\tconst levelScale = Math.pow( 2, - level );\n\t\t\tconst width = Math.floor( texture.image.width * levelScale );\n\t\t\tconst height = Math.floor( texture.image.height * levelScale );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexSubImage2D( _gl.TEXTURE_2D, level, 0, 0, position.x, position.y, width, height );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\t// As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedTexture ) {\n\n\t\t\t\t\t_gl.compressedTexSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[ 0 ].width, srcTexture.mipmaps[ 0 ].height, glFormat, srcTexture.mipmaps[ 0 ].data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage2D( _gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function ( sourceBox, position, srcTexture, dstTexture, level = 0 ) {\n\n\t\t\tif ( _this.isWebGL1Renderer ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst width = sourceBox.max.x - sourceBox.min.x + 1;\n\t\t\tconst height = sourceBox.max.y - sourceBox.min.y + 1;\n\t\t\tconst depth = sourceBox.max.z - sourceBox.min.z + 1;\n\t\t\tconst glFormat = utils.convert( dstTexture.format );\n\t\t\tconst glType = utils.convert( dstTexture.type );\n\t\t\tlet glTarget;\n\n\t\t\tif ( dstTexture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\n\t\t\t} else if ( dstTexture.isDataArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( dstTexture, 0 );\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment );\n\n\t\t\tconst unpackRowLen = _gl.getParameter( _gl.UNPACK_ROW_LENGTH );\n\t\t\tconst unpackImageHeight = _gl.getParameter( _gl.UNPACK_IMAGE_HEIGHT );\n\t\t\tconst unpackSkipPixels = _gl.getParameter( _gl.UNPACK_SKIP_PIXELS );\n\t\t\tconst unpackSkipRows = _gl.getParameter( _gl.UNPACK_SKIP_ROWS );\n\t\t\tconst unpackSkipImages = _gl.getParameter( _gl.UNPACK_SKIP_IMAGES );\n\n\t\t\tconst image = srcTexture.isCompressedTexture ? srcTexture.mipmaps[ 0 ] : srcTexture.image;\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, image.width );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, image.height );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, sourceBox.min.x );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, sourceBox.min.y );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, sourceBox.min.z );\n\n\t\t\tif ( srcTexture.isDataTexture || srcTexture.isData3DTexture ) {\n\n\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image.data );\n\n\t\t\t} else {\n\n\t\t\t\tif ( srcTexture.isCompressedArrayTexture ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture.' );\n\t\t\t\t\t_gl.compressedTexSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, image.data );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.texSubImage3D( glTarget, level, position.x, position.y, position.z, width, height, depth, glFormat, glType, image );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.pixelStorei( _gl.UNPACK_ROW_LENGTH, unpackRowLen );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_PIXELS, unpackSkipPixels );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_ROWS, unpackSkipRows );\n\t\t\t_gl.pixelStorei( _gl.UNPACK_SKIP_IMAGES, unpackSkipImages );\n\n\t\t\t// Generate mipmaps only when copying level 0\n\t\t\tif ( level === 0 && dstTexture.generateMipmaps ) _gl.generateMipmap( glTarget );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\tif ( texture.isCubeTexture ) {\n\n\t\t\t\ttextures.setTextureCube( texture, 0 );\n\n\t\t\t} else if ( texture.isData3DTexture ) {\n\n\t\t\t\ttextures.setTexture3D( texture, 0 );\n\n\t\t\t} else if ( texture.isDataArrayTexture || texture.isCompressedArrayTexture ) {\n\n\t\t\t\ttextures.setTexture2DArray( texture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.resetState = function () {\n\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tget coordinateSystem() {\n\n\t\treturn WebGLCoordinateSystem;\n\n\t}\n\n\tget outputColorSpace() {\n\n\t\treturn this._outputColorSpace;\n\n\t}\n\n\tset outputColorSpace( colorSpace ) {\n\n\t\tthis._outputColorSpace = colorSpace;\n\n\t\tconst gl = this.getContext();\n\t\tgl.drawingBufferColorSpace = colorSpace === DisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\t\tgl.unpackColorSpace = ColorManagement.workingColorSpace === LinearDisplayP3ColorSpace ? 'display-p3' : 'srgb';\n\n\t}\n\n\tget physicallyCorrectLights() { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\treturn ! this.useLegacyLights;\n\n\t}\n\n\tset physicallyCorrectLights( value ) { // @deprecated, r150\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead.' );\n\t\tthis.useLegacyLights = ! value;\n\n\t}\n\n\tget outputEncoding() { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\treturn this.outputColorSpace === SRGBColorSpace ? sRGBEncoding : LinearEncoding;\n\n\t}\n\n\tset outputEncoding( encoding ) { // @deprecated, r152\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead.' );\n\t\tthis.outputColorSpace = encoding === sRGBEncoding ? SRGBColorSpace : LinearSRGBColorSpace;\n\n\t}\n\n\tget useLegacyLights() { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\treturn this._useLegacyLights;\n\n\t}\n\n\tset useLegacyLights( value ) { // @deprecated, r155\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733.' );\n\t\tthis._useLegacyLights = value;\n\n\t}\n\n}\n\nclass WebGL1Renderer extends WebGLRenderer {}\n\nWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\nclass FogExp2 {\n\n\tconstructor( color, density = 0.00025 ) {\n\n\t\tthis.isFogExp2 = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = density;\n\n\t}\n\n\tclone() {\n\n\t\treturn new FogExp2( this.color, this.density );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'FogExp2',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tdensity: this.density\n\t\t};\n\n\t}\n\n}\n\nclass Fog {\n\n\tconstructor( color, near = 1, far = 1000 ) {\n\n\t\tthis.isFog = true;\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Fog( this.color, this.near, this.far );\n\n\t}\n\n\ttoJSON( /* meta */ ) {\n\n\t\treturn {\n\t\t\ttype: 'Fog',\n\t\t\tname: this.name,\n\t\t\tcolor: this.color.getHex(),\n\t\t\tnear: this.near,\n\t\t\tfar: this.far\n\t\t};\n\n\t}\n\n}\n\nclass Scene extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isScene = true;\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.environment = null;\n\t\tthis.fog = null;\n\n\t\tthis.backgroundBlurriness = 0;\n\t\tthis.backgroundIntensity = 1;\n\n\t\tthis.overrideMaterial = null;\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.environment !== null ) this.environment = source.environment.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\n\t\tthis.backgroundBlurriness = source.backgroundBlurriness;\n\t\tthis.backgroundIntensity = source.backgroundIntensity;\n\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\t\tif ( this.backgroundBlurriness > 0 ) data.object.backgroundBlurriness = this.backgroundBlurriness;\n\t\tif ( this.backgroundIntensity !== 1 ) data.object.backgroundIntensity = this.backgroundIntensity;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InterleavedBuffer {\n\n\tconstructor( array, stride ) {\n\n\t\tthis.isInterleavedBuffer = true;\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis._updateRange = { offset: 0, count: - 1 };\n\t\tthis.updateRanges = [];\n\n\t\tthis.version = 0;\n\n\t\tthis.uuid = generateUUID();\n\n\t}\n\n\tonUploadCallback() {}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tget updateRange() {\n\n\t\tconsole.warn( 'THREE.InterleavedBuffer: \"updateRange\" is deprecated and removed in r169. Use \"addUpdateRange()\" instead.' ); // @deprecated, r159\n\t\treturn this._updateRange;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\taddUpdateRange( start, count ) {\n\n\t\tthis.updateRanges.push( { start, count } );\n\n\t}\n\n\tclearUpdateRanges() {\n\n\t\tthis.updateRanges.length = 0;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.usage = source.usage;\n\n\t\treturn this;\n\n\t}\n\n\tcopyAt( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( let i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tset( value, offset = 0 ) {\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = this.array.slice( 0 ).buffer;\n\n\t\t}\n\n\t\tconst array = new this.array.constructor( data.arrayBuffers[ this.array.buffer._uuid ] );\n\n\t\tconst ib = new this.constructor( array, this.stride );\n\t\tib.setUsage( this.usage );\n\n\t\treturn ib;\n\n\t}\n\n\tonUpload( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data.arrayBuffers === undefined ) {\n\n\t\t\tdata.arrayBuffers = {};\n\n\t\t}\n\n\t\t// generate UUID for array buffer if necessary\n\n\t\tif ( this.array.buffer._uuid === undefined ) {\n\n\t\t\tthis.array.buffer._uuid = generateUUID();\n\n\t\t}\n\n\t\tif ( data.arrayBuffers[ this.array.buffer._uuid ] === undefined ) {\n\n\t\t\tdata.arrayBuffers[ this.array.buffer._uuid ] = Array.from( new Uint32Array( this.array.buffer ) );\n\n\t\t}\n\n\t\t//\n\n\t\treturn {\n\t\t\tuuid: this.uuid,\n\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\ttype: this.array.constructor.name,\n\t\t\tstride: this.stride\n\t\t};\n\n\t}\n\n}\n\nconst _vector$6 = /*@__PURE__*/ new Vector3();\n\nclass InterleavedBufferAttribute {\n\n\tconstructor( interleavedBuffer, itemSize, offset, normalized = false ) {\n\n\t\tthis.isInterleavedBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized;\n\n\t}\n\n\tget count() {\n\n\t\treturn this.data.count;\n\n\t}\n\n\tget array() {\n\n\t\treturn this.data.array;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tthis.data.needsUpdate = value;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tfor ( let i = 0, l = this.data.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyMatrix4( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tapplyNormalMatrix( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.applyNormalMatrix( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttransformDirection( m ) {\n\n\t\tfor ( let i = 0, l = this.count; i < l; i ++ ) {\n\n\t\t\t_vector$6.fromBufferAttribute( this, i );\n\n\t\t\t_vector$6.transformDirection( m );\n\n\t\t\tthis.setXYZ( i, _vector$6.x, _vector$6.y, _vector$6.z );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetX( index, x ) {\n\n\t\tif ( this.normalized ) x = normalize( x, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( index, y ) {\n\n\t\tif ( this.normalized ) y = normalize( y, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( index, z ) {\n\n\t\tif ( this.normalized ) z = normalize( z, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( index, w ) {\n\n\t\tif ( this.normalized ) w = normalize( w, this.array );\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tgetX( index ) {\n\n\t\tlet x = this.data.array[ index * this.data.stride + this.offset ];\n\n\t\tif ( this.normalized ) x = denormalize( x, this.array );\n\n\t\treturn x;\n\n\t}\n\n\tgetY( index ) {\n\n\t\tlet y = this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\tif ( this.normalized ) y = denormalize( y, this.array );\n\n\t\treturn y;\n\n\t}\n\n\tgetZ( index ) {\n\n\t\tlet z = this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\tif ( this.normalized ) z = denormalize( z, this.array );\n\n\t\treturn z;\n\n\t}\n\n\tgetW( index ) {\n\n\t\tlet w = this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\tif ( this.normalized ) w = denormalize( w, this.array );\n\n\t\treturn w;\n\n\t}\n\n\tsetXY( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetXYZW( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tif ( this.normalized ) {\n\n\t\t\tx = normalize( x, this.array );\n\t\t\ty = normalize( y, this.array );\n\t\t\tz = normalize( z, this.array );\n\t\t\tw = normalize( w, this.array );\n\n\t\t}\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn new BufferAttribute( new this.array.constructor( array ), this.itemSize, this.normalized );\n\n\t\t} else {\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.clone( data );\n\n\t\t\t}\n\n\t\t\treturn new InterleavedBufferAttribute( data.interleavedBuffers[ this.data.uuid ], this.itemSize, this.offset, this.normalized );\n\n\t\t}\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tif ( data === undefined ) {\n\n\t\t\tconsole.log( 'THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.' );\n\n\t\t\tconst array = [];\n\n\t\t\tfor ( let i = 0; i < this.count; i ++ ) {\n\n\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\tfor ( let j = 0; j < this.itemSize; j ++ ) {\n\n\t\t\t\t\tarray.push( this.data.array[ index + j ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// de-interleave data and save it as an ordinary buffer attribute for now\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t} else {\n\n\t\t\t// save as true interleaved attribute\n\n\t\t\tif ( data.interleavedBuffers === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers = {};\n\n\t\t\t}\n\n\t\t\tif ( data.interleavedBuffers[ this.data.uuid ] === undefined ) {\n\n\t\t\t\tdata.interleavedBuffers[ this.data.uuid ] = this.data.toJSON( data );\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\tdata: this.data.uuid,\n\t\t\t\toffset: this.offset,\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t}\n\n}\n\nclass SpriteMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteMaterial = true;\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nlet _geometry;\n\nconst _intersectPoint = /*@__PURE__*/ new Vector3();\nconst _worldScale = /*@__PURE__*/ new Vector3();\nconst _mvPosition = /*@__PURE__*/ new Vector3();\n\nconst _alignedPosition = /*@__PURE__*/ new Vector2();\nconst _rotatedPosition = /*@__PURE__*/ new Vector2();\nconst _viewWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _vA = /*@__PURE__*/ new Vector3();\nconst _vB = /*@__PURE__*/ new Vector3();\nconst _vC = /*@__PURE__*/ new Vector3();\n\nconst _uvA = /*@__PURE__*/ new Vector2();\nconst _uvB = /*@__PURE__*/ new Vector2();\nconst _uvC = /*@__PURE__*/ new Vector2();\n\nclass Sprite extends Object3D {\n\n\tconstructor( material = new SpriteMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isSprite = true;\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tconst float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tconst interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = material;\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tif ( raycaster.camera === null ) {\n\n\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t}\n\n\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t}\n\n\t\tconst rotation = this.material.rotation;\n\t\tlet sin, cos;\n\n\t\tif ( rotation !== 0 ) {\n\n\t\t\tcos = Math.cos( rotation );\n\t\t\tsin = Math.sin( rotation );\n\n\t\t}\n\n\t\tconst center = this.center;\n\n\t\ttransformVertex( _vA.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vB.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\ttransformVertex( _vC.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t_uvA.set( 0, 0 );\n\t\t_uvB.set( 1, 0 );\n\t\t_uvC.set( 1, 1 );\n\n\t\t// check first triangle\n\t\tlet intersect = raycaster.ray.intersectTriangle( _vA, _vB, _vC, false, _intersectPoint );\n\n\t\tif ( intersect === null ) {\n\n\t\t\t// check second triangle\n\t\t\ttransformVertex( _vB.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t_uvB.set( 0, 1 );\n\n\t\t\tintersect = raycaster.ray.intersectTriangle( _vA, _vC, _vB, false, _intersectPoint );\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectPoint.clone(),\n\t\t\tuv: Triangle.getInterpolation( _intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() ),\n\t\t\tface: null,\n\t\t\tobject: this\n\n\t\t} );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tif ( source.center !== undefined ) this.center.copy( source.center );\n\n\t\tthis.material = source.material;\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t// compute position in camera space\n\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t// to check if rotation is not zero\n\tif ( sin !== undefined ) {\n\n\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t} else {\n\n\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t}\n\n\n\tvertexPosition.copy( mvPosition );\n\tvertexPosition.x += _rotatedPosition.x;\n\tvertexPosition.y += _rotatedPosition.y;\n\n\t// transform to world space\n\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n}\n\nconst _v1$2 = /*@__PURE__*/ new Vector3();\nconst _v2$1 = /*@__PURE__*/ new Vector3();\n\nclass LOD extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis._currentLevel = 0;\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tisLOD: {\n\t\t\t\tvalue: true,\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tconst levels = source.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance, level.hysteresis );\n\n\t\t}\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\treturn this;\n\n\t}\n\n\taddLevel( object, distance = 0, hysteresis = 0 ) {\n\n\t\tdistance = Math.abs( distance );\n\n\t\tconst levels = this.levels;\n\n\t\tlet l;\n\n\t\tfor ( l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, hysteresis: hysteresis, object: object } );\n\n\t\tthis.add( object );\n\n\t\treturn this;\n\n\t}\n\n\tgetCurrentLevel() {\n\n\t\treturn this._currentLevel;\n\n\t}\n\n\n\n\tgetObjectForDistance( distance ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance < levelDistance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn levels[ i - 1 ].object;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 0 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo( _v1$2 );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t}\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst levels = this.levels;\n\n\t\tif ( levels.length > 1 ) {\n\n\t\t\t_v1$2.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t_v2$1.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tconst distance = _v1$2.distanceTo( _v2$1 ) / camera.zoom;\n\n\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\tlet i, l;\n\n\t\t\tfor ( i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tlet levelDistance = levels[ i ].distance;\n\n\t\t\t\tif ( levels[ i ].object.visible ) {\n\n\t\t\t\t\tlevelDistance -= levelDistance * levels[ i ].hysteresis;\n\n\t\t\t\t}\n\n\t\t\t\tif ( distance >= levelDistance ) {\n\n\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._currentLevel = i - 1;\n\n\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tif ( this.autoUpdate === false ) data.object.autoUpdate = false;\n\n\t\tdata.object.levels = [];\n\n\t\tconst levels = this.levels;\n\n\t\tfor ( let i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tconst level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance,\n\t\t\t\thysteresis: level.hysteresis\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _basePosition = /*@__PURE__*/ new Vector3();\n\nconst _skinIndex = /*@__PURE__*/ new Vector4();\nconst _skinWeight = /*@__PURE__*/ new Vector4();\n\nconst _vector3 = /*@__PURE__*/ new Vector3();\nconst _matrix4 = /*@__PURE__*/ new Matrix4();\nconst _vertex = /*@__PURE__*/ new Vector3();\n\nconst _sphere$4 = /*@__PURE__*/ new Sphere();\nconst _inverseMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _ray$2 = /*@__PURE__*/ new Ray();\n\nclass SkinnedMesh extends Mesh {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkinnedMesh = true;\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = AttachedBindMode;\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingBox.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tconst positionAttribute = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0; i < positionAttribute.count; i ++ ) {\n\n\t\t\tthis.getVertexPosition( i, _vertex );\n\t\t\tthis.boundingSphere.expandByPoint( _vertex );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.bindMode = source.bindMode;\n\t\tthis.bindMatrix.copy( source.bindMatrix );\n\t\tthis.bindMatrixInverse.copy( source.bindMatrixInverse );\n\n\t\tthis.skeleton = source.skeleton;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst material = this.material;\n\t\tconst matrixWorld = this.matrixWorld;\n\n\t\tif ( material === undefined ) return;\n\n\t\t// test with bounding sphere in world space\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$4.copy( this.boundingSphere );\n\t\t_sphere$4.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$4 ) === false ) return;\n\n\t\t// convert ray to local space of skinned mesh\n\n\t\t_inverseMatrix$2.copy( matrixWorld ).invert();\n\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t// test with bounding box in local space\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tif ( _ray$2.intersectsBox( this.boundingBox ) === false ) return;\n\n\t\t}\n\n\t\t// test for intersections with geometry\n\n\t\tthis._computeIntersections( raycaster, intersects, _ray$2 );\n\n\t}\n\n\tgetVertexPosition( index, target ) {\n\n\t\tsuper.getVertexPosition( index, target );\n\n\t\tthis.applyBoneTransform( index, target );\n\n\t\treturn target;\n\n\t}\n\n\tbind( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.copy( bindMatrix ).invert();\n\n\t}\n\n\tpose() {\n\n\t\tthis.skeleton.pose();\n\n\t}\n\n\tnormalizeSkinWeights() {\n\n\t\tconst vector = new Vector4();\n\n\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\tfor ( let i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\tvector.fromBufferAttribute( skinWeight, i );\n\n\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t}\n\n\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t}\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.bindMode === AttachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.matrixWorld ).invert();\n\n\t\t} else if ( this.bindMode === DetachedBindMode ) {\n\n\t\t\tthis.bindMatrixInverse.copy( this.bindMatrix ).invert();\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t}\n\n\tapplyBoneTransform( index, vector ) {\n\n\t\tconst skeleton = this.skeleton;\n\t\tconst geometry = this.geometry;\n\n\t\t_skinIndex.fromBufferAttribute( geometry.attributes.skinIndex, index );\n\t\t_skinWeight.fromBufferAttribute( geometry.attributes.skinWeight, index );\n\n\t\t_basePosition.copy( vector ).applyMatrix4( this.bindMatrix );\n\n\t\tvector.set( 0, 0, 0 );\n\n\t\tfor ( let i = 0; i < 4; i ++ ) {\n\n\t\t\tconst weight = _skinWeight.getComponent( i );\n\n\t\t\tif ( weight !== 0 ) {\n\n\t\t\t\tconst boneIndex = _skinIndex.getComponent( i );\n\n\t\t\t\t_matrix4.multiplyMatrices( skeleton.bones[ boneIndex ].matrixWorld, skeleton.boneInverses[ boneIndex ] );\n\n\t\t\t\tvector.addScaledVector( _vector3.copy( _basePosition ).applyMatrix4( _matrix4 ), weight );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn vector.applyMatrix4( this.bindMatrixInverse );\n\n\t}\n\n\tboneTransform( index, vector ) { // @deprecated, r151\n\n\t\tconsole.warn( 'THREE.SkinnedMesh: .boneTransform() was renamed to .applyBoneTransform() in r151.' );\n\t\treturn this.applyBoneTransform( index, vector );\n\n\t}\n\n\n}\n\nclass Bone extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isBone = true;\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n}\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nconst _offsetMatrix = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix$1 = /*@__PURE__*/ new Matrix4();\n\nclass Skeleton {\n\n\tconstructor( bones = [], boneInverses = [] ) {\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneInverses = boneInverses;\n\t\tthis.boneMatrices = null;\n\n\t\tthis.boneTexture = null;\n\n\t\tthis.init();\n\n\t}\n\n\tinit() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tthis.boneMatrices = new Float32Array( bones.length * 16 );\n\n\t\t// calculate inverse bone matrices if necessary\n\n\t\tif ( boneInverses.length === 0 ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\t// handle special case\n\n\t\t\tif ( bones.length !== boneInverses.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcalculateInverses() {\n\n\t\tthis.boneInverses.length = 0;\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.copy( this.bones[ i ].matrixWorld ).invert();\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t}\n\n\tpose() {\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.copy( this.boneInverses[ i ] ).invert();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.copy( bone.parent.matrixWorld ).invert();\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdate() {\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\t\tconst boneMatrices = this.boneMatrices;\n\t\tconst boneTexture = this.boneTexture;\n\n\t\t// flatten bone matrices to array\n\n\t\tfor ( let i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t// compute the offset between the current and the original transform\n\n\t\t\tconst matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix$1;\n\n\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t}\n\n\t\tif ( boneTexture !== null ) {\n\n\t\t\tboneTexture.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n\tcomputeBoneTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this.bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tboneMatrices.set( this.boneMatrices ); // copy current values\n\n\t\tconst boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\t\tboneTexture.needsUpdate = true;\n\n\t\tthis.boneMatrices = boneMatrices;\n\t\tthis.boneTexture = boneTexture;\n\n\t\treturn this;\n\n\t}\n\n\tgetBoneByName( name ) {\n\n\t\tfor ( let i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tconst bone = this.bones[ i ];\n\n\t\t\tif ( bone.name === name ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t}\n\n\tdispose( ) {\n\n\t\tif ( this.boneTexture !== null ) {\n\n\t\t\tthis.boneTexture.dispose();\n\n\t\t\tthis.boneTexture = null;\n\n\t\t}\n\n\t}\n\n\tfromJSON( json, bones ) {\n\n\t\tthis.uuid = json.uuid;\n\n\t\tfor ( let i = 0, l = json.bones.length; i < l; i ++ ) {\n\n\t\t\tconst uuid = json.bones[ i ];\n\t\t\tlet bone = bones[ uuid ];\n\n\t\t\tif ( bone === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton: No bone found with UUID:', uuid );\n\t\t\t\tbone = new Bone();\n\n\t\t\t}\n\n\t\t\tthis.bones.push( bone );\n\t\t\tthis.boneInverses.push( new Matrix4().fromArray( json.boneInverses[ i ] ) );\n\n\t\t}\n\n\t\tthis.init();\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Skeleton',\n\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t},\n\t\t\tbones: [],\n\t\t\tboneInverses: []\n\t\t};\n\n\t\tdata.uuid = this.uuid;\n\n\t\tconst bones = this.bones;\n\t\tconst boneInverses = this.boneInverses;\n\n\t\tfor ( let i = 0, l = bones.length; i < l; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\t\t\tdata.bones.push( bone.uuid );\n\n\t\t\tconst boneInverse = boneInverses[ i ];\n\t\t\tdata.boneInverses.push( boneInverse.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass InstancedBufferAttribute extends BufferAttribute {\n\n\tconstructor( array, itemSize, normalized, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, itemSize, normalized );\n\n\t\tthis.isInstancedBufferAttribute = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\tdata.isInstancedBufferAttribute = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nconst _instanceLocalMatrix = /*@__PURE__*/ new Matrix4();\nconst _instanceWorldMatrix = /*@__PURE__*/ new Matrix4();\n\nconst _instanceIntersects = [];\n\nconst _box3 = /*@__PURE__*/ new Box3();\nconst _identity = /*@__PURE__*/ new Matrix4();\nconst _mesh$1 = /*@__PURE__*/ new Mesh();\nconst _sphere$3 = /*@__PURE__*/ new Sphere();\n\nclass InstancedMesh extends Mesh {\n\n\tconstructor( geometry, material, count ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isInstancedMesh = true;\n\n\t\tthis.instanceMatrix = new InstancedBufferAttribute( new Float32Array( count * 16 ), 16 );\n\t\tthis.instanceColor = null;\n\n\t\tthis.count = count;\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.setMatrixAt( i, _identity );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\tgeometry.computeBoundingBox();\n\n\t\t}\n\n\t\tthis.boundingBox.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_box3.copy( geometry.boundingBox ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingBox.union( _box3 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst count = this.count;\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere === null ) {\n\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.makeEmpty();\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.getMatrixAt( i, _instanceLocalMatrix );\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere ).applyMatrix4( _instanceLocalMatrix );\n\n\t\t\tthis.boundingSphere.union( _sphere$3 );\n\n\t\t}\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.instanceMatrix.copy( source.instanceMatrix );\n\n\t\tif ( source.instanceColor !== null ) this.instanceColor = source.instanceColor.clone();\n\n\t\tthis.count = source.count;\n\n\t\tif ( source.boundingBox !== null ) this.boundingBox = source.boundingBox.clone();\n\t\tif ( source.boundingSphere !== null ) this.boundingSphere = source.boundingSphere.clone();\n\n\t\treturn this;\n\n\t}\n\n\tgetColorAt( index, color ) {\n\n\t\tcolor.fromArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tgetMatrixAt( index, matrix ) {\n\n\t\tmatrix.fromArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst raycastTimes = this.count;\n\n\t\t_mesh$1.geometry = this.geometry;\n\t\t_mesh$1.material = this.material;\n\n\t\tif ( _mesh$1.material === undefined ) return;\n\n\t\t// test with bounding sphere first\n\n\t\tif ( this.boundingSphere === null ) this.computeBoundingSphere();\n\n\t\t_sphere$3.copy( this.boundingSphere );\n\t\t_sphere$3.applyMatrix4( matrixWorld );\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) return;\n\n\t\t// now test each instance\n\n\t\tfor ( let instanceId = 0; instanceId < raycastTimes; instanceId ++ ) {\n\n\t\t\t// calculate the world matrix for each instance\n\n\t\t\tthis.getMatrixAt( instanceId, _instanceLocalMatrix );\n\n\t\t\t_instanceWorldMatrix.multiplyMatrices( matrixWorld, _instanceLocalMatrix );\n\n\t\t\t// the mesh represents this single instance\n\n\t\t\t_mesh$1.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t_mesh$1.raycast( raycaster, _instanceIntersects );\n\n\t\t\t// process the result of raycast\n\n\t\t\tfor ( let i = 0, l = _instanceIntersects.length; i < l; i ++ ) {\n\n\t\t\t\tconst intersect = _instanceIntersects[ i ];\n\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_instanceIntersects.length = 0;\n\n\t\t}\n\n\t}\n\n\tsetColorAt( index, color ) {\n\n\t\tif ( this.instanceColor === null ) {\n\n\t\t\tthis.instanceColor = new InstancedBufferAttribute( new Float32Array( this.instanceMatrix.count * 3 ), 3 );\n\n\t\t}\n\n\t\tcolor.toArray( this.instanceColor.array, index * 3 );\n\n\t}\n\n\tsetMatrixAt( index, matrix ) {\n\n\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n}\n\nfunction sortOpaque( a, b ) {\n\n\treturn a.z - b.z;\n\n}\n\nfunction sortTransparent( a, b ) {\n\n\treturn b.z - a.z;\n\n}\n\nclass MultiDrawRenderList {\n\n\tconstructor() {\n\n\t\tthis.index = 0;\n\t\tthis.pool = [];\n\t\tthis.list = [];\n\n\t}\n\n\tpush( drawRange, z ) {\n\n\t\tconst pool = this.pool;\n\t\tconst list = this.list;\n\t\tif ( this.index >= pool.length ) {\n\n\t\t\tpool.push( {\n\n\t\t\t\tstart: - 1,\n\t\t\t\tcount: - 1,\n\t\t\t\tz: - 1,\n\n\t\t\t} );\n\n\t\t}\n\n\t\tconst item = pool[ this.index ];\n\t\tlist.push( item );\n\t\tthis.index ++;\n\n\t\titem.start = drawRange.start;\n\t\titem.count = drawRange.count;\n\t\titem.z = z;\n\n\t}\n\n\treset() {\n\n\t\tthis.list.length = 0;\n\t\tthis.index = 0;\n\n\t}\n\n}\n\nconst ID_ATTR_NAME = 'batchId';\nconst _matrix = /*@__PURE__*/ new Matrix4();\nconst _invMatrixWorld = /*@__PURE__*/ new Matrix4();\nconst _identityMatrix = /*@__PURE__*/ new Matrix4();\nconst _projScreenMatrix$2 = /*@__PURE__*/ new Matrix4();\nconst _frustum = /*@__PURE__*/ new Frustum();\nconst _box$1 = /*@__PURE__*/ new Box3();\nconst _sphere$2 = /*@__PURE__*/ new Sphere();\nconst _vector$5 = /*@__PURE__*/ new Vector3();\nconst _renderList = /*@__PURE__*/ new MultiDrawRenderList();\nconst _mesh = /*@__PURE__*/ new Mesh();\nconst _batchIntersects = [];\n\n// @TODO: SkinnedMesh support?\n// @TODO: geometry.groups support?\n// @TODO: geometry.drawRange support?\n// @TODO: geometry.morphAttributes support?\n// @TODO: Support uniform parameter per geometry\n// @TODO: Add an \"optimize\" function to pack geometry and remove data gaps\n\n// copies data from attribute \"src\" into \"target\" starting at \"targetOffset\"\nfunction copyAttributeData( src, target, targetOffset = 0 ) {\n\n\tconst itemSize = target.itemSize;\n\tif ( src.isInterleavedBufferAttribute || src.array.constructor !== target.array.constructor ) {\n\n\t\t// use the component getters and setters if the array data cannot\n\t\t// be copied directly\n\t\tconst vertexCount = src.count;\n\t\tfor ( let i = 0; i < vertexCount; i ++ ) {\n\n\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\ttarget.setComponent( i + targetOffset, c, src.getComponent( i, c ) );\n\n\t\t\t}\n\n\t\t}\n\n\t} else {\n\n\t\t// faster copy approach using typed array set function\n\t\ttarget.array.set( src.array, targetOffset * itemSize );\n\n\t}\n\n\ttarget.needsUpdate = true;\n\n}\n\nclass BatchedMesh extends Mesh {\n\n\tget maxGeometryCount() {\n\n\t\treturn this._maxGeometryCount;\n\n\t}\n\n\tconstructor( maxGeometryCount, maxVertexCount, maxIndexCount = maxVertexCount * 2, material ) {\n\n\t\tsuper( new BufferGeometry(), material );\n\n\t\tthis.isBatchedMesh = true;\n\t\tthis.perObjectFrustumCulled = true;\n\t\tthis.sortObjects = true;\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\t\tthis.customSort = null;\n\n\t\tthis._drawRanges = [];\n\t\tthis._reservedRanges = [];\n\n\t\tthis._visibility = [];\n\t\tthis._active = [];\n\t\tthis._bounds = [];\n\n\t\tthis._maxGeometryCount = maxGeometryCount;\n\t\tthis._maxVertexCount = maxVertexCount;\n\t\tthis._maxIndexCount = maxIndexCount;\n\n\t\tthis._geometryInitialized = false;\n\t\tthis._geometryCount = 0;\n\t\tthis._multiDrawCounts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawStarts = new Int32Array( maxGeometryCount );\n\t\tthis._multiDrawCount = 0;\n\t\tthis._visibilityChanged = true;\n\n\t\t// Local matrix per geometry by using data texture\n\t\tthis._matricesTexture = null;\n\n\t\tthis._initMatricesTexture();\n\n\t}\n\n\t_initMatricesTexture() {\n\n\t\t// layout (1 matrix = 4 pixels)\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t//  with  8x8  pixel texture max   16 matrices * 4 pixels =  (8 * 8)\n\t\t//       16x16 pixel texture max   64 matrices * 4 pixels = (16 * 16)\n\t\t//       32x32 pixel texture max  256 matrices * 4 pixels = (32 * 32)\n\t\t//       64x64 pixel texture max 1024 matrices * 4 pixels = (64 * 64)\n\n\t\tlet size = Math.sqrt( this._maxGeometryCount * 4 ); // 4 pixels needed for 1 matrix\n\t\tsize = Math.ceil( size / 4 ) * 4;\n\t\tsize = Math.max( size, 4 );\n\n\t\tconst matricesArray = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\tconst matricesTexture = new DataTexture( matricesArray, size, size, RGBAFormat, FloatType );\n\n\t\tthis._matricesTexture = matricesTexture;\n\n\t}\n\n\t_initializeGeometry( reference ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst maxVertexCount = this._maxVertexCount;\n\t\tconst maxGeometryCount = this._maxGeometryCount;\n\t\tconst maxIndexCount = this._maxIndexCount;\n\t\tif ( this._geometryInitialized === false ) {\n\n\t\t\tfor ( const attributeName in reference.attributes ) {\n\n\t\t\t\tconst srcAttribute = reference.getAttribute( attributeName );\n\t\t\t\tconst { array, itemSize, normalized } = srcAttribute;\n\n\t\t\t\tconst dstArray = new array.constructor( maxVertexCount * itemSize );\n\t\t\t\tconst dstAttribute = new srcAttribute.constructor( dstArray, itemSize, normalized );\n\t\t\t\tdstAttribute.setUsage( srcAttribute.usage );\n\n\t\t\t\tgeometry.setAttribute( attributeName, dstAttribute );\n\n\t\t\t}\n\n\t\t\tif ( reference.getIndex() !== null ) {\n\n\t\t\t\tconst indexArray = maxVertexCount > 65536\n\t\t\t\t\t? new Uint32Array( maxIndexCount )\n\t\t\t\t\t: new Uint16Array( maxIndexCount );\n\n\t\t\t\tgeometry.setIndex( new BufferAttribute( indexArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tconst idArray = maxGeometryCount > 65536\n\t\t\t\t? new Uint32Array( maxVertexCount )\n\t\t\t\t: new Uint16Array( maxVertexCount );\n\t\t\tgeometry.setAttribute( ID_ATTR_NAME, new BufferAttribute( idArray, 1 ) );\n\n\t\t\tthis._geometryInitialized = true;\n\n\t\t}\n\n\t}\n\n\t// Make sure the geometry is compatible with the existing combined geometry atributes\n\t_validateGeometry( geometry ) {\n\n\t\t// check that the geometry doesn't have a version of our reserved id attribute\n\t\tif ( geometry.getAttribute( ID_ATTR_NAME ) ) {\n\n\t\t\tthrow new Error( `BatchedMesh: Geometry cannot use attribute \"${ ID_ATTR_NAME }\"` );\n\n\t\t}\n\n\t\t// check to ensure the geometries are using consistent attributes and indices\n\t\tconst batchGeometry = this.geometry;\n\t\tif ( Boolean( geometry.getIndex() ) !== Boolean( batchGeometry.getIndex() ) ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: All geometries must consistently have \"index\".' );\n\n\t\t}\n\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( ! geometry.hasAttribute( attributeName ) ) {\n\n\t\t\t\tthrow new Error( `BatchedMesh: Added geometry missing \"${ attributeName }\". All geometries must have consistent attributes.` );\n\n\t\t\t}\n\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tif ( srcAttribute.itemSize !== dstAttribute.itemSize || srcAttribute.normalized !== dstAttribute.normalized ) {\n\n\t\t\t\tthrow new Error( 'BatchedMesh: All attributes must have a consistent itemSize and normalized value.' );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tsetCustomSort( func ) {\n\n\t\tthis.customSort = func;\n\t\treturn this;\n\n\t}\n\n\tcomputeBoundingBox() {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingBox = this.boundingBox;\n\t\tconst active = this._active;\n\n\t\tboundingBox.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingBoxAt( i, _box$1 ).applyMatrix4( _matrix );\n\t\t\tboundingBox.union( _box$1 );\n\n\t\t}\n\n\t}\n\n\tcomputeBoundingSphere() {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst boundingSphere = this.boundingSphere;\n\t\tconst active = this._active;\n\n\t\tboundingSphere.makeEmpty();\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( active[ i ] === false ) continue;\n\n\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\tboundingSphere.union( _sphere$2 );\n\n\t\t}\n\n\t}\n\n\taddGeometry( geometry, vertexCount = - 1, indexCount = - 1 ) {\n\n\t\tthis._initializeGeometry( geometry );\n\n\t\tthis._validateGeometry( geometry );\n\n\t\t// ensure we're not over geometry\n\t\tif ( this._geometryCount >= this._maxGeometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\t// get the necessary range fo the geometry\n\t\tconst reservedRange = {\n\t\t\tvertexStart: - 1,\n\t\t\tvertexCount: - 1,\n\t\t\tindexStart: - 1,\n\t\t\tindexCount: - 1,\n\t\t};\n\n\t\tlet lastRange = null;\n\t\tconst reservedRanges = this._reservedRanges;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst bounds = this._bounds;\n\t\tif ( this._geometryCount !== 0 ) {\n\n\t\t\tlastRange = reservedRanges[ reservedRanges.length - 1 ];\n\n\t\t}\n\n\t\tif ( vertexCount === - 1 ) {\n\n\t\t\treservedRange.vertexCount = geometry.getAttribute( 'position' ).count;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexCount = vertexCount;\n\n\t\t}\n\n\t\tif ( lastRange === null ) {\n\n\t\t\treservedRange.vertexStart = 0;\n\n\t\t} else {\n\n\t\t\treservedRange.vertexStart = lastRange.vertexStart + lastRange.vertexCount;\n\n\t\t}\n\n\t\tconst index = geometry.getIndex();\n\t\tconst hasIndex = index !== null;\n\t\tif ( hasIndex ) {\n\n\t\t\tif ( indexCount\t=== - 1 ) {\n\n\t\t\t\treservedRange.indexCount = index.count;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexCount = indexCount;\n\n\t\t\t}\n\n\t\t\tif ( lastRange === null ) {\n\n\t\t\t\treservedRange.indexStart = 0;\n\n\t\t\t} else {\n\n\t\t\t\treservedRange.indexStart = lastRange.indexStart + lastRange.indexCount;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif (\n\t\t\treservedRange.indexStart !== - 1 &&\n\t\t\treservedRange.indexStart + reservedRange.indexCount > this._maxIndexCount ||\n\t\t\treservedRange.vertexStart + reservedRange.vertexCount > this._maxVertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space request exceeds the maximum buffer size.' );\n\n\t\t}\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\n\t\t// push new visibility states\n\t\tvisibility.push( true );\n\t\tactive.push( true );\n\n\t\t// update id\n\t\tconst geometryId = this._geometryCount;\n\t\tthis._geometryCount ++;\n\n\t\t// initialize matrix information\n\t\t_identityMatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\t// add the reserved range and draw range objects\n\t\treservedRanges.push( reservedRange );\n\t\tdrawRanges.push( {\n\t\t\tstart: hasIndex ? reservedRange.indexStart : reservedRange.vertexStart,\n\t\t\tcount: - 1\n\t\t} );\n\t\tbounds.push( {\n\t\t\tboxInitialized: false,\n\t\t\tbox: new Box3(),\n\n\t\t\tsphereInitialized: false,\n\t\t\tsphere: new Sphere()\n\t\t} );\n\n\t\t// set the id for the geometry\n\t\tconst idAttribute = this.geometry.getAttribute( ID_ATTR_NAME );\n\t\tfor ( let i = 0; i < reservedRange.vertexCount; i ++ ) {\n\n\t\t\tidAttribute.setX( reservedRange.vertexStart + i, geometryId );\n\n\t\t}\n\n\t\tidAttribute.needsUpdate = true;\n\n\t\t// update the geometry\n\t\tthis.setGeometryAt( geometryId, geometry );\n\n\t\treturn geometryId;\n\n\t}\n\n\tsetGeometryAt( id, geometry ) {\n\n\t\tif ( id >= this._geometryCount ) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Maximum geometry count reached.' );\n\n\t\t}\n\n\t\tthis._validateGeometry( geometry );\n\n\t\tconst batchGeometry = this.geometry;\n\t\tconst hasIndex = batchGeometry.getIndex() !== null;\n\t\tconst dstIndex = batchGeometry.getIndex();\n\t\tconst srcIndex = geometry.getIndex();\n\t\tconst reservedRange = this._reservedRanges[ id ];\n\t\tif (\n\t\t\thasIndex &&\n\t\t\tsrcIndex.count > reservedRange.indexCount ||\n\t\t\tgeometry.attributes.position.count > reservedRange.vertexCount\n\t\t) {\n\n\t\t\tthrow new Error( 'BatchedMesh: Reserved space not large enough for provided geometry.' );\n\n\t\t}\n\n\t\t// copy geometry over\n\t\tconst vertexStart = reservedRange.vertexStart;\n\t\tconst vertexCount = reservedRange.vertexCount;\n\t\tfor ( const attributeName in batchGeometry.attributes ) {\n\n\t\t\tif ( attributeName === ID_ATTR_NAME ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// copy attribute data\n\t\t\tconst srcAttribute = geometry.getAttribute( attributeName );\n\t\t\tconst dstAttribute = batchGeometry.getAttribute( attributeName );\n\t\t\tcopyAttributeData( srcAttribute, dstAttribute, vertexStart );\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tconst itemSize = srcAttribute.itemSize;\n\t\t\tfor ( let i = srcAttribute.count, l = vertexCount; i < l; i ++ ) {\n\n\t\t\t\tconst index = vertexStart + i;\n\t\t\t\tfor ( let c = 0; c < itemSize; c ++ ) {\n\n\t\t\t\t\tdstAttribute.setComponent( index, c, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdstAttribute.needsUpdate = true;\n\n\t\t}\n\n\t\t// copy index\n\t\tif ( hasIndex ) {\n\n\t\t\tconst indexStart = reservedRange.indexStart;\n\n\t\t\t// copy index data over\n\t\t\tfor ( let i = 0; i < srcIndex.count; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart + srcIndex.getX( i ) );\n\n\t\t\t}\n\n\t\t\t// fill the rest in with zeroes\n\t\t\tfor ( let i = srcIndex.count, l = reservedRange.indexCount; i < l; i ++ ) {\n\n\t\t\t\tdstIndex.setX( indexStart + i, vertexStart );\n\n\t\t\t}\n\n\t\t\tdstIndex.needsUpdate = true;\n\n\t\t}\n\n\t\t// store the bounding boxes\n\t\tconst bound = this._bounds[ id ];\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tbound.box.copy( geometry.boundingBox );\n\t\t\tbound.boxInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.boxInitialized = false;\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tbound.sphere.copy( geometry.boundingSphere );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t} else {\n\n\t\t\tbound.sphereInitialized = false;\n\n\t\t}\n\n\t\t// set drawRange count\n\t\tconst drawRange = this._drawRanges[ id ];\n\t\tconst posAttr = geometry.getAttribute( 'position' );\n\t\tdrawRange.count = hasIndex ? srcIndex.count : posAttr.count;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn id;\n\n\t}\n\n\tdeleteGeometry( geometryId ) {\n\n\t\t// Note: User needs to call optimize() afterward to pack the data.\n\n\t\tconst active = this._active;\n\t\tif ( geometryId >= active.length || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tactive[ geometryId ] = false;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\t// get bounding box and compute it if it doesn't exist\n\tgetBoundingBoxAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding box\n\t\tconst bound = this._bounds[ id ];\n\t\tconst box = bound.box;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.boxInitialized === false ) {\n\n\t\t\tbox.makeEmpty();\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\tbox.expandByPoint( _vector$5.fromBufferAttribute( position, iv ) );\n\n\t\t\t}\n\n\t\t\tbound.boxInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( box );\n\t\treturn target;\n\n\t}\n\n\t// get bounding sphere and compute it if it doesn't exist\n\tgetBoundingSphereAt( id, target ) {\n\n\t\tconst active = this._active;\n\t\tif ( active[ id ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\t// compute bounding sphere\n\t\tconst bound = this._bounds[ id ];\n\t\tconst sphere = bound.sphere;\n\t\tconst geometry = this.geometry;\n\t\tif ( bound.sphereInitialized === false ) {\n\n\t\t\tsphere.makeEmpty();\n\n\t\t\tthis.getBoundingBoxAt( id, _box$1 );\n\t\t\t_box$1.getCenter( sphere.center );\n\n\t\t\tconst index = geometry.index;\n\t\t\tconst position = geometry.attributes.position;\n\t\t\tconst drawRange = this._drawRanges[ id ];\n\n\t\t\tlet maxRadiusSq = 0;\n\t\t\tfor ( let i = drawRange.start, l = drawRange.start + drawRange.count; i < l; i ++ ) {\n\n\t\t\t\tlet iv = i;\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tiv = index.getX( iv );\n\n\t\t\t\t}\n\n\t\t\t\t_vector$5.fromBufferAttribute( position, iv );\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, sphere.center.distanceToSquared( _vector$5 ) );\n\n\t\t\t}\n\n\t\t\tsphere.radius = Math.sqrt( maxRadiusSq );\n\t\t\tbound.sphereInitialized = true;\n\n\t\t}\n\n\t\ttarget.copy( sphere );\n\t\treturn target;\n\n\t}\n\n\tsetMatrixAt( geometryId, matrix ) {\n\n\t\t// @TODO: Map geometryId to index of the arrays because\n\t\t//        optimize() can make geometryId mismatch the index\n\n\t\tconst active = this._active;\n\t\tconst matricesTexture = this._matricesTexture;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tmatrix.toArray( matricesArray, geometryId * 16 );\n\t\tmatricesTexture.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetMatrixAt( geometryId, matrix ) {\n\n\t\tconst active = this._active;\n\t\tconst matricesArray = this._matricesTexture.image.data;\n\t\tconst geometryCount = this._geometryCount;\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn matrix.fromArray( matricesArray, geometryId * 16 );\n\n\t}\n\n\tsetVisibleAt( geometryId, value ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// if the geometry is out of range, not active, or visibility state\n\t\t// does not change then return early\n\t\tif (\n\t\t\tgeometryId >= geometryCount ||\n\t\t\tactive[ geometryId ] === false ||\n\t\t\tvisibility[ geometryId ] === value\n\t\t) {\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvisibility[ geometryId ] = value;\n\t\tthis._visibilityChanged = true;\n\n\t\treturn this;\n\n\t}\n\n\tgetVisibleAt( geometryId ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst geometryCount = this._geometryCount;\n\n\t\t// return early if the geometry is out of range or not active\n\t\tif ( geometryId >= geometryCount || active[ geometryId ] === false ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn visibility[ geometryId ];\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst visibility = this._visibility;\n\t\tconst active = this._active;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst geometryCount = this._geometryCount;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst batchGeometry = this.geometry;\n\n\t\t// iterate over each geometry\n\t\t_mesh.material = this.material;\n\t\t_mesh.geometry.index = batchGeometry.index;\n\t\t_mesh.geometry.attributes = batchGeometry.attributes;\n\t\tif ( _mesh.geometry.boundingBox === null ) {\n\n\t\t\t_mesh.geometry.boundingBox = new Box3();\n\n\t\t}\n\n\t\tif ( _mesh.geometry.boundingSphere === null ) {\n\n\t\t\t_mesh.geometry.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tfor ( let i = 0; i < geometryCount; i ++ ) {\n\n\t\t\tif ( ! visibility[ i ] || ! active[ i ] ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tconst drawRange = drawRanges[ i ];\n\t\t\t_mesh.geometry.setDrawRange( drawRange.start, drawRange.count );\n\n\t\t\t// ge the intersects\n\t\t\tthis.getMatrixAt( i, _mesh.matrixWorld ).premultiply( matrixWorld );\n\t\t\tthis.getBoundingBoxAt( i, _mesh.geometry.boundingBox );\n\t\t\tthis.getBoundingSphereAt( i, _mesh.geometry.boundingSphere );\n\t\t\t_mesh.raycast( raycaster, _batchIntersects );\n\n\t\t\t// add batch id to the intersects\n\t\t\tfor ( let j = 0, l = _batchIntersects.length; j < l; j ++ ) {\n\n\t\t\t\tconst intersect = _batchIntersects[ j ];\n\t\t\t\tintersect.object = this;\n\t\t\t\tintersect.batchId = i;\n\t\t\t\tintersects.push( intersect );\n\n\t\t\t}\n\n\t\t\t_batchIntersects.length = 0;\n\n\t\t}\n\n\t\t_mesh.material = null;\n\t\t_mesh.geometry.index = null;\n\t\t_mesh.geometry.attributes = {};\n\t\t_mesh.geometry.setDrawRange( 0, Infinity );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.geometry = source.geometry.clone();\n\t\tthis.perObjectFrustumCulled = source.perObjectFrustumCulled;\n\t\tthis.sortObjects = source.sortObjects;\n\t\tthis.boundingBox = source.boundingBox !== null ? source.boundingBox.clone() : null;\n\t\tthis.boundingSphere = source.boundingSphere !== null ? source.boundingSphere.clone() : null;\n\n\t\tthis._drawRanges = source._drawRanges.map( range => ( { ...range } ) );\n\t\tthis._reservedRanges = source._reservedRanges.map( range => ( { ...range } ) );\n\n\t\tthis._visibility = source._visibility.slice();\n\t\tthis._active = source._active.slice();\n\t\tthis._bounds = source._bounds.map( bound => ( {\n\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\tbox: bound.box.clone(),\n\n\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\tsphere: bound.sphere.clone()\n\t\t} ) );\n\n\t\tthis._maxGeometryCount = source._maxGeometryCount;\n\t\tthis._maxVertexCount = source._maxVertexCount;\n\t\tthis._maxIndexCount = source._maxIndexCount;\n\n\t\tthis._geometryInitialized = source._geometryInitialized;\n\t\tthis._geometryCount = source._geometryCount;\n\t\tthis._multiDrawCounts = source._multiDrawCounts.slice();\n\t\tthis._multiDrawStarts = source._multiDrawStarts.slice();\n\n\t\tthis._matricesTexture = source._matricesTexture.clone();\n\t\tthis._matricesTexture.image.data = this._matricesTexture.image.slice();\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\t// Assuming the geometry is not shared with other meshes\n\t\tthis.geometry.dispose();\n\n\t\tthis._matricesTexture.dispose();\n\t\tthis._matricesTexture = null;\n\t\treturn this;\n\n\t}\n\n\tonBeforeRender( renderer, scene, camera, geometry, material/*, _group*/ ) {\n\n\t\t// if visibility has not changed and frustum culling and object sorting is not required\n\t\t// then skip iterating over all items\n\t\tif ( ! this._visibilityChanged && ! this.perObjectFrustumCulled && ! this.sortObjects ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// the indexed version of the multi draw function requires specifying the start\n\t\t// offset in bytes.\n\t\tconst index = geometry.getIndex();\n\t\tconst bytesPerElement = index === null ? 1 : index.array.BYTES_PER_ELEMENT;\n\n\t\tconst visibility = this._visibility;\n\t\tconst multiDrawStarts = this._multiDrawStarts;\n\t\tconst multiDrawCounts = this._multiDrawCounts;\n\t\tconst drawRanges = this._drawRanges;\n\t\tconst perObjectFrustumCulled = this.perObjectFrustumCulled;\n\n\t\t// prepare the frustum in the local frame\n\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t_projScreenMatrix$2\n\t\t\t\t.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse )\n\t\t\t\t.multiply( this.matrixWorld );\n\t\t\t_frustum.setFromProjectionMatrix(\n\t\t\t\t_projScreenMatrix$2,\n\t\t\t\trenderer.isWebGPURenderer ? WebGPUCoordinateSystem : WebGLCoordinateSystem\n\t\t\t);\n\n\t\t}\n\n\t\tlet count = 0;\n\t\tif ( this.sortObjects ) {\n\n\t\t\t// get the camera position in the local frame\n\t\t\t_invMatrixWorld.copy( this.matrixWorld ).invert();\n\t\t\t_vector$5.setFromMatrixPosition( camera.matrixWorld ).applyMatrix4( _invMatrixWorld );\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\t// get the distance from camera used for sorting\n\t\t\t\t\t\tconst z = _vector$5.distanceTo( _sphere$2.center );\n\t\t\t\t\t\t_renderList.push( drawRanges[ i ], z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Sort the draw ranges and prep for rendering\n\t\t\tconst list = _renderList.list;\n\t\t\tconst customSort = this.customSort;\n\t\t\tif ( customSort === null ) {\n\n\t\t\t\tlist.sort( material.transparent ? sortTransparent : sortOpaque );\n\n\t\t\t} else {\n\n\t\t\t\tcustomSort.call( this, list, camera );\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = list.length; i < l; i ++ ) {\n\n\t\t\t\tconst item = list[ i ];\n\t\t\t\tmultiDrawStarts[ count ] = item.start * bytesPerElement;\n\t\t\t\tmultiDrawCounts[ count ] = item.count;\n\t\t\t\tcount ++;\n\n\t\t\t}\n\n\t\t\t_renderList.reset();\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0, l = visibility.length; i < l; i ++ ) {\n\n\t\t\t\tif ( visibility[ i ] ) {\n\n\t\t\t\t\t// determine whether the batched geometry is within the frustum\n\t\t\t\t\tlet culled = false;\n\t\t\t\t\tif ( perObjectFrustumCulled ) {\n\n\t\t\t\t\t\t// get the bounds in world space\n\t\t\t\t\t\tthis.getMatrixAt( i, _matrix );\n\t\t\t\t\t\tthis.getBoundingSphereAt( i, _sphere$2 ).applyMatrix4( _matrix );\n\t\t\t\t\t\tculled = ! _frustum.intersectsSphere( _sphere$2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! culled ) {\n\n\t\t\t\t\t\tconst range = drawRanges[ i ];\n\t\t\t\t\t\tmultiDrawStarts[ count ] = range.start * bytesPerElement;\n\t\t\t\t\t\tmultiDrawCounts[ count ] = range.count;\n\t\t\t\t\t\tcount ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._multiDrawCount = count;\n\t\tthis._visibilityChanged = false;\n\n\t}\n\n\tonBeforeShadow( renderer, object, camera, shadowCamera, geometry, depthMaterial/* , group */ ) {\n\n\t\tthis.onBeforeRender( renderer, null, shadowCamera, geometry, depthMaterial );\n\n\t}\n\n}\n\nclass LineBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineBasicMaterial = true;\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _start$1 = /*@__PURE__*/ new Vector3();\nconst _end$1 = /*@__PURE__*/ new Vector3();\nconst _inverseMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _ray$1 = /*@__PURE__*/ new Ray();\nconst _sphere$1 = /*@__PURE__*/ new Sphere();\n\nclass Line extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new LineBasicMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isLine = true;\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [ 0 ];\n\n\t\t\tfor ( let i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i ] += _start$1.distanceTo( _end$1 );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Line.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere$1.copy( geometry.boundingSphere );\n\t\t_sphere$1.applyMatrix4( matrixWorld );\n\t\t_sphere$1.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere$1 ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix$1.copy( matrixWorld ).invert();\n\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst vStart = new Vector3();\n\t\tconst vEnd = new Vector3();\n\t\tconst interSegment = new Vector3();\n\t\tconst interRay = new Vector3();\n\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tconst a = index.getX( i );\n\t\t\t\tconst b = index.getX( i + 1 );\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, a );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, b );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end - 1; i < l; i += step ) {\n\n\t\t\t\tvStart.fromBufferAttribute( positionAttribute, i );\n\t\t\t\tvEnd.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tconst distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\tif ( distSq > localThresholdSq ) continue;\n\n\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\tintersects.push( {\n\n\t\t\t\t\tdistance: distance,\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\tindex: i,\n\t\t\t\t\tface: null,\n\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\tobject: this\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nconst _start = /*@__PURE__*/ new Vector3();\nconst _end = /*@__PURE__*/ new Vector3();\n\nclass LineSegments extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineSegments = true;\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tcomputeLineDistances() {\n\n\t\tconst geometry = this.geometry;\n\n\t\t// we assume non-indexed geometry\n\n\t\tif ( geometry.index === null ) {\n\n\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\tconst lineDistances = [];\n\n\t\t\tfor ( let i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t_start.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t_end.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start.distanceTo( _end );\n\n\t\t\t}\n\n\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineLoop extends Line {\n\n\tconstructor( geometry, material ) {\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isLineLoop = true;\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n}\n\nclass PointsMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isPointsMaterial = true;\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _inverseMatrix = /*@__PURE__*/ new Matrix4();\nconst _ray = /*@__PURE__*/ new Ray();\nconst _sphere = /*@__PURE__*/ new Sphere();\nconst _position$2 = /*@__PURE__*/ new Vector3();\n\nclass Points extends Object3D {\n\n\tconstructor( geometry = new BufferGeometry(), material = new PointsMaterial() ) {\n\n\t\tsuper();\n\n\t\tthis.isPoints = true;\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry;\n\t\tthis.material = material;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.material = Array.isArray( source.material ) ? source.material.slice() : source.material;\n\t\tthis.geometry = source.geometry;\n\n\t\treturn this;\n\n\t}\n\n\traycast( raycaster, intersects ) {\n\n\t\tconst geometry = this.geometry;\n\t\tconst matrixWorld = this.matrixWorld;\n\t\tconst threshold = raycaster.params.Points.threshold;\n\t\tconst drawRange = geometry.drawRange;\n\n\t\t// Checking boundingSphere distance to ray\n\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere );\n\t\t_sphere.applyMatrix4( matrixWorld );\n\t\t_sphere.radius += threshold;\n\n\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) return;\n\n\t\t//\n\n\t\t_inverseMatrix.copy( matrixWorld ).invert();\n\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\tconst localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\tconst index = geometry.index;\n\t\tconst attributes = geometry.attributes;\n\t\tconst positionAttribute = attributes.position;\n\n\t\tif ( index !== null ) {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, il = end; i < il; i ++ ) {\n\n\t\t\t\tconst a = index.getX( i );\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, a );\n\n\t\t\t\ttestPoint( _position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst start = Math.max( 0, drawRange.start );\n\t\t\tconst end = Math.min( positionAttribute.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\tfor ( let i = start, l = end; i < l; i ++ ) {\n\n\t\t\t\t_position$2.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\ttestPoint( _position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tupdateMorphTargets() {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\t\tconst keys = Object.keys( morphAttributes );\n\n\t\tif ( keys.length > 0 ) {\n\n\t\t\tconst morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( let m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\tconst name = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\tconst rayPointDistanceSq = _ray.distanceSqToPoint( point );\n\n\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\tconst intersectPoint = new Vector3();\n\n\t\t_ray.closestPointToPoint( point, intersectPoint );\n\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\tconst distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\tintersects.push( {\n\n\t\t\tdistance: distance,\n\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\tpoint: intersectPoint,\n\t\t\tindex: index,\n\t\t\tface: null,\n\t\t\tobject: object\n\n\t\t} );\n\n\t}\n\n}\n\nclass VideoTexture extends Texture {\n\n\tconstructor( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isVideoTexture = true;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tconst scope = this;\n\n\t\tfunction updateVideo() {\n\n\t\t\tscope.needsUpdate = true;\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t\tif ( 'requestVideoFrameCallback' in video ) {\n\n\t\t\tvideo.requestVideoFrameCallback( updateVideo );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.image ).copy( this );\n\n\t}\n\n\tupdate() {\n\n\t\tconst video = this.image;\n\t\tconst hasVideoFrameCallback = 'requestVideoFrameCallback' in video;\n\n\t\tif ( hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tthis.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nclass FramebufferTexture extends Texture {\n\n\tconstructor( width, height ) {\n\n\t\tsuper( { width, height } );\n\n\t\tthis.isFramebufferTexture = true;\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\nclass CompressedTexture extends Texture {\n\n\tconstructor( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, colorSpace ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, colorSpace );\n\n\t\tthis.isCompressedTexture = true;\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n}\n\nclass CompressedArrayTexture extends CompressedTexture {\n\n\tconstructor( mipmaps, width, height, depth, format, type ) {\n\n\t\tsuper( mipmaps, width, height, format, type );\n\n\t\tthis.isCompressedArrayTexture = true;\n\t\tthis.image.depth = depth;\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t}\n\n}\n\nclass CompressedCubeTexture extends CompressedTexture {\n\n\tconstructor( images, format, type ) {\n\n\t\tsuper( undefined, images[ 0 ].width, images[ 0 ].height, format, type, CubeReflectionMapping );\n\n\t\tthis.isCompressedCubeTexture = true;\n\t\tthis.isCubeTexture = true;\n\n\t\tthis.image = images;\n\n\t}\n\n}\n\nclass CanvasTexture extends Texture {\n\n\tconstructor( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tsuper( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.isCanvasTexture = true;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n}\n\n/**\n * Extensible curve object.\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\nclass Curve {\n\n\tconstructor() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t}\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t}\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints( divisions = 5 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\t// Get total curve arc length\n\n\tgetLength() {\n\n\t\tconst lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t}\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths( divisions = this.arcLengthDivisions ) {\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tconst cache = [];\n\t\tlet current, last = this.getPoint( 0 );\n\t\tlet sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( let p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t}\n\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t}\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping( u, distance ) {\n\n\t\tconst arcLengths = this.getLengths();\n\n\t\tlet i = 0;\n\t\tconst il = arcLengths.length;\n\n\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tlet low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tconst lengthBefore = arcLengths[ i ];\n\t\tconst lengthAfter = arcLengths[ i + 1 ];\n\n\t\tconst segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tconst segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tconst t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t}\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst delta = 0.0001;\n\t\tlet t1 = t - delta;\n\t\tlet t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tconst pt1 = this.getPoint( t1 );\n\t\tconst pt2 = this.getPoint( t2 );\n\n\t\tconst tangent = optionalTarget || ( ( pt1.isVector2 ) ? new Vector2() : new Vector3() );\n\n\t\ttangent.copy( pt2 ).sub( pt1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\tconst t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t, optionalTarget );\n\n\t}\n\n\tcomputeFrenetFrames( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tconst normal = new Vector3();\n\n\t\tconst tangents = [];\n\t\tconst normals = [];\n\t\tconst binormals = [];\n\n\t\tconst vec = new Vector3();\n\t\tconst mat = new Matrix4();\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst u = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u, new Vector3() );\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tlet min = Number.MAX_VALUE;\n\t\tconst tx = Math.abs( tangents[ 0 ].x );\n\t\tconst ty = Math.abs( tangents[ 0 ].y );\n\t\tconst tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\tconst theta = Math.acos( clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\tlet theta = Math.acos( clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.6,\n\t\t\t\ttype: 'Curve',\n\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t}\n\t\t};\n\n\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\tdata.type = this.type;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass ArcCurve extends EllipseCurve {\n\n\tconstructor( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tsuper( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.isArcCurve = true;\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n}\n\n/**\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tlet c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tlet t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tlet t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tconst t2 = t * t;\n\t\t\tconst t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nconst tmp = /*@__PURE__*/ new Vector3();\nconst px = /*@__PURE__*/ new CubicPoly();\nconst py = /*@__PURE__*/ new CubicPoly();\nconst pz = /*@__PURE__*/ new CubicPoly();\n\nclass CatmullRomCurve3 extends Curve {\n\n\tconstructor( points = [], closed = false, curveType = 'centripetal', tension = 0.5 ) {\n\n\t\tsuper();\n\n\t\tthis.isCatmullRomCurve3 = true;\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points;\n\t\tthis.closed = closed;\n\t\tthis.curveType = curveType;\n\t\tthis.tension = tension;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst l = points.length;\n\n\t\tconst p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tlet intPoint = Math.floor( p );\n\t\tlet weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tconst p1 = points[ intPoint % l ];\n\t\tconst p2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tlet dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tlet dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tlet dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Bezier Curves formulas obtained from\n * https://en.wikipedia.org/wiki/B%C3%A9zier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tconst v0 = ( p2 - p0 ) * 0.5;\n\tconst v1 = ( p3 - p1 ) * 0.5;\n\tconst t2 = t * t;\n\tconst t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tconst k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tconst k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\nclass CubicBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve = true;\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector2() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineCurve3 extends Curve {\n\n\tconstructor( v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve3 = true;\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget = new Vector3() ) {\n\n\t\treturn optionalTarget.subVectors( this.v2, this.v1 ).normalize();\n\n\t}\n\n\tgetTangentAt( u, optionalTarget ) {\n\n\t\treturn this.getTangent( u, optionalTarget );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve extends Curve {\n\n\tconstructor( v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve = true;\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass QuadraticBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isQuadraticBezierCurve3 = true;\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SplineCurve extends Curve {\n\n\tconstructor( points = [] ) {\n\n\t\tsuper();\n\n\t\tthis.isSplineCurve = true;\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst points = this.points;\n\t\tconst p = ( points.length - 1 ) * t;\n\n\t\tconst intPoint = Math.floor( p );\n\t\tconst weight = p - intPoint;\n\n\t\tconst p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tconst p1 = points[ intPoint ];\n\t\tconst p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tconst p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.points = [];\n\n\t\tfor ( let i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.points = [];\n\n\t\tfor ( let i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tconst point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nvar Curves = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tArcCurve: ArcCurve,\n\tCatmullRomCurve3: CatmullRomCurve3,\n\tCubicBezierCurve: CubicBezierCurve,\n\tCubicBezierCurve3: CubicBezierCurve3,\n\tEllipseCurve: EllipseCurve,\n\tLineCurve: LineCurve,\n\tLineCurve3: LineCurve3,\n\tQuadraticBezierCurve: QuadraticBezierCurve,\n\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\tSplineCurve: SplineCurve\n});\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nclass CurvePath extends Curve {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tadd( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t}\n\n\tclosePath() {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tconst startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tconst endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tconst lineType = ( startPoint.isVector2 === true ) ? 'LineCurve' : 'LineCurve3';\n\t\t\tthis.curves.push( new Curves[ lineType ]( endPoint, startPoint ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst d = t * this.getLength();\n\t\tconst curveLengths = this.getCurveLengths();\n\t\tlet i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tconst diff = curveLengths[ i ] - d;\n\t\t\t\tconst curve = this.curves[ i ];\n\n\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u, optionalTarget );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t}\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength() {\n\n\t\tconst lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t}\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths() {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t}\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths() {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tconst lengths = [];\n\t\tlet sums = 0;\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t}\n\n\tgetSpacedPoints( divisions = 40 ) {\n\n\t\tconst points = [];\n\n\t\tfor ( let i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tgetPoints( divisions = 12 ) {\n\n\t\tconst points = [];\n\t\tlet last;\n\n\t\tfor ( let i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tconst curve = curves[ i ];\n\t\t\tconst resolution = curve.isEllipseCurve ? divisions * 2\n\t\t\t\t: ( curve.isLineCurve || curve.isLineCurve3 ) ? 1\n\t\t\t\t\t: curve.isSplineCurve ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tconst pts = curve.getPoints( resolution );\n\n\t\t\tfor ( let j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tconst point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.autoClose = this.autoClose;\n\t\tdata.curves = [];\n\n\t\tfor ( let i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = this.curves[ i ];\n\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.autoClose = json.autoClose;\n\t\tthis.curves = [];\n\n\t\tfor ( let i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\tconst curve = json.curves[ i ];\n\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Path extends CurvePath {\n\n\tconstructor( points ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( let i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tconst curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tconst curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tconst curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts /*Array of Vector*/ ) {\n\n\t\tconst npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tconst curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\treturn this;\n\n\t}\n\n\tarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tabsarc( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\treturn this;\n\n\t}\n\n\tellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst x0 = this.currentPoint.x;\n\t\tconst y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\treturn this;\n\n\t}\n\n\tabsellipse( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tconst curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tconst firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tconst lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LatheGeometry extends BufferGeometry {\n\n\tconstructor( points = [ new Vector2( 0, - 0.5 ), new Vector2( 0.5, 0 ), new Vector2( 0, 0.5 ) ], segments = 12, phiStart = 0, phiLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments );\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = clamp( phiLength, 0, Math.PI * 2 );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst uvs = [];\n\t\tconst initNormals = [];\n\t\tconst normals = [];\n\n\t\t// helper variables\n\n\t\tconst inverseSegments = 1.0 / segments;\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tconst normal = new Vector3();\n\t\tconst curNormal = new Vector3();\n\t\tconst prevNormal = new Vector3();\n\t\tlet dx = 0;\n\t\tlet dy = 0;\n\n\t\t// pre-compute normals for initial \"meridian\"\n\n\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\tswitch ( j ) {\n\n\t\t\t\tcase 0:\t\t\t\t// special handling for 1st vertex on path\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tprevNormal.copy( normal );\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ( points.length - 1 ):\t// special handling for last Vertex on path\n\n\t\t\t\t\tinitNormals.push( prevNormal.x, prevNormal.y, prevNormal.z );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\t\t\t// default handling for all vertices in between\n\n\t\t\t\t\tdx = points[ j + 1 ].x - points[ j ].x;\n\t\t\t\t\tdy = points[ j + 1 ].y - points[ j ].y;\n\n\t\t\t\t\tnormal.x = dy * 1.0;\n\t\t\t\t\tnormal.y = - dx;\n\t\t\t\t\tnormal.z = dy * 0.0;\n\n\t\t\t\t\tcurNormal.copy( normal );\n\n\t\t\t\t\tnormal.x += prevNormal.x;\n\t\t\t\t\tnormal.y += prevNormal.y;\n\t\t\t\t\tnormal.z += prevNormal.z;\n\n\t\t\t\t\tnormal.normalize();\n\n\t\t\t\t\tinitNormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\tprevNormal.copy( curNormal );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices, uvs and normals\n\n\t\tfor ( let i = 0; i <= segments; i ++ ) {\n\n\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tconst sin = Math.sin( phi );\n\t\t\tconst cos = Math.cos( phi );\n\n\t\t\tfor ( let j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// normal\n\n\t\t\t\tconst x = initNormals[ 3 * j + 0 ] * sin;\n\t\t\t\tconst y = initNormals[ 3 * j + 1 ];\n\t\t\t\tconst z = initNormals[ 3 * j + 0 ] * cos;\n\n\t\t\t\tnormals.push( x, y, z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( let j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tconst base = j + i * points.length;\n\n\t\t\t\tconst a = base;\n\t\t\t\tconst b = base + points.length;\n\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\tconst d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( c, d, b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new LatheGeometry( data.points, data.segments, data.phiStart, data.phiLength );\n\n\t}\n\n}\n\nclass CapsuleGeometry extends LatheGeometry {\n\n\tconstructor( radius = 1, length = 1, capSegments = 4, radialSegments = 8 ) {\n\n\t\tconst path = new Path();\n\t\tpath.absarc( 0, - length / 2, radius, Math.PI * 1.5, 0 );\n\t\tpath.absarc( 0, length / 2, radius, 0, Math.PI * 0.5 );\n\n\t\tsuper( path.getPoints( capSegments ), radialSegments );\n\n\t\tthis.type = 'CapsuleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tlength: length,\n\t\t\tcapSegments: capSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CapsuleGeometry( data.radius, data.length, data.capSegments, data.radialSegments );\n\n\t}\n\n}\n\nclass CircleGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, segments = 32, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tsegments = Math.max( 3, segments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( let s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tconst segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CircleGeometry( data.radius, data.segments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass CylinderGeometry extends BufferGeometry {\n\n\tconstructor( radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tconst scope = this;\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\theightSegments = Math.floor( heightSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet index = 0;\n\t\tconst indexArray = [];\n\t\tconst halfHeight = height / 2;\n\t\tlet groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tconst normal = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tconst slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( let y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tconst indexRow = [];\n\n\t\t\t\tconst v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tconst radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tconst u = x / radialSegments;\n\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tconst sinTheta = Math.sin( theta );\n\t\t\t\t\tconst cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( let y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tconst a = indexArray[ y ][ x ];\n\t\t\t\t\tconst b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tconst c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tconst d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\t// save the index of the first center vertex\n\t\t\tconst centerIndexStart = index;\n\n\t\t\tconst uv = new Vector2();\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tlet groupCount = 0;\n\n\t\t\tconst radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tconst sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( let x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\t\t\tconst centerIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( let x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tconst u = x / radialSegments;\n\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\n\t\t\t\tconst cosTheta = Math.cos( theta );\n\t\t\t\tconst sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( let x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new CylinderGeometry( data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 32, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass PolyhedronGeometry extends BufferGeometry {\n\n\tconstructor( vertices = [], indices = [], radius = 1, detail = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\t// default buffer data\n\n\t\tconst vertexBuffer = [];\n\t\tconst uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivision with the given detail value\n\n\t\t\tfor ( let i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tconst cols = detail + 1;\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tconst v = [];\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( let i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tconst aj = a.clone().lerp( c, i / cols );\n\t\t\t\tconst bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tconst rows = cols - i;\n\n\t\t\t\tfor ( let j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( let i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tconst k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tfor ( let i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tconst u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tconst v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( let i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tconst x0 = uvBuffer[ i + 0 ];\n\t\t\t\tconst x1 = uvBuffer[ i + 2 ];\n\t\t\t\tconst x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tconst max = Math.max( x0, x1, x2 );\n\t\t\t\tconst min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tconst stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tconst a = new Vector3();\n\t\t\tconst b = new Vector3();\n\t\t\tconst c = new Vector3();\n\n\t\t\tconst centroid = new Vector3();\n\n\t\t\tconst uvA = new Vector2();\n\t\t\tconst uvB = new Vector2();\n\t\t\tconst uvC = new Vector2();\n\n\t\t\tfor ( let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tconst azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new PolyhedronGeometry( data.vertices, data.indices, data.radius, data.details );\n\n\t}\n\n}\n\nclass DodecahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tconst r = 1 / t;\n\n\t\tconst vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t0, - r, - t, 0, - r, t,\n\t\t\t0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\tr, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tconst indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new DodecahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nconst _v0 = /*@__PURE__*/ new Vector3();\nconst _v1$1 = /*@__PURE__*/ new Vector3();\nconst _normal = /*@__PURE__*/ new Vector3();\nconst _triangle = /*@__PURE__*/ new Triangle();\n\nclass EdgesGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null, thresholdAngle = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry,\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow( 10, precisionPoints );\n\t\t\tconst thresholdDot = Math.cos( DEG2RAD * thresholdAngle );\n\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute( 'position' );\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\n\t\t\tconst indexArr = [ 0, 0, 0 ];\n\t\t\tconst vertKeys = [ 'a', 'b', 'c' ];\n\t\t\tconst hashes = new Array( 3 );\n\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\t\t\tfor ( let i = 0; i < indexCount; i += 3 ) {\n\n\t\t\t\tif ( indexAttr ) {\n\n\t\t\t\t\tindexArr[ 0 ] = indexAttr.getX( i );\n\t\t\t\t\tindexArr[ 1 ] = indexAttr.getX( i + 1 );\n\t\t\t\t\tindexArr[ 2 ] = indexAttr.getX( i + 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tindexArr[ 0 ] = i;\n\t\t\t\t\tindexArr[ 1 ] = i + 1;\n\t\t\t\t\tindexArr[ 2 ] = i + 2;\n\n\t\t\t\t}\n\n\t\t\t\tconst { a, b, c } = _triangle;\n\t\t\t\ta.fromBufferAttribute( positionAttr, indexArr[ 0 ] );\n\t\t\t\tb.fromBufferAttribute( positionAttr, indexArr[ 1 ] );\n\t\t\t\tc.fromBufferAttribute( positionAttr, indexArr[ 2 ] );\n\t\t\t\t_triangle.getNormal( _normal );\n\n\t\t\t\t// create hashes for the edge from the vertices\n\t\t\t\thashes[ 0 ] = `${ Math.round( a.x * precision ) },${ Math.round( a.y * precision ) },${ Math.round( a.z * precision ) }`;\n\t\t\t\thashes[ 1 ] = `${ Math.round( b.x * precision ) },${ Math.round( b.y * precision ) },${ Math.round( b.z * precision ) }`;\n\t\t\t\thashes[ 2 ] = `${ Math.round( c.x * precision ) },${ Math.round( c.y * precision ) },${ Math.round( c.z * precision ) }`;\n\n\t\t\t\t// skip degenerate triangles\n\t\t\t\tif ( hashes[ 0 ] === hashes[ 1 ] || hashes[ 1 ] === hashes[ 2 ] || hashes[ 2 ] === hashes[ 0 ] ) {\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// iterate over every edge\n\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = ( j + 1 ) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[ j ];\n\t\t\t\t\tconst vecHash1 = hashes[ jNext ];\n\t\t\t\t\tconst v0 = _triangle[ vertKeys[ j ] ];\n\t\t\t\t\tconst v1 = _triangle[ vertKeys[ jNext ] ];\n\n\t\t\t\t\tconst hash = `${ vecHash0 }_${ vecHash1 }`;\n\t\t\t\t\tconst reverseHash = `${ vecHash1 }_${ vecHash0 }`;\n\n\t\t\t\t\tif ( reverseHash in edgeData && edgeData[ reverseHash ] ) {\n\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif ( _normal.dot( edgeData[ reverseHash ].normal ) <= thresholdDot ) {\n\n\t\t\t\t\t\t\tvertices.push( v0.x, v0.y, v0.z );\n\t\t\t\t\t\t\tvertices.push( v1.x, v1.y, v1.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[ reverseHash ] = null;\n\n\t\t\t\t\t} else if ( ! ( hash in edgeData ) ) {\n\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[ hash ] = {\n\n\t\t\t\t\t\t\tindex0: indexArr[ j ],\n\t\t\t\t\t\t\tindex1: indexArr[ jNext ],\n\t\t\t\t\t\t\tnormal: _normal.clone(),\n\n\t\t\t\t\t\t};\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// iterate over all remaining, unmatched edges and add them to the vertex array\n\t\t\tfor ( const key in edgeData ) {\n\n\t\t\t\tif ( edgeData[ key ] ) {\n\n\t\t\t\t\tconst { index0, index1 } = edgeData[ key ];\n\t\t\t\t\t_v0.fromBufferAttribute( positionAttr, index0 );\n\t\t\t\t\t_v1$1.fromBufferAttribute( positionAttr, index1 );\n\n\t\t\t\t\tvertices.push( _v0.x, _v0.y, _v0.z );\n\t\t\t\t\tvertices.push( _v1$1.x, _v1$1.y, _v1$1.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n/**\n * Port from https://github.com/mapbox/earcut (v2.2.4)\n */\n\nconst Earcut = {\n\n\ttriangulate: function ( data, holeIndices, dim = 2 ) {\n\n\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\tconst outerLen = hasHoles ? holeIndices[ 0 ] * dim : data.length;\n\t\tlet outerNode = linkedList( data, 0, outerLen, dim, true );\n\t\tconst triangles = [];\n\n\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) return triangles;\n\n\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\n\t\tif ( hasHoles ) outerNode = eliminateHoles( data, holeIndices, outerNode, dim );\n\n\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\tif ( data.length > 80 * dim ) {\n\n\t\t\tminX = maxX = data[ 0 ];\n\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\tfor ( let i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\tx = data[ i ];\n\t\t\t\ty = data[ i + 1 ];\n\t\t\t\tif ( x < minX ) minX = x;\n\t\t\t\tif ( y < minY ) minY = y;\n\t\t\t\tif ( x > maxX ) maxX = x;\n\t\t\t\tif ( y > maxY ) maxY = y;\n\n\t\t\t}\n\n\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\tinvSize = invSize !== 0 ? 32767 / invSize : 0;\n\n\t\t}\n\n\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize, 0 );\n\n\t\treturn triangles;\n\n\t}\n\n};\n\n// create a circular doubly linked list from polygon points in the specified winding order\nfunction linkedList( data, start, end, dim, clockwise ) {\n\n\tlet i, last;\n\n\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\tfor ( i = start; i < end; i += dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t} else {\n\n\t\tfor ( i = end - dim; i >= start; i -= dim ) last = insertNode( i, data[ i ], data[ i + 1 ], last );\n\n\t}\n\n\tif ( last && equals( last, last.next ) ) {\n\n\t\tremoveNode( last );\n\t\tlast = last.next;\n\n\t}\n\n\treturn last;\n\n}\n\n// eliminate colinear or duplicate points\nfunction filterPoints( start, end ) {\n\n\tif ( ! start ) return start;\n\tif ( ! end ) end = start;\n\n\tlet p = start,\n\t\tagain;\n\tdo {\n\n\t\tagain = false;\n\n\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\tremoveNode( p );\n\t\t\tp = end = p.prev;\n\t\t\tif ( p === p.next ) break;\n\t\t\tagain = true;\n\n\t\t} else {\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t} while ( again || p !== end );\n\n\treturn end;\n\n}\n\n// main ear slicing loop which triangulates a polygon (given as a linked list)\nfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\tif ( ! ear ) return;\n\n\t// interlink polygon nodes in z-order\n\tif ( ! pass && invSize ) indexCurve( ear, minX, minY, invSize );\n\n\tlet stop = ear,\n\t\tprev, next;\n\n\t// iterate through ears, slicing them one by one\n\twhile ( ear.prev !== ear.next ) {\n\n\t\tprev = ear.prev;\n\t\tnext = ear.next;\n\n\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t// cut off the triangle\n\t\t\ttriangles.push( prev.i / dim | 0 );\n\t\t\ttriangles.push( ear.i / dim | 0 );\n\t\t\ttriangles.push( next.i / dim | 0 );\n\n\t\t\tremoveNode( ear );\n\n\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\tear = next.next;\n\t\t\tstop = next.next;\n\n\t\t\tcontinue;\n\n\t\t}\n\n\t\tear = next;\n\n\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\tif ( ear === stop ) {\n\n\t\t\t// try filtering points and slicing again\n\t\t\tif ( ! pass ) {\n\n\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\tear = cureLocalIntersections( filterPoints( ear ), triangles, dim );\n\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t}\n\n\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n}\n\n// check whether a polygon node forms a valid ear with adjacent nodes\nfunction isEar( ear ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\t// now make sure we don't have other points inside the potential ear\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\tlet p = c.next;\n\twhile ( p !== a ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) &&\n\t\t\tarea( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.next;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\tconst a = ear.prev,\n\t\tb = ear,\n\t\tc = ear.next;\n\n\tif ( area( a, b, c ) >= 0 ) return false; // reflex, can't be an ear\n\n\tconst ax = a.x, bx = b.x, cx = c.x, ay = a.y, by = b.y, cy = c.y;\n\n\t// triangle bbox; min & max are calculated like this for speed\n\tconst x0 = ax < bx ? ( ax < cx ? ax : cx ) : ( bx < cx ? bx : cx ),\n\t\ty0 = ay < by ? ( ay < cy ? ay : cy ) : ( by < cy ? by : cy ),\n\t\tx1 = ax > bx ? ( ax > cx ? ax : cx ) : ( bx > cx ? bx : cx ),\n\t\ty1 = ay > by ? ( ay > cy ? ay : cy ) : ( by > cy ? by : cy );\n\n\t// z-order range for the current triangle bbox;\n\tconst minZ = zOrder( x0, y0, minX, minY, invSize ),\n\t\tmaxZ = zOrder( x1, y1, minX, minY, invSize );\n\n\tlet p = ear.prevZ,\n\t\tn = ear.nextZ;\n\n\t// look for points inside the triangle in both directions\n\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\t// look for remaining points in decreasing z-order\n\twhile ( p && p.z >= minZ ) {\n\n\t\tif ( p.x >= x0 && p.x <= x1 && p.y >= y0 && p.y <= y1 && p !== a && p !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, p.x, p.y ) && area( p.prev, p, p.next ) >= 0 ) return false;\n\t\tp = p.prevZ;\n\n\t}\n\n\t// look for remaining points in increasing z-order\n\twhile ( n && n.z <= maxZ ) {\n\n\t\tif ( n.x >= x0 && n.x <= x1 && n.y >= y0 && n.y <= y1 && n !== a && n !== c &&\n\t\t\tpointInTriangle( ax, ay, bx, by, cx, cy, n.x, n.y ) && area( n.prev, n, n.next ) >= 0 ) return false;\n\t\tn = n.nextZ;\n\n\t}\n\n\treturn true;\n\n}\n\n// go through all polygon nodes and cure small local self-intersections\nfunction cureLocalIntersections( start, triangles, dim ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tconst a = p.prev,\n\t\t\tb = p.next.next;\n\n\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\ttriangles.push( a.i / dim | 0 );\n\t\t\ttriangles.push( p.i / dim | 0 );\n\t\t\ttriangles.push( b.i / dim | 0 );\n\n\t\t\t// remove two nodes involved\n\t\t\tremoveNode( p );\n\t\t\tremoveNode( p.next );\n\n\t\t\tp = start = b;\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn filterPoints( p );\n\n}\n\n// try splitting polygon into two and triangulate them independently\nfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t// look for a valid diagonal that divides the polygon into two\n\tlet a = start;\n\tdo {\n\n\t\tlet b = a.next.next;\n\t\twhile ( b !== a.prev ) {\n\n\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\tlet c = splitPolygon( a, b );\n\n\t\t\t\t// filter colinear points around the cuts\n\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t// run earcut on each half\n\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize, 0 );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tb = b.next;\n\n\t\t}\n\n\t\ta = a.next;\n\n\t} while ( a !== start );\n\n}\n\n// link every hole into the outer loop, producing a single-ring polygon without holes\nfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\tconst queue = [];\n\tlet i, len, start, end, list;\n\n\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\tstart = holeIndices[ i ] * dim;\n\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\tlist = linkedList( data, start, end, dim, false );\n\t\tif ( list === list.next ) list.steiner = true;\n\t\tqueue.push( getLeftmost( list ) );\n\n\t}\n\n\tqueue.sort( compareX );\n\n\t// process holes from left to right\n\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\touterNode = eliminateHole( queue[ i ], outerNode );\n\n\t}\n\n\treturn outerNode;\n\n}\n\nfunction compareX( a, b ) {\n\n\treturn a.x - b.x;\n\n}\n\n// find a bridge between vertices that connects hole with an outer ring and link it\nfunction eliminateHole( hole, outerNode ) {\n\n\tconst bridge = findHoleBridge( hole, outerNode );\n\tif ( ! bridge ) {\n\n\t\treturn outerNode;\n\n\t}\n\n\tconst bridgeReverse = splitPolygon( bridge, hole );\n\n\t// filter collinear points around the cuts\n\tfilterPoints( bridgeReverse, bridgeReverse.next );\n\treturn filterPoints( bridge, bridge.next );\n\n}\n\n// David Eberly's algorithm for finding a bridge between hole and outer polygon\nfunction findHoleBridge( hole, outerNode ) {\n\n\tlet p = outerNode,\n\t\tqx = - Infinity,\n\t\tm;\n\n\tconst hx = hole.x, hy = hole.y;\n\n\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t// segment's endpoint with lesser x will be potential connection point\n\tdo {\n\n\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\tconst x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\tqx = x;\n\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\tif ( x === hx ) return m; // hole touches outer segment; pick leftmost endpoint\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== outerNode );\n\n\tif ( ! m ) return null;\n\n\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t// if there are no points found, we have a valid connection;\n\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\tconst stop = m,\n\t\tmx = m.x,\n\t\tmy = m.y;\n\tlet tanMin = Infinity, tan;\n\n\tp = m;\n\n\tdo {\n\n\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\tif ( locallyInside( p, hole ) && ( tan < tanMin || ( tan === tanMin && ( p.x > m.x || ( p.x === m.x && sectorContainsSector( m, p ) ) ) ) ) ) {\n\n\t\t\t\tm = p;\n\t\t\t\ttanMin = tan;\n\n\t\t\t}\n\n\t\t}\n\n\t\tp = p.next;\n\n\t} while ( p !== stop );\n\n\treturn m;\n\n}\n\n// whether sector in vertex m contains sector in vertex p in the same coordinates\nfunction sectorContainsSector( m, p ) {\n\n\treturn area( m.prev, m, p.prev ) < 0 && area( p.next, m, m.next ) < 0;\n\n}\n\n// interlink polygon nodes in z-order\nfunction indexCurve( start, minX, minY, invSize ) {\n\n\tlet p = start;\n\tdo {\n\n\t\tif ( p.z === 0 ) p.z = zOrder( p.x, p.y, minX, minY, invSize );\n\t\tp.prevZ = p.prev;\n\t\tp.nextZ = p.next;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\tp.prevZ.nextZ = null;\n\tp.prevZ = null;\n\n\tsortLinked( p );\n\n}\n\n// Simon Tatham's linked list merge sort algorithm\n// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\nfunction sortLinked( list ) {\n\n\tlet i, p, q, e, tail, numMerges, pSize, qSize,\n\t\tinSize = 1;\n\n\tdo {\n\n\t\tp = list;\n\t\tlist = null;\n\t\ttail = null;\n\t\tnumMerges = 0;\n\n\t\twhile ( p ) {\n\n\t\t\tnumMerges ++;\n\t\t\tq = p;\n\t\t\tpSize = 0;\n\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\tpSize ++;\n\t\t\t\tq = q.nextZ;\n\t\t\t\tif ( ! q ) break;\n\n\t\t\t}\n\n\t\t\tqSize = inSize;\n\n\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\te = p;\n\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\tpSize --;\n\n\t\t\t\t} else {\n\n\t\t\t\t\te = q;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tqSize --;\n\n\t\t\t\t}\n\n\t\t\t\tif ( tail ) tail.nextZ = e;\n\t\t\t\telse list = e;\n\n\t\t\t\te.prevZ = tail;\n\t\t\t\ttail = e;\n\n\t\t\t}\n\n\t\t\tp = q;\n\n\t\t}\n\n\t\ttail.nextZ = null;\n\t\tinSize *= 2;\n\n\t} while ( numMerges > 1 );\n\n\treturn list;\n\n}\n\n// z-order of a point given coords and inverse of the longer side of data bbox\nfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t// coords are transformed into non-negative 15-bit integer range\n\tx = ( x - minX ) * invSize | 0;\n\ty = ( y - minY ) * invSize | 0;\n\n\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\treturn x | ( y << 1 );\n\n}\n\n// find the leftmost node of a polygon ring\nfunction getLeftmost( start ) {\n\n\tlet p = start,\n\t\tleftmost = start;\n\tdo {\n\n\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) leftmost = p;\n\t\tp = p.next;\n\n\t} while ( p !== start );\n\n\treturn leftmost;\n\n}\n\n// check if a point lies within a convex triangle\nfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\treturn ( cx - px ) * ( ay - py ) >= ( ax - px ) * ( cy - py ) &&\n           ( ax - px ) * ( by - py ) >= ( bx - px ) * ( ay - py ) &&\n           ( bx - px ) * ( cy - py ) >= ( cx - px ) * ( by - py );\n\n}\n\n// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\nfunction isValidDiagonal( a, b ) {\n\n\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) && // dones't intersect other edges\n           ( locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b ) && // locally visible\n            ( area( a.prev, a, b.prev ) || area( a, b.prev, b ) ) || // does not create opposite-facing sectors\n            equals( a, b ) && area( a.prev, a, a.next ) > 0 && area( b.prev, b, b.next ) > 0 ); // special zero-length case\n\n}\n\n// signed area of a triangle\nfunction area( p, q, r ) {\n\n\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n}\n\n// check if two points are equal\nfunction equals( p1, p2 ) {\n\n\treturn p1.x === p2.x && p1.y === p2.y;\n\n}\n\n// check if two segments intersect\nfunction intersects( p1, q1, p2, q2 ) {\n\n\tconst o1 = sign( area( p1, q1, p2 ) );\n\tconst o2 = sign( area( p1, q1, q2 ) );\n\tconst o3 = sign( area( p2, q2, p1 ) );\n\tconst o4 = sign( area( p2, q2, q1 ) );\n\n\tif ( o1 !== o2 && o3 !== o4 ) return true; // general case\n\n\tif ( o1 === 0 && onSegment( p1, p2, q1 ) ) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\tif ( o2 === 0 && onSegment( p1, q2, q1 ) ) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\tif ( o3 === 0 && onSegment( p2, p1, q2 ) ) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\tif ( o4 === 0 && onSegment( p2, q1, q2 ) ) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\treturn false;\n\n}\n\n// for collinear points p, q, r, check if point q lies on segment pr\nfunction onSegment( p, q, r ) {\n\n\treturn q.x <= Math.max( p.x, r.x ) && q.x >= Math.min( p.x, r.x ) && q.y <= Math.max( p.y, r.y ) && q.y >= Math.min( p.y, r.y );\n\n}\n\nfunction sign( num ) {\n\n\treturn num > 0 ? 1 : num < 0 ? - 1 : 0;\n\n}\n\n// check if a polygon diagonal intersects any polygon segments\nfunction intersectsPolygon( a, b ) {\n\n\tlet p = a;\n\tdo {\n\n\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\tintersects( p, p.next, a, b ) ) return true;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn false;\n\n}\n\n// check if a polygon diagonal is locally inside the polygon\nfunction locallyInside( a, b ) {\n\n\treturn area( a.prev, a, a.next ) < 0 ?\n\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n}\n\n// check if the middle point of a polygon diagonal is inside the polygon\nfunction middleInside( a, b ) {\n\n\tlet p = a,\n\t\tinside = false;\n\tconst px = ( a.x + b.x ) / 2,\n\t\tpy = ( a.y + b.y ) / 2;\n\tdo {\n\n\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\tinside = ! inside;\n\t\tp = p.next;\n\n\t} while ( p !== a );\n\n\treturn inside;\n\n}\n\n// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n// if one belongs to the outer ring and another to a hole, it merges it into a single ring\nfunction splitPolygon( a, b ) {\n\n\tconst a2 = new Node( a.i, a.x, a.y ),\n\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\tan = a.next,\n\t\tbp = b.prev;\n\n\ta.next = b;\n\tb.prev = a;\n\n\ta2.next = an;\n\tan.prev = a2;\n\n\tb2.next = a2;\n\ta2.prev = b2;\n\n\tbp.next = b2;\n\tb2.prev = bp;\n\n\treturn b2;\n\n}\n\n// create a node and optionally link it with previous one (in a circular doubly linked list)\nfunction insertNode( i, x, y, last ) {\n\n\tconst p = new Node( i, x, y );\n\n\tif ( ! last ) {\n\n\t\tp.prev = p;\n\t\tp.next = p;\n\n\t} else {\n\n\t\tp.next = last.next;\n\t\tp.prev = last;\n\t\tlast.next.prev = p;\n\t\tlast.next = p;\n\n\t}\n\n\treturn p;\n\n}\n\nfunction removeNode( p ) {\n\n\tp.next.prev = p.prev;\n\tp.prev.next = p.next;\n\n\tif ( p.prevZ ) p.prevZ.nextZ = p.nextZ;\n\tif ( p.nextZ ) p.nextZ.prevZ = p.prevZ;\n\n}\n\nfunction Node( i, x, y ) {\n\n\t// vertex index in coordinates array\n\tthis.i = i;\n\n\t// vertex coordinates\n\tthis.x = x;\n\tthis.y = y;\n\n\t// previous and next vertex nodes in a polygon ring\n\tthis.prev = null;\n\tthis.next = null;\n\n\t// z-order curve value\n\tthis.z = 0;\n\n\t// previous and next nodes in z-order\n\tthis.prevZ = null;\n\tthis.nextZ = null;\n\n\t// indicates whether this is a steiner point\n\tthis.steiner = false;\n\n}\n\nfunction signedArea( data, start, end, dim ) {\n\n\tlet sum = 0;\n\tfor ( let i = start, j = end - dim; i < end; i += dim ) {\n\n\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\tj = i;\n\n\t}\n\n\treturn sum;\n\n}\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\n/**\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  depth: <float>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n *  bevelOffset: <float>, // how far from shape outline does bevel start\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n\nclass ExtrudeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0.5, 0.5 ), new Vector2( - 0.5, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), options = {} ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tconst scope = this;\n\n\t\tconst verticesArray = [];\n\t\tconst uvArray = [];\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst placeholder = [];\n\n\t\t\t// options\n\n\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tconst depth = options.depth !== undefined ? options.depth : 1;\n\n\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 0.2;\n\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 0.1;\n\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tconst extrudePath = options.extrudePath;\n\n\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t//\n\n\t\t\tlet extrudePts, extrudeByPath = false;\n\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tconst shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tlet vertices = shapePoints.shape;\n\t\t\tconst holes = shapePoints.holes;\n\n\t\t\tconst reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) console.error( 'THREE.ExtrudeGeometry: vec does not exist' );\n\n\t\t\t\treturn pt.clone().addScaledVector( vec, size );\n\n\t\t\t}\n\n\t\t\tconst vlen = vertices.length, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tconst v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tconst collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tconst v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tconst v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tconst ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tconst ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tconst ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tconst ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tconst sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tconst v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tconst contourMovements = [];\n\n\t\t\tfor ( let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tconst holesMovements = [];\n\t\t\tlet oneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tconst ahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) j = 0;\n\t\t\t\t\tif ( k === il ) k = 0;\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( let b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst bs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tfor ( let s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( let i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( let b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\tconst z = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tconst bs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( let i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst vert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( let i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tconst vert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tlet layer = 0; // steps + 1\n\t\t\t\t\tlet offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( let i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tconst face = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\tlet layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( let h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tconst ahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tlet i = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tconst j = i;\n\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tfor ( let s = 0, sl = ( steps + bevelSegments * 2 ); s < sl; s ++ ) {\n\n\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\tconst slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\tconst uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\t\tconst options = this.parameters.options;\n\n\t\treturn toJSON$1( shapes, options, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\tconst extrudePath = data.options.extrudePath;\n\n\t\tif ( extrudePath !== undefined ) {\n\n\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t}\n\n\t\treturn new ExtrudeGeometry( geometryShapes, data.options );\n\n\t}\n\n}\n\nconst WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tconst a_x = vertices[ indexA * 3 ];\n\t\tconst a_y = vertices[ indexA * 3 + 1 ];\n\t\tconst a_z = vertices[ indexA * 3 + 2 ];\n\t\tconst b_x = vertices[ indexB * 3 ];\n\t\tconst b_y = vertices[ indexB * 3 + 1 ];\n\t\tconst b_z = vertices[ indexB * 3 + 2 ];\n\t\tconst c_x = vertices[ indexC * 3 ];\n\t\tconst c_y = vertices[ indexC * 3 + 1 ];\n\t\tconst c_z = vertices[ indexC * 3 + 2 ];\n\t\tconst d_x = vertices[ indexD * 3 ];\n\t\tconst d_y = vertices[ indexD * 3 + 1 ];\n\t\tconst d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < Math.abs( a_x - b_x ) ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n\n};\n\nfunction toJSON$1( shapes, options, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\tdata.options = Object.assign( {}, options );\n\n\tif ( options.extrudePath !== undefined ) data.options.extrudePath = options.extrudePath.toJSON();\n\n\treturn data;\n\n}\n\nclass IcosahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tconst vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\tt, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new IcosahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass OctahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new OctahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass RingGeometry extends BufferGeometry {\n\n\tconstructor( innerRadius = 0.5, outerRadius = 1, thetaSegments = 32, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthetaSegments = Math.max( 3, thetaSegments );\n\t\tphiSegments = Math.max( 1, phiSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// some helper variables\n\n\t\tlet radius = innerRadius;\n\t\tconst radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tconst vertex = new Vector3();\n\t\tconst uv = new Vector2();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tconst thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( let i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tconst segment = i + thetaSegmentLevel;\n\n\t\t\t\tconst a = segment;\n\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\tconst d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new RingGeometry( data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass ShapeGeometry extends BufferGeometry {\n\n\tconstructor( shapes = new Shape( [ new Vector2( 0, 0.5 ), new Vector2( - 0.5, - 0.5 ), new Vector2( 0.5, - 0.5 ) ] ), curveSegments = 12 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tlet groupStart = 0;\n\t\tlet groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( let i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\tconst points = shape.extractPoints( curveSegments );\n\n\t\t\tlet shapeVertices = points.shape;\n\t\t\tconst shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( let i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tconst shapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( let i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tconst vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// indices\n\n\t\t\tfor ( let i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tconst face = faces[ i ];\n\n\t\t\t\tconst a = face[ 0 ] + indexOffset;\n\t\t\t\tconst b = face[ 1 ] + indexOffset;\n\t\t\t\tconst c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tconst shapes = this.parameters.shapes;\n\n\t\treturn toJSON( shapes, data );\n\n\t}\n\n\tstatic fromJSON( data, shapes ) {\n\n\t\tconst geometryShapes = [];\n\n\t\tfor ( let j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\tconst shape = shapes[ data.shapes[ j ] ];\n\n\t\t\tgeometryShapes.push( shape );\n\n\t\t}\n\n\t\treturn new ShapeGeometry( geometryShapes, data.curveSegments );\n\n\t}\n\n}\n\nfunction toJSON( shapes, data ) {\n\n\tdata.shapes = [];\n\n\tif ( Array.isArray( shapes ) ) {\n\n\t\tfor ( let i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tconst shape = shapes[ i ];\n\n\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t}\n\n\t} else {\n\n\t\tdata.shapes.push( shapes.uuid );\n\n\t}\n\n\treturn data;\n\n}\n\nclass SphereGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, widthSegments = 32, heightSegments = 16, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) );\n\n\t\tconst thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tlet index = 0;\n\t\tconst grid = [];\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tconst verticesRow = [];\n\n\t\t\tconst v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tlet uOffset = 0;\n\n\t\t\tif ( iy === 0 && thetaStart === 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy === heightSegments && thetaEnd === Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( let ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tconst u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( let iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( let ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tconst a = grid[ iy ][ ix + 1 ];\n\t\t\t\tconst b = grid[ iy ][ ix ];\n\t\t\t\tconst c = grid[ iy + 1 ][ ix ];\n\t\t\t\tconst d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new SphereGeometry( data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nclass TetrahedronGeometry extends PolyhedronGeometry {\n\n\tconstructor( radius = 1, detail = 0 ) {\n\n\t\tconst vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tconst indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tsuper( vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TetrahedronGeometry( data.radius, data.detail );\n\n\t}\n\n}\n\nclass TorusGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, radialSegments = 12, tubularSegments = 48, arc = Math.PI * 2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradialSegments = Math.floor( radialSegments );\n\t\ttubularSegments = Math.floor( tubularSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst center = new Vector3();\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tconst b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tconst c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tconst d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusGeometry( data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc );\n\n\t}\n\n}\n\nclass TorusKnotGeometry extends BufferGeometry {\n\n\tconstructor( radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\ttubularSegments = Math.floor( tubularSegments );\n\t\tradialSegments = Math.floor( radialSegments );\n\n\t\t// buffers\n\n\t\tconst indices = [];\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\n\t\tconst P1 = new Vector3();\n\t\tconst P2 = new Vector3();\n\n\t\tconst B = new Vector3();\n\t\tconst T = new Vector3();\n\t\tconst N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( let i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segment\n\n\t\t\tconst u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( let j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\tconst cx = - tube * Math.cos( v );\n\t\t\t\tconst cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectors, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tconst cu = Math.cos( u );\n\t\t\tconst su = Math.sin( u );\n\t\t\tconst quOverP = q / p * u;\n\t\t\tconst cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new TorusKnotGeometry( data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q );\n\n\t}\n\n}\n\nclass TubeGeometry extends BufferGeometry {\n\n\tconstructor( path = new QuadraticBezierCurve3( new Vector3( - 1, - 1, 0 ), new Vector3( - 1, 1, 0 ), new Vector3( 1, 1, 0 ) ), tubularSegments = 64, radius = 1, radialSegments = 8, closed = false ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tconst frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tconst vertex = new Vector3();\n\t\tconst normal = new Vector3();\n\t\tconst uv = new Vector2();\n\t\tlet P = new Vector3();\n\n\t\t// buffer\n\n\t\tconst vertices = [];\n\t\tconst normals = [];\n\t\tconst uvs = [];\n\t\tconst indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( let i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tconst N = frames.normals[ i ];\n\t\t\tconst B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tconst sin = Math.sin( v );\n\t\t\t\tconst cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( let j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( let i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tconst a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tconst b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tconst c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tconst d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( let i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( let j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\treturn new TubeGeometry(\n\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\tdata.tubularSegments,\n\t\t\tdata.radius,\n\t\t\tdata.radialSegments,\n\t\t\tdata.closed\n\t\t);\n\n\t}\n\n}\n\nclass WireframeGeometry extends BufferGeometry {\n\n\tconstructor( geometry = null ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tgeometry: geometry\n\t\t};\n\n\t\tif ( geometry !== null ) {\n\n\t\t\t// buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst edges = new Set();\n\n\t\t\t// helper variables\n\n\t\t\tconst start = new Vector3();\n\t\t\tconst end = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\t\tfor ( let o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tconst group = groups[ o ];\n\n\t\t\t\t\tconst groupStart = group.start;\n\t\t\t\t\tconst groupCount = group.count;\n\n\t\t\t\t\tfor ( let i = groupStart, l = ( groupStart + groupCount ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tconst index1 = indices.getX( i + j );\n\t\t\t\t\t\t\tconst index2 = indices.getX( i + ( j + 1 ) % 3 );\n\n\t\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor ( let i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( let j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tconst index2 = 3 * i + ( ( j + 1 ) % 3 );\n\n\t\t\t\t\t\tstart.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tend.fromBufferAttribute( position, index2 );\n\n\t\t\t\t\t\tif ( isUniqueEdge( start, end, edges ) === true ) {\n\n\t\t\t\t\t\t\tvertices.push( start.x, start.y, start.z );\n\t\t\t\t\t\t\tvertices.push( end.x, end.y, end.z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build geometry\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.parameters = Object.assign( {}, source.parameters );\n\n\t\treturn this;\n\n\t}\n\n}\n\nfunction isUniqueEdge( start, end, edges ) {\n\n\tconst hash1 = `${start.x},${start.y},${start.z}-${end.x},${end.y},${end.z}`;\n\tconst hash2 = `${end.x},${end.y},${end.z}-${start.x},${start.y},${start.z}`; // coincident edge\n\n\tif ( edges.has( hash1 ) === true || edges.has( hash2 ) === true ) {\n\n\t\treturn false;\n\n\t} else {\n\n\t\tedges.add( hash1 );\n\t\tedges.add( hash2 );\n\t\treturn true;\n\n\t}\n\n}\n\nvar Geometries = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tBoxGeometry: BoxGeometry,\n\tCapsuleGeometry: CapsuleGeometry,\n\tCircleGeometry: CircleGeometry,\n\tConeGeometry: ConeGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tLatheGeometry: LatheGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tRingGeometry: RingGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tSphereGeometry: SphereGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTubeGeometry: TubeGeometry,\n\tWireframeGeometry: WireframeGeometry\n});\n\nclass ShadowMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isShadowMaterial = true;\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass RawShaderMaterial extends ShaderMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper( parameters );\n\n\t\tthis.isRawShaderMaterial = true;\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n}\n\nclass MeshStandardMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshStandardMaterial = true;\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 1.0;\n\t\tthis.metalness = 0.0;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.anisotropyRotation = 0;\n\t\tthis.anisotropyMap = null;\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._anisotropy = 0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._sheen = 0.0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget anisotropy() {\n\n\t\treturn this._anisotropy;\n\n\t}\n\n\tset anisotropy( value ) {\n\n\t\tif ( this._anisotropy > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._anisotropy = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.anisotropy = source.anisotropy;\n\t\tthis.anisotropyRotation = source.anisotropyRotation;\n\t\tthis.anisotropyMap = source.anisotropyMap;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshPhongMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhongMaterial = true;\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshToonMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshToonMaterial = true;\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\t\tthis.gradientMap = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshNormalMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshNormalMaterial = true;\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshLambertMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshLambertMaterial = true;\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass LineDashedMaterial extends LineBasicMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isLineDashedMaterial = true;\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t}\n\n}\n\n// converts an array to a specific type\nfunction convertArray( array, type, forceClone ) {\n\n\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t! forceClone && array.constructor === type ) return array;\n\n\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\treturn new type( array ); // create typed array\n\n\t}\n\n\treturn Array.prototype.slice.call( array ); // create Array\n\n}\n\nfunction isTypedArray( object ) {\n\n\treturn ArrayBuffer.isView( object ) &&\n\t\t! ( object instanceof DataView );\n\n}\n\n// returns an array by which times and values can be sorted\nfunction getKeyframeOrder( times ) {\n\n\tfunction compareTime( i, j ) {\n\n\t\treturn times[ i ] - times[ j ];\n\n\t}\n\n\tconst n = times.length;\n\tconst result = new Array( n );\n\tfor ( let i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\tresult.sort( compareTime );\n\n\treturn result;\n\n}\n\n// uses the array previously returned by 'getKeyframeOrder' to sort data\nfunction sortedArray( values, stride, order ) {\n\n\tconst nValues = values.length;\n\tconst result = new values.constructor( nValues );\n\n\tfor ( let i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\tconst srcOffset = order[ i ] * stride;\n\n\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t}\n\n\t}\n\n\treturn result;\n\n}\n\n// function for parsing AOS keyframe formats\nfunction flattenJSON( jsonKeys, times, values, valuePropertyName ) {\n\n\tlet i = 1, key = jsonKeys[ 0 ];\n\n\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\tkey = jsonKeys[ i ++ ];\n\n\t}\n\n\tif ( key === undefined ) return; // no data\n\n\tlet value = key[ valuePropertyName ];\n\tif ( value === undefined ) return; // no data\n\n\tif ( Array.isArray( value ) ) {\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else if ( value.toArray !== undefined ) {\n\n\t\t// ...assume THREE.Math-ish\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t} else {\n\n\t\t// otherwise push as-is\n\n\t\tdo {\n\n\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\tif ( value !== undefined ) {\n\n\t\t\t\ttimes.push( key.time );\n\t\t\t\tvalues.push( value );\n\n\t\t\t}\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t} while ( key !== undefined );\n\n\t}\n\n}\n\nfunction subclip( sourceClip, name, startFrame, endFrame, fps = 30 ) {\n\n\tconst clip = sourceClip.clone();\n\n\tclip.name = name;\n\n\tconst tracks = [];\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tconst track = clip.tracks[ i ];\n\t\tconst valueSize = track.getValueSize();\n\n\t\tconst times = [];\n\t\tconst values = [];\n\n\t\tfor ( let j = 0; j < track.times.length; ++ j ) {\n\n\t\t\tconst frame = track.times[ j ] * fps;\n\n\t\t\tif ( frame < startFrame || frame >= endFrame ) continue;\n\n\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\tfor ( let k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( times.length === 0 ) continue;\n\n\t\ttrack.times = convertArray( times, track.times.constructor );\n\t\ttrack.values = convertArray( values, track.values.constructor );\n\n\t\ttracks.push( track );\n\n\t}\n\n\tclip.tracks = tracks;\n\n\t// find minimum .times value across all tracks in the trimmed clip\n\n\tlet minStartTime = Infinity;\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t}\n\n\t}\n\n\t// shift all tracks such that clip begins at t=0\n\n\tfor ( let i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t}\n\n\tclip.resetDuration();\n\n\treturn clip;\n\n}\n\nfunction makeClipAdditive( targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30 ) {\n\n\tif ( fps <= 0 ) fps = 30;\n\n\tconst numTracks = referenceClip.tracks.length;\n\tconst referenceTime = referenceFrame / fps;\n\n\t// Make each track's values relative to the values at the reference frame\n\tfor ( let i = 0; i < numTracks; ++ i ) {\n\n\t\tconst referenceTrack = referenceClip.tracks[ i ];\n\t\tconst referenceTrackType = referenceTrack.ValueTypeName;\n\n\t\t// Skip this track if it's non-numeric\n\t\tif ( referenceTrackType === 'bool' || referenceTrackType === 'string' ) continue;\n\n\t\t// Find the track in the target clip whose name and type matches the reference track\n\t\tconst targetTrack = targetClip.tracks.find( function ( track ) {\n\n\t\t\treturn track.name === referenceTrack.name\n\t\t\t\t&& track.ValueTypeName === referenceTrackType;\n\n\t\t} );\n\n\t\tif ( targetTrack === undefined ) continue;\n\n\t\tlet referenceOffset = 0;\n\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\tif ( referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\treferenceOffset = referenceValueSize / 3;\n\n\t\t}\n\n\t\tlet targetOffset = 0;\n\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\tif ( targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline ) {\n\n\t\t\ttargetOffset = targetValueSize / 3;\n\n\t\t}\n\n\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\tlet referenceValue;\n\n\t\t// Find the value to subtract out of the track\n\t\tif ( referenceTime <= referenceTrack.times[ 0 ] ) {\n\n\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else if ( referenceTime >= referenceTrack.times[ lastIndex ] ) {\n\n\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\treferenceValue = referenceTrack.values.slice( startIndex, endIndex );\n\n\t\t} else {\n\n\t\t\t// Interpolate to the reference value\n\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\tconst startIndex = referenceOffset;\n\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\tinterpolant.evaluate( referenceTime );\n\t\t\treferenceValue = interpolant.resultBuffer.slice( startIndex, endIndex );\n\n\t\t}\n\n\t\t// Conjugate the quaternion\n\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\tconst referenceQuat = new Quaternion().fromArray( referenceValue ).normalize().conjugate();\n\t\t\treferenceQuat.toArray( referenceValue );\n\n\t\t}\n\n\t\t// Subtract the reference value from all of the track values\n\n\t\tconst numTimes = targetTrack.times.length;\n\t\tfor ( let j = 0; j < numTimes; ++ j ) {\n\n\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\tif ( referenceTrackType === 'quaternion' ) {\n\n\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\tQuaternion.multiplyQuaternionsFlat(\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart,\n\t\t\t\t\treferenceValue,\n\t\t\t\t\t0,\n\t\t\t\t\ttargetTrack.values,\n\t\t\t\t\tvalueStart\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2;\n\n\t\t\t\t// Subtract each value for all other numeric track types\n\t\t\t\tfor ( let k = 0; k < valueEnd; ++ k ) {\n\n\t\t\t\t\ttargetTrack.values[ valueStart + k ] -= referenceValue[ k ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\n\treturn targetClip;\n\n}\n\nconst AnimationUtils = {\n\tconvertArray: convertArray,\n\tisTypedArray: isTypedArray,\n\tgetKeyframeOrder: getKeyframeOrder,\n\tsortedArray: sortedArray,\n\tflattenJSON: flattenJSON,\n\tsubclip: subclip,\n\tmakeClipAdditive: makeClipAdditive\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n */\n\nclass Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t\tthis.settings = null;\n\t\tthis.DefaultSettings_ = {};\n\n\t}\n\n\tevaluate( t ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet i1 = this._cachedIndex,\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tlet right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tconst t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( let giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tconst mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.copySampleValue_( 0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t}\n\n\tgetSettings_() {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t}\n\n\tcopySampleValue_( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\t// Template methods for derived classes:\n\n\tinterpolate_( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t}\n\n\tintervalChanged_( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n}\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n */\n\nclass CubicInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t\tthis.DefaultSettings_ = {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t};\n\n\t}\n\n\tintervalChanged_( i1, t0, t1 ) {\n\n\t\tconst pp = this.parameterPositions;\n\t\tlet iPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tconst sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tconst s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tconst s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tconst sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\nclass LinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\nclass KeyframeTrack {\n\n\tconstructor( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) throw new Error( 'THREE.KeyframeTrack: track name is undefined' );\n\t\tif ( times === undefined || times.length === 0 ) throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name );\n\n\t\tthis.name = name;\n\n\t\tthis.times = convertArray( times, this.TimeBufferType );\n\t\tthis.values = convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tstatic toJSON( track ) {\n\n\t\tconst trackType = track.constructor;\n\n\t\tlet json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== this.toJSON ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': convertArray( track.times, Array ),\n\t\t\t\t'values': convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t}\n\n\tInterpolantFactoryMethodDiscrete( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tInterpolantFactoryMethodSmooth( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n\tsetInterpolation( interpolation ) {\n\n\t\tlet factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tconst message = 'unsupported interpolation for ' +\n\t\t\t\tthis.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t\treturn this;\n\n\t}\n\n\tgetInterpolation() {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t}\n\n\tgetValueSize() {\n\n\t\treturn this.values.length / this.times.length;\n\n\t}\n\n\t// move all keyframes either forwards or backwards in time\n\tshift( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tconst times = this.times;\n\n\t\t\tfor ( let i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim( startTime, endTime ) {\n\n\t\tconst times = this.times,\n\t\t\tnKeys = times.length;\n\n\t\tlet from = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t++ from;\n\n\t\t}\n\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t-- to;\n\n\t\t}\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) {\n\n\t\t\t\tto = Math.max( to, 1 );\n\t\t\t\tfrom = to - 1;\n\n\t\t\t}\n\n\t\t\tconst stride = this.getValueSize();\n\t\t\tthis.times = times.slice( from, to );\n\t\t\tthis.values = this.values.slice( from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tconst valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tconst times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tlet prevTime = null;\n\n\t\tfor ( let i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tconst currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( isTypedArray( values ) ) {\n\n\t\t\t\tfor ( let i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tconst value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize() {\n\n\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\tconst times = this.times.slice(),\n\t\t\tvalues = this.values.slice(),\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\tlastIndex = times.length - 1;\n\n\t\tlet writeIndex = 1;\n\n\t\tfor ( let i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tlet keep = false;\n\n\t\t\tconst time = times[ i ];\n\t\t\tconst timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== times[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tconst value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tkeep = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( let j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t}\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = times.slice( 0, writeIndex );\n\t\t\tthis.values = values.slice( 0, writeIndex * stride );\n\n\t\t} else {\n\n\t\t\tthis.times = times;\n\t\t\tthis.values = values;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst times = this.times.slice();\n\t\tconst values = this.values.slice();\n\n\t\tconst TypedKeyframeTrack = this.constructor;\n\t\tconst track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\treturn track;\n\n\t}\n\n}\n\nKeyframeTrack.prototype.TimeBufferType = Float32Array;\nKeyframeTrack.prototype.ValueBufferType = Float32Array;\nKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n/**\n * A Track of Boolean keyframe values.\n */\nclass BooleanKeyframeTrack extends KeyframeTrack {}\n\nBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\nBooleanKeyframeTrack.prototype.ValueBufferType = Array;\nBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of keyframe values that represent color.\n */\nclass ColorKeyframeTrack extends KeyframeTrack {}\n\nColorKeyframeTrack.prototype.ValueTypeName = 'color';\n\n/**\n * A Track of numeric keyframe values.\n */\nclass NumberKeyframeTrack extends KeyframeTrack {}\n\nNumberKeyframeTrack.prototype.ValueTypeName = 'number';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n/**\n * A Track of quaternion keyframe values.\n */\nclass QuaternionKeyframeTrack extends KeyframeTrack {\n\n\tInterpolantFactoryMethodLinear( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t}\n\n}\n\nQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion';\n// ValueBufferType is inherited\nQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\nQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track that interpolates Strings\n */\nclass StringKeyframeTrack extends KeyframeTrack {}\n\nStringKeyframeTrack.prototype.ValueTypeName = 'string';\nStringKeyframeTrack.prototype.ValueBufferType = Array;\nStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\nStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n/**\n * A Track of vectored keyframe values.\n */\nclass VectorKeyframeTrack extends KeyframeTrack {}\n\nVectorKeyframeTrack.prototype.ValueTypeName = 'vector';\n\nclass AnimationClip {\n\n\tconstructor( name, duration = - 1, tracks, blendMode = NormalAnimationBlendMode ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = duration;\n\t\tthis.blendMode = blendMode;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\n\tstatic parse( json ) {\n\n\t\tconst tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( let i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\tconst clip = new this( json.name, json.duration, tracks, json.blendMode );\n\t\tclip.uuid = json.uuid;\n\n\t\treturn clip;\n\n\t}\n\n\tstatic toJSON( clip ) {\n\n\t\tconst tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tconst json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks,\n\t\t\t'uuid': clip.uuid,\n\t\t\t'blendMode': clip.blendMode\n\n\t\t};\n\n\t\tfor ( let i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t}\n\n\tstatic CreateFromMorphTargetSequence( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tlet times = [];\n\t\t\tlet values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tconst order = getKeyframeOrder( times );\n\t\t\ttimes = sortedArray( times, 1, order );\n\t\t\tvalues = sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new this( name, - 1, tracks );\n\n\t}\n\n\tstatic findByName( objectOrClipArray, name ) {\n\n\t\tlet clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tconst o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( let i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tstatic CreateClipsFromMorphTargetSequences( morphTargets, fps, noLoop ) {\n\n\t\tconst animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( let i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tconst morphTarget = morphTargets[ i ];\n\t\t\tconst parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tconst name = parts[ 1 ];\n\n\t\t\t\tlet animationMorphTargets = animationToMorphTargets[ name ];\n\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst clips = [];\n\n\t\tfor ( const name in animationToMorphTargets ) {\n\n\t\t\tclips.push( this.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t}\n\n\t// parse the animation.hierarchy format\n\tstatic parseAnimation( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tflattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tconst tracks = [];\n\n\t\tconst clipName = animation.name || 'default';\n\t\tconst fps = animation.fps || 30;\n\t\tconst blendMode = animation.blendMode;\n\n\t\t// automatic length determination in AnimationClip.\n\t\tlet duration = animation.length || - 1;\n\n\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( let h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tconst animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tconst morphTargetNames = {};\n\n\t\t\t\tlet k;\n\n\t\t\t\tfor ( k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( let m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( const morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\n\t\t\t\t\tfor ( let m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tconst animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * fps;\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tconst boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tconst clip = new this( clipName, duration, tracks, blendMode );\n\n\t\treturn clip;\n\n\t}\n\n\tresetDuration() {\n\n\t\tconst tracks = this.tracks;\n\t\tlet duration = 0;\n\n\t\tfor ( let i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tconst track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t\treturn this;\n\n\t}\n\n\ttrim() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tvalidate() {\n\n\t\tlet valid = true;\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t}\n\n\t\treturn valid;\n\n\t}\n\n\toptimize() {\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\tconst tracks = [];\n\n\t\tfor ( let i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t}\n\n\t\treturn new this.constructor( this.name, this.duration, tracks, this.blendMode );\n\n\t}\n\n\ttoJSON() {\n\n\t\treturn this.constructor.toJSON( this );\n\n\t}\n\n}\n\nfunction getTrackTypeForValueTypeName( typeName ) {\n\n\tswitch ( typeName.toLowerCase() ) {\n\n\t\tcase 'scalar':\n\t\tcase 'double':\n\t\tcase 'float':\n\t\tcase 'number':\n\t\tcase 'integer':\n\n\t\t\treturn NumberKeyframeTrack;\n\n\t\tcase 'vector':\n\t\tcase 'vector2':\n\t\tcase 'vector3':\n\t\tcase 'vector4':\n\n\t\t\treturn VectorKeyframeTrack;\n\n\t\tcase 'color':\n\n\t\t\treturn ColorKeyframeTrack;\n\n\t\tcase 'quaternion':\n\n\t\t\treturn QuaternionKeyframeTrack;\n\n\t\tcase 'bool':\n\t\tcase 'boolean':\n\n\t\t\treturn BooleanKeyframeTrack;\n\n\t\tcase 'string':\n\n\t\t\treturn StringKeyframeTrack;\n\n\t}\n\n\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n}\n\nfunction parseKeyframeTrack( json ) {\n\n\tif ( json.type === undefined ) {\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t}\n\n\tconst trackType = getTrackTypeForValueTypeName( json.type );\n\n\tif ( json.times === undefined ) {\n\n\t\tconst times = [], values = [];\n\n\t\tflattenJSON( json.keys, times, values, 'value' );\n\n\t\tjson.times = times;\n\t\tjson.values = values;\n\n\t}\n\n\t// derived classes can define a static parse method\n\tif ( trackType.parse !== undefined ) {\n\n\t\treturn trackType.parse( json );\n\n\t} else {\n\n\t\t// by default, we assume a constructor compatible with the base\n\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t}\n\n}\n\nconst Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\nclass LoadingManager {\n\n\tconstructor( onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tlet isLoading = false;\n\t\tlet itemsLoaded = 0;\n\t\tlet itemsTotal = 0;\n\t\tlet urlModifier = undefined;\n\t\tconst handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tconst index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( let i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tconst regex = handlers[ i ];\n\t\t\t\tconst loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) regex.lastIndex = 0; // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n}\n\nconst DefaultLoadingManager = /*@__PURE__*/ new LoadingManager();\n\nclass Loader {\n\n\tconstructor( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.withCredentials = false;\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\t\tthis.requestHeader = {};\n\n\t}\n\n\tload( /* url, onLoad, onProgress, onError */ ) {}\n\n\tloadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tscope.load( url, resolve, onProgress, reject );\n\n\t\t} );\n\n\t}\n\n\tparse( /* data */ ) {}\n\n\tsetCrossOrigin( crossOrigin ) {\n\n\t\tthis.crossOrigin = crossOrigin;\n\t\treturn this;\n\n\t}\n\n\tsetWithCredentials( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t}\n\n\tsetPath( path ) {\n\n\t\tthis.path = path;\n\t\treturn this;\n\n\t}\n\n\tsetResourcePath( resourcePath ) {\n\n\t\tthis.resourcePath = resourcePath;\n\t\treturn this;\n\n\t}\n\n\tsetRequestHeader( requestHeader ) {\n\n\t\tthis.requestHeader = requestHeader;\n\t\treturn this;\n\n\t}\n\n}\n\nLoader.DEFAULT_MATERIAL_NAME = '__DEFAULT';\n\nconst loading = {};\n\nclass HttpError extends Error {\n\n\tconstructor( message, response ) {\n\n\t\tsuper( message );\n\t\tthis.response = response;\n\n\t}\n\n}\n\nclass FileLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tthis.manager.itemStart( url );\n\n\t\t\tsetTimeout( () => {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Initialise array for duplicate requests\n\t\tloading[ url ] = [];\n\n\t\tloading[ url ].push( {\n\t\t\tonLoad: onLoad,\n\t\t\tonProgress: onProgress,\n\t\t\tonError: onError,\n\t\t} );\n\n\t\t// create request\n\t\tconst req = new Request( url, {\n\t\t\theaders: new Headers( this.requestHeader ),\n\t\t\tcredentials: this.withCredentials ? 'include' : 'same-origin',\n\t\t\t// An abort controller could be added within a future PR\n\t\t} );\n\n\t\t// record states ( avoid data race )\n\t\tconst mimeType = this.mimeType;\n\t\tconst responseType = this.responseType;\n\n\t\t// start the fetch\n\t\tfetch( req )\n\t\t\t.then( response => {\n\n\t\t\t\tif ( response.status === 200 || response.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tif ( response.status === 0 ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Workaround: Checking if response.body === undefined for Alipay browser #23548\n\n\t\t\t\t\tif ( typeof ReadableStream === 'undefined' || response.body === undefined || response.body.getReader === undefined ) {\n\n\t\t\t\t\t\treturn response;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\t\tconst reader = response.body.getReader();\n\n\t\t\t\t\t// Nginx needs X-File-Size check\n\t\t\t\t\t// https://serverfault.com/questions/482875/why-does-nginx-remove-content-length-header-for-chunked-content\n\t\t\t\t\tconst contentLength = response.headers.get( 'Content-Length' ) || response.headers.get( 'X-File-Size' );\n\t\t\t\t\tconst total = contentLength ? parseInt( contentLength ) : 0;\n\t\t\t\t\tconst lengthComputable = total !== 0;\n\t\t\t\t\tlet loaded = 0;\n\n\t\t\t\t\t// periodically read data into the new stream tracking while download progress\n\t\t\t\t\tconst stream = new ReadableStream( {\n\t\t\t\t\t\tstart( controller ) {\n\n\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\tfunction readData() {\n\n\t\t\t\t\t\t\t\treader.read().then( ( { done, value } ) => {\n\n\t\t\t\t\t\t\t\t\tif ( done ) {\n\n\t\t\t\t\t\t\t\t\t\tcontroller.close();\n\n\t\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\t\tloaded += value.byteLength;\n\n\t\t\t\t\t\t\t\t\t\tconst event = new ProgressEvent( 'progress', { lengthComputable, loaded, total } );\n\t\t\t\t\t\t\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\t\t\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tcontroller.enqueue( value );\n\t\t\t\t\t\t\t\t\t\treadData();\n\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\treturn new Response( stream );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new HttpError( `fetch for \"${response.url}\" responded with ${response.status}: ${response.statusText}`, response );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( response => {\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\n\t\t\t\t\t\treturn response.arrayBuffer();\n\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\treturn response.blob();\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\treturn response.text()\n\t\t\t\t\t\t\t.then( text => {\n\n\t\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\t\treturn parser.parseFromString( text, mimeType );\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\treturn response.json();\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( mimeType === undefined ) {\n\n\t\t\t\t\t\t\treturn response.text();\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// sniff encoding\n\t\t\t\t\t\t\tconst re = /charset=\"?([^;\"\\s]*)\"?/i;\n\t\t\t\t\t\t\tconst exec = re.exec( mimeType );\n\t\t\t\t\t\t\tconst label = exec && exec[ 1 ] ? exec[ 1 ].toLowerCase() : undefined;\n\t\t\t\t\t\t\tconst decoder = new TextDecoder( label );\n\t\t\t\t\t\t\treturn response.arrayBuffer().then( ab => decoder.decode( ab ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.then( data => {\n\n\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\tCache.add( url, data );\n\n\t\t\t\tconst callbacks = loading[ url ];\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( data );\n\n\t\t\t\t}\n\n\t\t\t} )\n\t\t\t.catch( err => {\n\n\t\t\t\t// Abort errors and other errors are handled the same\n\n\t\t\t\tconst callbacks = loading[ url ];\n\n\t\t\t\tif ( callbacks === undefined ) {\n\n\t\t\t\t\t// When onLoad was called and url was deleted in `loading`\n\t\t\t\t\tthis.manager.itemError( url );\n\t\t\t\t\tthrow err;\n\n\t\t\t\t}\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( let i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( err );\n\n\t\t\t\t}\n\n\t\t\t\tthis.manager.itemError( url );\n\n\t\t\t} )\n\t\t\t.finally( () => {\n\n\t\t\t\tthis.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\tthis.manager.itemStart( url );\n\n\t}\n\n\tsetResponseType( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t}\n\n\tsetMimeType( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t}\n\n}\n\nclass AnimationLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst animations = [];\n\n\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\tconst clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass CompressedTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst images = [];\n\n\t\tconst texture = new CompressedTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) texture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.image = images;\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tfor ( let i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tconst texDatas = scope.parse( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( let f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( let i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.image = images;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass ImageLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst image = createElementNS( 'img' );\n\n\t\tfunction onImageLoad() {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction onImageError( event ) {\n\n\t\t\tremoveEventListeners();\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}\n\n\t\tfunction removeEventListeners() {\n\n\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t}\n\n\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\tif ( url.slice( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t}\n\n}\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\t\ttexture.colorSpace = SRGBColorSpace;\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n/**\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n *\n * Sub classes have to implement the parse() method which will be used in load().\n */\n\nclass DataTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst texture = new DataTexture();\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setPath( this.path );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tlet texData;\n\n\t\t\ttry {\n\n\t\t\t\ttexData = scope.parse( buffer );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\tonError( error );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( error );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\tif ( texData.colorSpace !== undefined ) {\n\n\t\t\t\ttexture.colorSpace = texData.colorSpace;\n\n\t\t\t} else if ( texData.encoding !== undefined ) { // @deprecated, r152\n\n\t\t\t\ttexture.encoding = texData.encoding;\n\n\t\t\t}\n\n\t\t\tif ( texData.flipY !== undefined ) {\n\n\t\t\t\ttexture.flipY = texData.flipY;\n\n\t\t\t}\n\n\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\n\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t}\n\n\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\tif ( texData.generateMipmaps !== undefined ) {\n\n\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass TextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new Texture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tloader.load( url, function ( image ) {\n\n\t\t\ttexture.image = image;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t}\n\n}\n\nclass Light extends Object3D {\n\n\tconstructor( color, intensity = 1 ) {\n\n\t\tsuper();\n\n\t\tthis.isLight = true;\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity;\n\n\t}\n\n\tdispose() {\n\n\t\t// Empty here in base class; some subclasses override.\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass HemisphereLight extends Light {\n\n\tconstructor( skyColor, groundColor, intensity ) {\n\n\t\tsuper( skyColor, intensity );\n\n\t\tthis.isHemisphereLight = true;\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix$1 = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld$1 = /*@__PURE__*/ new Vector3();\nconst _lookTarget$1 = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld$1.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld$1 );\n\n\t\t_lookTarget$1.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget$1 );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix$1.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix$1 );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix$1 );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass SpotLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isSpotLight = true;\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.distance = distance;\n\t\tthis.angle = angle;\n\t\tthis.penumbra = penumbra;\n\t\tthis.decay = decay;\n\n\t\tthis.map = null;\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// by convention for a spotlight, luminous power (lm) = π * luminous intensity (cd)\n\t\treturn this.intensity * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / Math.PI;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass PointLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis.isPointLightShadow = true;\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tupdateMatrices( light, viewportIndex = 0 ) {\n\n\t\tconst camera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( far !== camera.far ) {\n\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tcamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.copy( camera.position );\n\t\t_lookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\tcamera.lookAt( _lookTarget );\n\t\tcamera.updateMatrixWorld();\n\n\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t}\n\n}\n\nclass PointLight extends Light {\n\n\tconstructor( color, intensity, distance = 0, decay = 2 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isPointLight = true;\n\n\t\tthis.type = 'PointLight';\n\n\t\tthis.distance = distance;\n\t\tthis.decay = decay;\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in candela)\n\t\t// for an isotropic light source, luminous power (lm) = 4 π luminous intensity (cd)\n\t\treturn this.intensity * 4 * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in candela) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass DirectionalLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t\tthis.isDirectionalLightShadow = true;\n\n\t}\n\n}\n\nclass DirectionalLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isDirectionalLight = true;\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DEFAULT_UP );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shadow.dispose();\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.target = source.target.clone();\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass AmbientLight extends Light {\n\n\tconstructor( color, intensity ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isAmbientLight = true;\n\n\t\tthis.type = 'AmbientLight';\n\n\t}\n\n}\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\n/**\n * Primary reference:\n *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n *\n * Secondary reference:\n *   https://www.ppsloan.org/publications/StupidSH36.pdf\n */\n\n// 3-band SH defined by 9 coefficients\n\nclass SphericalHarmonics3 {\n\n\tconstructor() {\n\n\t\tthis.isSphericalHarmonics3 = true;\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tset( coefficients ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tzero() {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// get the radiance in the direction of the normal\n\t// target is a Vector3\n\tgetAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 0.488603 * y );\n\t\ttarget.addScaledVector( coeff[ 2 ], 0.488603 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 0.488603 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\ttarget.addScaledVector( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\ttarget.addScaledVector( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\treturn target;\n\n\t}\n\n\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t// target is a Vector3\n\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\tgetIrradianceAt( normal, target ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\tconst coeff = this.coefficients;\n\n\t\t// band 0\n\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t// band 1\n\t\ttarget.addScaledVector( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\ttarget.addScaledVector( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\ttarget.addScaledVector( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t// band 2\n\t\ttarget.addScaledVector( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\ttarget.addScaledVector( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\ttarget.addScaledVector( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\ttarget.addScaledVector( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\ttarget.addScaledVector( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\treturn target;\n\n\t}\n\n\tadd( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\taddScaledSH( sh, s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].addScaledVector( sh.coefficients[ i ], s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tscale( s ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tlerp( sh, alpha ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tequals( sh ) {\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tcopy( sh ) {\n\n\t\treturn this.set( sh.coefficients );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tconst coefficients = this.coefficients;\n\n\t\tfor ( let i = 0; i < 9; i ++ ) {\n\n\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t}\n\n\t\treturn array;\n\n\t}\n\n\t// evaluate the basis functions\n\t// shBasis is an Array[ 9 ]\n\tstatic getBasisAt( normal, shBasis ) {\n\n\t\t// normal is assumed to be unit length\n\n\t\tconst x = normal.x, y = normal.y, z = normal.z;\n\n\t\t// band 0\n\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t// band 1\n\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t// band 2\n\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t}\n\n}\n\nclass LightProbe extends Light {\n\n\tconstructor( sh = new SphericalHarmonics3(), intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isLightProbe = true;\n\n\t\tthis.sh = sh;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.sh.copy( source.sh );\n\n\t\treturn this;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\t\tthis.sh.fromArray( json.sh );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.sh = this.sh.toArray();\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass MaterialLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\t\tthis.textures = {};\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tconst material = MaterialLoader.createMaterialFromType( json.type );\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined && material.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.sheen !== undefined ) material.sheen = json.sheen;\n\t\tif ( json.sheenColor !== undefined ) material.sheenColor = new Color().setHex( json.sheenColor );\n\t\tif ( json.sheenRoughness !== undefined ) material.sheenRoughness = json.sheenRoughness;\n\t\tif ( json.emissive !== undefined && material.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined && material.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.specularIntensity !== undefined ) material.specularIntensity = json.specularIntensity;\n\t\tif ( json.specularColor !== undefined && material.specularColor !== undefined ) material.specularColor.setHex( json.specularColor );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearcoat !== undefined ) material.clearcoat = json.clearcoat;\n\t\tif ( json.clearcoatRoughness !== undefined ) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\tif ( json.iridescence !== undefined ) material.iridescence = json.iridescence;\n\t\tif ( json.iridescenceIOR !== undefined ) material.iridescenceIOR = json.iridescenceIOR;\n\t\tif ( json.iridescenceThicknessRange !== undefined ) material.iridescenceThicknessRange = json.iridescenceThicknessRange;\n\t\tif ( json.transmission !== undefined ) material.transmission = json.transmission;\n\t\tif ( json.thickness !== undefined ) material.thickness = json.thickness;\n\t\tif ( json.attenuationDistance !== undefined ) material.attenuationDistance = json.attenuationDistance;\n\t\tif ( json.attenuationColor !== undefined && material.attenuationColor !== undefined ) material.attenuationColor.setHex( json.attenuationColor );\n\t\tif ( json.anisotropy !== undefined ) material.anisotropy = json.anisotropy;\n\t\tif ( json.anisotropyRotation !== undefined ) material.anisotropyRotation = json.anisotropyRotation;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.combine !== undefined ) material.combine = json.combine;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.shadowSide !== undefined ) material.shadowSide = json.shadowSide;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.alphaHash !== undefined ) material.alphaHash = json.alphaHash;\n\t\tif ( json.depthFunc !== undefined ) material.depthFunc = json.depthFunc;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.blendSrc !== undefined ) material.blendSrc = json.blendSrc;\n\t\tif ( json.blendDst !== undefined ) material.blendDst = json.blendDst;\n\t\tif ( json.blendEquation !== undefined ) material.blendEquation = json.blendEquation;\n\t\tif ( json.blendSrcAlpha !== undefined ) material.blendSrcAlpha = json.blendSrcAlpha;\n\t\tif ( json.blendDstAlpha !== undefined ) material.blendDstAlpha = json.blendDstAlpha;\n\t\tif ( json.blendEquationAlpha !== undefined ) material.blendEquationAlpha = json.blendEquationAlpha;\n\t\tif ( json.blendColor !== undefined && material.blendColor !== undefined ) material.blendColor.setHex( json.blendColor );\n\t\tif ( json.blendAlpha !== undefined ) material.blendAlpha = json.blendAlpha;\n\t\tif ( json.stencilWriteMask !== undefined ) material.stencilWriteMask = json.stencilWriteMask;\n\t\tif ( json.stencilFunc !== undefined ) material.stencilFunc = json.stencilFunc;\n\t\tif ( json.stencilRef !== undefined ) material.stencilRef = json.stencilRef;\n\t\tif ( json.stencilFuncMask !== undefined ) material.stencilFuncMask = json.stencilFuncMask;\n\t\tif ( json.stencilFail !== undefined ) material.stencilFail = json.stencilFail;\n\t\tif ( json.stencilZFail !== undefined ) material.stencilZFail = json.stencilZFail;\n\t\tif ( json.stencilZPass !== undefined ) material.stencilZPass = json.stencilZPass;\n\t\tif ( json.stencilWrite !== undefined ) material.stencilWrite = json.stencilWrite;\n\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== undefined ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.polygonOffset !== undefined ) material.polygonOffset = json.polygonOffset;\n\t\tif ( json.polygonOffsetFactor !== undefined ) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\tif ( json.polygonOffsetUnits !== undefined ) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.alphaToCoverage !== undefined ) material.alphaToCoverage = json.alphaToCoverage;\n\t\tif ( json.premultipliedAlpha !== undefined ) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\tif ( json.forceSinglePass !== undefined ) material.forceSinglePass = json.forceSinglePass;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\n\t\tif ( json.toneMapped !== undefined ) material.toneMapped = json.toneMapped;\n\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\tif ( json.vertexColors !== undefined ) {\n\n\t\t\tif ( typeof json.vertexColors === 'number' ) {\n\n\t\t\t\tmaterial.vertexColors = ( json.vertexColors > 0 ) ? true : false;\n\n\t\t\t} else {\n\n\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Shader Material\n\n\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\tfor ( const name in json.uniforms ) {\n\n\t\t\t\tconst uniform = json.uniforms[ name ];\n\n\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.defines !== undefined ) material.defines = json.defines;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.glslVersion !== undefined ) material.glslVersion = json.glslVersion;\n\n\t\tif ( json.extensions !== undefined ) {\n\n\t\t\tfor ( const key in json.extensions ) {\n\n\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json.lights !== undefined ) material.lights = json.lights;\n\t\tif ( json.clipping !== undefined ) material.clipping = json.clipping;\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\t\tif ( json.matcap !== undefined ) material.matcap = getTexture( json.matcap );\n\n\t\tif ( json.alphaMap !== undefined ) material.alphaMap = getTexture( json.alphaMap );\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalMapType !== undefined ) material.normalMapType = json.normalMapType;\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tlet normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\t\tif ( json.specularIntensityMap !== undefined ) material.specularIntensityMap = getTexture( json.specularIntensityMap );\n\t\tif ( json.specularColorMap !== undefined ) material.specularColorMap = getTexture( json.specularColorMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\t\tif ( json.envMapIntensity !== undefined ) material.envMapIntensity = json.envMapIntensity;\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\t\tif ( json.refractionRatio !== undefined ) material.refractionRatio = json.refractionRatio;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\tif ( json.clearcoatMap !== undefined ) material.clearcoatMap = getTexture( json.clearcoatMap );\n\t\tif ( json.clearcoatRoughnessMap !== undefined ) material.clearcoatRoughnessMap = getTexture( json.clearcoatRoughnessMap );\n\t\tif ( json.clearcoatNormalMap !== undefined ) material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap );\n\t\tif ( json.clearcoatNormalScale !== undefined ) material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale );\n\n\t\tif ( json.iridescenceMap !== undefined ) material.iridescenceMap = getTexture( json.iridescenceMap );\n\t\tif ( json.iridescenceThicknessMap !== undefined ) material.iridescenceThicknessMap = getTexture( json.iridescenceThicknessMap );\n\n\t\tif ( json.transmissionMap !== undefined ) material.transmissionMap = getTexture( json.transmissionMap );\n\t\tif ( json.thicknessMap !== undefined ) material.thicknessMap = getTexture( json.thicknessMap );\n\n\t\tif ( json.anisotropyMap !== undefined ) material.anisotropyMap = getTexture( json.anisotropyMap );\n\n\t\tif ( json.sheenColorMap !== undefined ) material.sheenColorMap = getTexture( json.sheenColorMap );\n\t\tif ( json.sheenRoughnessMap !== undefined ) material.sheenRoughnessMap = getTexture( json.sheenRoughnessMap );\n\n\t\treturn material;\n\n\t}\n\n\tsetTextures( value ) {\n\n\t\tthis.textures = value;\n\t\treturn this;\n\n\t}\n\n\tstatic createMaterialFromType( type ) {\n\n\t\tconst materialLib = {\n\t\t\tShadowMaterial,\n\t\t\tSpriteMaterial,\n\t\t\tRawShaderMaterial,\n\t\t\tShaderMaterial,\n\t\t\tPointsMaterial,\n\t\t\tMeshPhysicalMaterial,\n\t\t\tMeshStandardMaterial,\n\t\t\tMeshPhongMaterial,\n\t\t\tMeshToonMaterial,\n\t\t\tMeshNormalMaterial,\n\t\t\tMeshLambertMaterial,\n\t\t\tMeshDepthMaterial,\n\t\t\tMeshDistanceMaterial,\n\t\t\tMeshBasicMaterial,\n\t\t\tMeshMatcapMaterial,\n\t\t\tLineDashedMaterial,\n\t\t\tLineBasicMaterial,\n\t\t\tMaterial\n\t\t};\n\n\t\treturn new materialLib[ type ]();\n\n\t}\n\n}\n\nclass LoaderUtils {\n\n\tstatic decodeText( array ) {\n\n\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\treturn new TextDecoder().decode( array );\n\n\t\t}\n\n\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\tlet s = '';\n\n\t\tfor ( let i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t// Implicitly assumes little-endian.\n\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t}\n\n\t\ttry {\n\n\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t} catch ( e ) { // see #16358\n\n\t\t\treturn s;\n\n\t\t}\n\n\t}\n\n\tstatic extractUrlBase( url ) {\n\n\t\tconst index = url.lastIndexOf( '/' );\n\n\t\tif ( index === - 1 ) return './';\n\n\t\treturn url.slice( 0, index + 1 );\n\n\t}\n\n\tstatic resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Host Relative URL\n\t\tif ( /^https?:\\/\\//i.test( path ) && /^\\//.test( url ) ) {\n\n\t\t\tpath = path.replace( /(^https?:\\/\\/[^\\/]+).*/i, '$1' );\n\n\t\t}\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n}\n\nclass InstancedBufferGeometry extends BufferGeometry {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isInstancedBufferGeometry = true;\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.instanceCount = Infinity;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.instanceCount = source.instanceCount;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.instanceCount = this.instanceCount;\n\n\t\tdata.isInstancedBufferGeometry = true;\n\n\t\treturn data;\n\n\t}\n\n}\n\nclass BufferGeometryLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( scope.manager );\n\t\tloader.setPath( scope.path );\n\t\tloader.setRequestHeader( scope.requestHeader );\n\t\tloader.setWithCredentials( scope.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tparse( json ) {\n\n\t\tconst interleavedBufferMap = {};\n\t\tconst arrayBufferMap = {};\n\n\t\tfunction getInterleavedBuffer( json, uuid ) {\n\n\t\t\tif ( interleavedBufferMap[ uuid ] !== undefined ) return interleavedBufferMap[ uuid ];\n\n\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\tconst interleavedBuffer = interleavedBuffers[ uuid ];\n\n\t\t\tconst buffer = getArrayBuffer( json, interleavedBuffer.buffer );\n\n\t\t\tconst array = getTypedArray( interleavedBuffer.type, buffer );\n\t\t\tconst ib = new InterleavedBuffer( array, interleavedBuffer.stride );\n\t\t\tib.uuid = interleavedBuffer.uuid;\n\n\t\t\tinterleavedBufferMap[ uuid ] = ib;\n\n\t\t\treturn ib;\n\n\t\t}\n\n\t\tfunction getArrayBuffer( json, uuid ) {\n\n\t\t\tif ( arrayBufferMap[ uuid ] !== undefined ) return arrayBufferMap[ uuid ];\n\n\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\tconst arrayBuffer = arrayBuffers[ uuid ];\n\n\t\t\tconst ab = new Uint32Array( arrayBuffer ).buffer;\n\n\t\t\tarrayBufferMap[ uuid ] = ab;\n\n\t\t\treturn ab;\n\n\t\t}\n\n\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\tconst index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst typedArray = getTypedArray( index.type, index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tconst attributes = json.data.attributes;\n\n\t\tfor ( const key in attributes ) {\n\n\t\t\tconst attribute = attributes[ key ];\n\t\t\tlet bufferAttribute;\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t} else {\n\n\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tbufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t}\n\n\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\tif ( attribute.usage !== undefined ) bufferAttribute.setUsage( attribute.usage );\n\n\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t}\n\n\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\tif ( morphAttributes ) {\n\n\t\t\tfor ( const key in morphAttributes ) {\n\n\t\t\t\tconst attributeArray = morphAttributes[ key ];\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tconst attribute = attributeArray[ i ];\n\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer( json.data, attribute.data );\n\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute( interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst typedArray = getTypedArray( attribute.type, attribute.array );\n\t\t\t\t\t\tbufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( attribute.name !== undefined ) bufferAttribute.name = attribute.name;\n\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\tif ( morphTargetsRelative ) {\n\n\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t}\n\n\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( let i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tconst group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tconst center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\tif ( json.name ) geometry.name = json.name;\n\t\tif ( json.userData ) geometry.userData = json.userData;\n\n\t\treturn geometry;\n\n\t}\n\n}\n\nclass ObjectLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tlet json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( new Error( 'THREE.ObjectLoader: Can\\'t load ' + url ) );\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tasync loadAsync( url, onProgress ) {\n\n\t\tconst scope = this;\n\n\t\tconst path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\n\t\tconst text = await loader.loadAsync( url, onProgress );\n\n\t\tconst json = JSON.parse( text );\n\n\t\tconst metadata = json.metadata;\n\n\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\tthrow new Error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\n\t\t}\n\n\t\treturn await scope.parseAsync( json );\n\n\t}\n\n\tparse( json, onLoad ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\t//\n\n\t\tif ( onLoad !== undefined ) {\n\n\t\t\tlet hasImages = false;\n\n\t\t\tfor ( const uuid in images ) {\n\n\t\t\t\tif ( images[ uuid ].data instanceof HTMLImageElement ) {\n\n\t\t\t\t\thasImages = true;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasImages === false ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tasync parseAsync( json ) {\n\n\t\tconst animations = this.parseAnimations( json.animations );\n\t\tconst shapes = this.parseShapes( json.shapes );\n\t\tconst geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\tconst images = await this.parseImagesAsync( json.images );\n\n\t\tconst textures = this.parseTextures( json.textures, images );\n\t\tconst materials = this.parseMaterials( json.materials, textures );\n\n\t\tconst object = this.parseObject( json.object, geometries, materials, textures, animations );\n\t\tconst skeletons = this.parseSkeletons( json.skeletons, object );\n\n\t\tthis.bindSkeletons( object, skeletons );\n\n\t\treturn object;\n\n\t}\n\n\tparseShapes( json ) {\n\n\t\tconst shapes = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n\tparseSkeletons( json, object ) {\n\n\t\tconst skeletons = {};\n\t\tconst bones = {};\n\n\t\t// generate bone lookup table\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isBone ) bones[ child.uuid ] = child;\n\n\t\t} );\n\n\t\t// create skeletons\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst skeleton = new Skeleton().fromJSON( json[ i ], bones );\n\n\t\t\t\tskeletons[ skeleton.uuid ] = skeleton;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn skeletons;\n\n\t}\n\n\tparseGeometries( json, shapes ) {\n\n\t\tconst geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tlet geometry;\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( data.type in Geometries ) {\n\n\t\t\t\t\t\t\tgeometry = Geometries[ data.type ].fromJSON( data, shapes );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( `THREE.ObjectLoader: Unsupported geometry type \"${ data.type }\"` );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\t\t\t\tif ( data.userData !== undefined ) geometry.userData = data.userData;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t}\n\n\tparseMaterials( json, textures ) {\n\n\t\tconst cache = {}; // MultiMaterial\n\t\tconst materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tconst loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t}\n\n\tparseAnimations( json ) {\n\n\t\tconst animations = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tconst clip = AnimationClip.parse( data );\n\n\t\t\t\tanimations[ clip.uuid ] = clip;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn animations;\n\n\t}\n\n\tparseImages( json, onLoad ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tfunction deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn loadImage( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tconst manager = new LoadingManager( onLoad );\n\n\t\t\tloader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tasync parseImagesAsync( json ) {\n\n\t\tconst scope = this;\n\t\tconst images = {};\n\n\t\tlet loader;\n\n\t\tasync function deserializeImage( image ) {\n\n\t\t\tif ( typeof image === 'string' ) {\n\n\t\t\t\tconst url = image;\n\n\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( url ) ? url : scope.resourcePath + url;\n\n\t\t\t\treturn await loader.loadAsync( path );\n\n\t\t\t} else {\n\n\t\t\t\tif ( image.data ) {\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdata: getTypedArray( image.type, image.data ),\n\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\theight: image.height\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tloader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( let i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\tconst image = json[ i ];\n\t\t\t\tconst url = image.url;\n\n\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\tconst imageArray = [];\n\n\t\t\t\t\tfor ( let j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tconst currentUrl = url[ j ];\n\n\t\t\t\t\t\tconst deserializedImage = await deserializeImage( currentUrl );\n\n\t\t\t\t\t\tif ( deserializedImage !== null ) {\n\n\t\t\t\t\t\t\tif ( deserializedImage instanceof HTMLImageElement ) {\n\n\t\t\t\t\t\t\t\timageArray.push( deserializedImage );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\n\t\t\t\t\t\t\t\timageArray.push( new DataTexture( deserializedImage.data, deserializedImage.width, deserializedImage.height ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\timages[ image.uuid ] = new Source( imageArray );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// load single image\n\n\t\t\t\t\tconst deserializedImage = await deserializeImage( image.url );\n\t\t\t\t\timages[ image.uuid ] = new Source( deserializedImage );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t}\n\n\tparseTextures( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tconst textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( let i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tconst data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tconst source = images[ data.image ];\n\t\t\t\tconst image = source.data;\n\n\t\t\t\tlet texture;\n\n\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\ttexture = new CubeTexture();\n\n\t\t\t\t\tif ( image.length === 6 ) texture.needsUpdate = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( image && image.data ) {\n\n\t\t\t\t\t\ttexture = new DataTexture();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( image ) texture.needsUpdate = true; // textures can have undefined image data\n\n\t\t\t\t}\n\n\t\t\t\ttexture.source = source;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\t\t\t\tif ( data.channel !== undefined ) texture.channel = data.channel;\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.format !== undefined ) texture.format = data.format;\n\t\t\t\tif ( data.internalFormat !== undefined ) texture.internalFormat = data.internalFormat;\n\t\t\t\tif ( data.type !== undefined ) texture.type = data.type;\n\t\t\t\tif ( data.colorSpace !== undefined ) texture.colorSpace = data.colorSpace;\n\t\t\t\tif ( data.encoding !== undefined ) texture.encoding = data.encoding; // @deprecated, r152\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\tif ( data.generateMipmaps !== undefined ) texture.generateMipmaps = data.generateMipmaps;\n\t\t\t\tif ( data.premultiplyAlpha !== undefined ) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\tif ( data.unpackAlignment !== undefined ) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\tif ( data.compareFunction !== undefined ) texture.compareFunction = data.compareFunction;\n\n\t\t\t\tif ( data.userData !== undefined ) texture.userData = data.userData;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t}\n\n\tparseObject( data, geometries, materials, textures, animations ) {\n\n\t\tlet object;\n\n\t\tfunction getGeometry( name ) {\n\n\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t}\n\n\t\t\treturn geometries[ name ];\n\n\t\t}\n\n\t\tfunction getMaterial( name ) {\n\n\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor ( let i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\tconst uuid = name[ i ];\n\n\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn array;\n\n\t\t\t}\n\n\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t}\n\n\t\t\treturn materials[ name ];\n\n\t\t}\n\n\t\tfunction getTexture( uuid ) {\n\n\t\t\tif ( textures[ uuid ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined texture', uuid );\n\n\t\t\t}\n\n\t\t\treturn textures[ uuid ];\n\n\t\t}\n\n\t\tlet geometry, material;\n\n\t\tswitch ( data.type ) {\n\n\t\t\tcase 'Scene':\n\n\t\t\t\tobject = new Scene();\n\n\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject.background = getTexture( data.background );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.environment !== undefined ) {\n\n\t\t\t\t\tobject.environment = getTexture( data.environment );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog.name !== '' ) {\n\n\t\t\t\t\t\tobject.fog.name = data.fog.name;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.backgroundBlurriness !== undefined ) object.backgroundBlurriness = data.backgroundBlurriness;\n\t\t\t\tif ( data.backgroundIntensity !== undefined ) object.backgroundIntensity = data.backgroundIntensity;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'AmbientLight':\n\n\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'DirectionalLight':\n\n\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointLight':\n\n\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'RectAreaLight':\n\n\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SpotLight':\n\n\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'HemisphereLight':\n\n\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LightProbe':\n\n\t\t\t\tobject = new LightProbe().fromJSON( data );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t \tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\tif ( data.bindMode !== undefined ) object.bindMode = data.bindMode;\n\t\t\t\tif ( data.bindMatrix !== undefined ) object.bindMatrix.fromArray( data.bindMatrix );\n\t\t\t\tif ( data.skeleton !== undefined ) object.skeleton = data.skeleton;\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Mesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'InstancedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\t\t\t\tconst count = data.count;\n\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\tconst instanceColor = data.instanceColor;\n\n\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\tobject.instanceMatrix = new InstancedBufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\t\t\t\tif ( instanceColor !== undefined ) object.instanceColor = new InstancedBufferAttribute( new Float32Array( instanceColor.array ), instanceColor.itemSize );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'BatchedMesh':\n\n\t\t\t\tgeometry = getGeometry( data.geometry );\n\t\t\t\tmaterial = getMaterial( data.material );\n\n\t\t\t\tobject = new BatchedMesh( data.maxGeometryCount, data.maxVertexCount, data.maxIndexCount, material );\n\t\t\t\tobject.geometry = geometry;\n\t\t\t\tobject.perObjectFrustumCulled = data.perObjectFrustumCulled;\n\t\t\t\tobject.sortObjects = data.sortObjects;\n\n\t\t\t\tobject._drawRanges = data.drawRanges;\n\t\t\t\tobject._reservedRanges = data.reservedRanges;\n\n\t\t\t\tobject._visibility = data.visibility;\n\t\t\t\tobject._active = data.active;\n\t\t\t\tobject._bounds = data.bounds.map( bound => {\n\n\t\t\t\t\tconst box = new Box3();\n\t\t\t\t\tbox.min.fromArray( bound.boxMin );\n\t\t\t\t\tbox.max.fromArray( bound.boxMax );\n\n\t\t\t\t\tconst sphere = new Sphere();\n\t\t\t\t\tsphere.radius = bound.sphereRadius;\n\t\t\t\t\tsphere.center.fromArray( bound.sphereCenter );\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\tboxInitialized: bound.boxInitialized,\n\t\t\t\t\t\tbox: box,\n\n\t\t\t\t\t\tsphereInitialized: bound.sphereInitialized,\n\t\t\t\t\t\tsphere: sphere\n\t\t\t\t\t};\n\n\t\t\t\t} );\n\n\t\t\t\tobject._maxGeometryCount = data.maxGeometryCount;\n\t\t\t\tobject._maxVertexCount = data.maxVertexCount;\n\t\t\t\tobject._maxIndexCount = data.maxIndexCount;\n\n\t\t\t\tobject._geometryInitialized = data.geometryInitialized;\n\t\t\t\tobject._geometryCount = data.geometryCount;\n\n\t\t\t\tobject._matricesTexture = getTexture( data.matricesTexture.uuid );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LOD':\n\n\t\t\t\tobject = new LOD();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Line':\n\n\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineLoop':\n\n\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'LineSegments':\n\n\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'PointCloud':\n\t\t\tcase 'Points':\n\n\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Sprite':\n\n\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Group':\n\n\t\t\t\tobject = new Group();\n\n\t\t\t\tbreak;\n\n\t\t\tcase 'Bone':\n\n\t\t\t\tobject = new Bone();\n\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\n\t\t\t\tobject = new Object3D();\n\n\t\t}\n\n\t\tobject.uuid = data.uuid;\n\n\t\tif ( data.name !== undefined ) object.name = data.name;\n\n\t\tif ( data.matrix !== undefined ) {\n\n\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\tif ( data.matrixAutoUpdate !== undefined ) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\tif ( object.matrixAutoUpdate ) object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t} else {\n\n\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t}\n\n\t\tif ( data.up !== undefined ) object.up.fromArray( data.up );\n\n\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\tif ( data.shadow ) {\n\n\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\tif ( data.shadow.normalBias !== undefined ) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t}\n\n\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\tif ( data.frustumCulled !== undefined ) object.frustumCulled = data.frustumCulled;\n\t\tif ( data.renderOrder !== undefined ) object.renderOrder = data.renderOrder;\n\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\t\tif ( data.layers !== undefined ) object.layers.mask = data.layers;\n\n\t\tif ( data.children !== undefined ) {\n\n\t\t\tconst children = data.children;\n\n\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials, textures, animations ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.animations !== undefined ) {\n\n\t\t\tconst objectAnimations = data.animations;\n\n\t\t\tfor ( let i = 0; i < objectAnimations.length; i ++ ) {\n\n\t\t\t\tconst uuid = objectAnimations[ i ];\n\n\t\t\t\tobject.animations.push( animations[ uuid ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( data.type === 'LOD' ) {\n\n\t\t\tif ( data.autoUpdate !== undefined ) object.autoUpdate = data.autoUpdate;\n\n\t\t\tconst levels = data.levels;\n\n\t\t\tfor ( let l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tconst level = levels[ l ];\n\t\t\t\tconst child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\tobject.addLevel( child, level.distance, level.hysteresis );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn object;\n\n\t}\n\n\tbindSkeletons( object, skeletons ) {\n\n\t\tif ( Object.keys( skeletons ).length === 0 ) return;\n\n\t\tobject.traverse( function ( child ) {\n\n\t\t\tif ( child.isSkinnedMesh === true && child.skeleton !== undefined ) {\n\n\t\t\t\tconst skeleton = skeletons[ child.skeleton ];\n\n\t\t\t\tif ( skeleton === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tchild.bind( skeleton, child.bindMatrix );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n}\n\nconst TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping\n};\n\nconst TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nconst TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n};\n\nclass ImageBitmapLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.isImageBitmapLoader = true;\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tthis.options = { premultiplyAlpha: 'none' };\n\n\t}\n\n\tsetOptions( options ) {\n\n\t\tthis.options = options;\n\n\t\treturn this;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tconst scope = this;\n\n\t\tconst cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tconst fetchOptions = {};\n\t\tfetchOptions.credentials = ( this.crossOrigin === 'anonymous' ) ? 'same-origin' : 'include';\n\t\tfetchOptions.headers = this.requestHeader;\n\n\t\tfetch( url, fetchOptions ).then( function ( res ) {\n\n\t\t\treturn res.blob();\n\n\t\t} ).then( function ( blob ) {\n\n\t\t\treturn createImageBitmap( blob, Object.assign( scope.options, { colorSpaceConversion: 'none' } ) );\n\n\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\tCache.add( url, imageBitmap );\n\n\t\t\tif ( onLoad ) onLoad( imageBitmap );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} ).catch( function ( e ) {\n\n\t\t\tif ( onError ) onError( e );\n\n\t\t\tscope.manager.itemError( url );\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t} );\n\n\t\tscope.manager.itemStart( url );\n\n\t}\n\n}\n\nlet _context;\n\nclass AudioContext {\n\n\tstatic getContext() {\n\n\t\tif ( _context === undefined ) {\n\n\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn _context;\n\n\t}\n\n\tstatic setContext( value ) {\n\n\t\t_context = value;\n\n\t}\n\n}\n\nclass AudioLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\ttry {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tconst bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} ).catch( handleError );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\thandleError( e );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\tfunction handleError( e ) {\n\n\t\t\tif ( onError ) {\n\n\t\t\t\tonError( e );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( e );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemError( url );\n\n\t\t}\n\n\t}\n\n}\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nclass Clock {\n\n\tconstructor( autoStart = true ) {\n\n\t\tthis.autoStart = autoStart;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tstart() {\n\n\t\tthis.startTime = now();\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t}\n\n\tstop() {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t}\n\n\tgetElapsedTime() {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t}\n\n\tgetDelta() {\n\n\t\tlet diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tconst newTime = now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n}\n\nfunction now() {\n\n\treturn ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n}\n\nconst _position$1 = /*@__PURE__*/ new Vector3();\nconst _quaternion$1 = /*@__PURE__*/ new Quaternion();\nconst _scale$1 = /*@__PURE__*/ new Vector3();\nconst _orientation$1 = /*@__PURE__*/ new Vector3();\n\nclass AudioListener extends Object3D {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tgetInput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tremoveFilter() {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.filter;\n\n\t}\n\n\tsetFilter( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t\treturn this;\n\n\t}\n\n\tgetMasterVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetMasterVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tconst listener = this.context.listener;\n\t\tconst up = this.up;\n\n\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\tthis.matrixWorld.decompose( _position$1, _quaternion$1, _scale$1 );\n\n\t\t_orientation$1.set( 0, 0, - 1 ).applyQuaternion( _quaternion$1 );\n\n\t\tif ( listener.positionX ) {\n\n\t\t\t// code path for Chrome (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\tlistener.positionX.linearRampToValueAtTime( _position$1.x, endTime );\n\t\t\tlistener.positionY.linearRampToValueAtTime( _position$1.y, endTime );\n\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$1.z, endTime );\n\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t} else {\n\n\t\t\tlistener.setPosition( _position$1.x, _position$1.y, _position$1.z );\n\t\t\tlistener.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass Audio extends Object3D {\n\n\tconstructor( listener ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.source = null;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._progress = 0;\n\t\tthis._connected = false;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.gain;\n\n\t}\n\n\tsetNodeSource( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaElementSource( mediaElement ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaNode';\n\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetMediaStreamSource( mediaStream ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'mediaStreamNode';\n\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t}\n\n\tsetBuffer( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t}\n\n\tplay( delay = 0 ) {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\tconst source = this.context.createBufferSource();\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.loopStart = this.loopStart;\n\t\tsource.loopEnd = this.loopEnd;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.start( this._startedAt, this._progress + this.offset, this.duration );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\tthis.setDetune( this.detune );\n\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\treturn this.connect();\n\n\t}\n\n\tpause() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\t// update current progress\n\n\t\t\tthis._progress += Math.max( this.context.currentTime - this._startedAt, 0 ) * this.playbackRate;\n\n\t\t\tif ( this.loop === true ) {\n\n\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\n\t\t\t\tthis._progress = this._progress % ( this.duration || this.buffer.duration );\n\n\t\t\t}\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis._progress = 0;\n\n\t\tif ( this.source !== null ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\n\t\t}\n\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t}\n\n\tconnect() {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = true;\n\n\t\treturn this;\n\n\t}\n\n\tdisconnect() {\n\n\t\tif ( this._connected === false ) {\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( let i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\tthis._connected = false;\n\n\t\treturn this;\n\n\t}\n\n\tgetFilters() {\n\n\t\treturn this.filters;\n\n\t}\n\n\tsetFilters( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this._connected === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value.slice();\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value.slice();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetDetune( value ) {\n\n\t\tthis.detune = value;\n\n\t\tif ( this.source.detune === undefined ) return; // only set detune when available\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetDetune() {\n\n\t\treturn this.detune;\n\n\t}\n\n\tgetFilter() {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t}\n\n\tsetFilter( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t}\n\n\tsetPlaybackRate( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetPlaybackRate() {\n\n\t\treturn this.playbackRate;\n\n\t}\n\n\tonEnded() {\n\n\t\tthis.isPlaying = false;\n\n\t}\n\n\tgetLoop() {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t}\n\n\tsetLoop( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopStart( value ) {\n\n\t\tthis.loopStart = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoopEnd( value ) {\n\n\t\tthis.loopEnd = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetVolume() {\n\n\t\treturn this.gain.gain.value;\n\n\t}\n\n\tsetVolume( value ) {\n\n\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tconnect() {\n\n\t\tsuper.connect();\n\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nclass AudioAnalyser {\n\n\tconstructor( audio, fftSize = 2048 ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\n\tgetFrequencyData() {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t}\n\n\tgetAverageFrequency() {\n\n\t\tlet value = 0;\n\t\tconst data = this.getFrequencyData();\n\n\t\tfor ( let i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n}\n\nclass PropertyMixer {\n\n\tconstructor( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tlet mixFunction,\n\t\t\tmixFunctionAdditive,\n\t\t\tsetIdentity;\n\n\t\t// buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\t\t//\n\t\t// 'add' is used for additive cumulative results\n\t\t//\n\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t// to store intermediate quaternion multiplication results\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 6 );\n\t\t\t\tthis._workIndex = 5;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tmixFunction = this._select;\n\n\t\t\t\t// Use the regular mix function and for additive on these types,\n\t\t\t\t// additive is not relevant for non-numeric types\n\t\t\t\tmixFunctionAdditive = this._select;\n\n\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\n\t\t\t\tthis.buffer = new Array( valueSize * 5 );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\n\t\t\t\tthis.buffer = new Float64Array( valueSize * 5 );\n\n\t\t}\n\n\t\tthis._mixBufferRegion = mixFunction;\n\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\tthis._setIdentity = setIdentity;\n\t\tthis._origIndex = 3;\n\t\tthis._addIndex = 4;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride;\n\n\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tconst mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t}\n\n\t// accumulate data in the 'incoming' region into 'add'\n\taccumulateAdditive( weight ) {\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = stride * this._addIndex;\n\n\t\tif ( this.cumulativeWeightAdditive === 0 ) {\n\n\t\t\t// add = identity\n\n\t\t\tthis._setIdentity();\n\n\t\t}\n\n\t\t// add := add + incoming * weight\n\n\t\tthis._mixBufferRegionAdditive( buffer, offset, 0, weight, stride );\n\t\tthis.cumulativeWeightAdditive += weight;\n\n\t}\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply( accuIndex ) {\n\n\t\tconst stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tif ( weightAdditive > 0 ) {\n\n\t\t\t// accuN := accuN + additive accuN\n\n\t\t\tthis._mixBufferRegionAdditive( buffer, offset, this._addIndex * stride, 1, stride );\n\n\t\t}\n\n\t\tfor ( let i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState() {\n\n\t\tconst binding = this.binding;\n\n\t\tconst buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * this._origIndex;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( let i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\t// Add to identity for additive\n\t\tthis._setIdentity();\n\n\t\tthis.cumulativeWeight = 0;\n\t\tthis.cumulativeWeightAdditive = 0;\n\n\t}\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState() {\n\n\t\tconst originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t}\n\n\t_setAdditiveIdentityNumeric() {\n\n\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\tfor ( let i = startIndex; i < endIndex; i ++ ) {\n\n\t\t\tthis.buffer[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\t_setAdditiveIdentityQuaternion() {\n\n\t\tthis._setAdditiveIdentityNumeric();\n\t\tthis.buffer[ this._addIndex * this.valueSize + 3 ] = 1;\n\n\t}\n\n\t_setAdditiveIdentityOther() {\n\n\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\tfor ( let i = 0; i < this.valueSize; i ++ ) {\n\n\t\t\tthis.buffer[ targetIndex + i ] = this.buffer[ startIndex + i ];\n\n\t\t}\n\n\t}\n\n\n\t// mix functions\n\n\t_select( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_slerp( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t}\n\n\t_slerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst workOffset = this._workIndex * stride;\n\n\t\t// Store result in intermediate buffer offset\n\t\tQuaternion.multiplyQuaternionsFlat( buffer, workOffset, buffer, dstOffset, buffer, srcOffset );\n\n\t\t// Slerp to the intermediate result\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t );\n\n\t}\n\n\t_lerp( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tconst s = 1 - t;\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n\t_lerpAdditive( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tfor ( let i = 0; i !== stride; ++ i ) {\n\n\t\t\tconst j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n}\n\n// Characters [].:/ are reserved for track binding syntax.\nconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\nconst _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n// only latin characters, and the unicode \\p{L} is not yet supported. So\n// instead, we exclude reserved characters and match everything else.\nconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\nconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n// Parent directories, delimited by '/' or ':'. Currently unused, but must\n// be matched to parse the rest of the track name.\nconst _directoryRe = /*@__PURE__*/ /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\nconst _nodeRe = /*@__PURE__*/ /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n// Object on target node, and accessor. May not contain reserved\n// characters. Accessor may contain any character except closing bracket.\nconst _objectRe = /*@__PURE__*/ /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n// Property and accessor. May not contain reserved characters. Accessor may\n// contain any non-bracket characters.\nconst _propertyRe = /*@__PURE__*/ /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\nconst _trackRe = new RegExp( ''\n\t+ '^'\n\t+ _directoryRe\n\t+ _nodeRe\n\t+ _objectRe\n\t+ _propertyRe\n\t+ '$'\n);\n\nconst _supportedObjectNames = [ 'material', 'materials', 'bones', 'map' ];\n\nclass Composite {\n\n\tconstructor( targetGroup, path, optionalParsedPath ) {\n\n\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tgetValue( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t}\n\n\tsetValue( array, offset ) {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t}\n\n\tbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t}\n\n\tunbind() {\n\n\t\tconst bindings = this._bindings;\n\n\t\tfor ( let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n}\n\n// Note: This class uses a State pattern on a per-method basis:\n// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n// prototype version of these methods with one that represents\n// the bound state. When the property is not found, the methods\n// become no-ops.\nclass PropertyBinding {\n\n\tconstructor( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName );\n\n\t\tthis.rootNode = rootNode;\n\n\t\t// initial state of these methods that calls 'bind'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n\n\tstatic create( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tstatic sanitizeNodeName( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t}\n\n\tstatic parseTrackName( trackName ) {\n\n\t\tconst matches = _trackRe.exec( trackName );\n\n\t\tif ( matches === null ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t}\n\n\t\tconst results = {\n\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\tnodeName: matches[ 2 ],\n\t\t\tobjectName: matches[ 3 ],\n\t\t\tobjectIndex: matches[ 4 ],\n\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\tpropertyIndex: matches[ 6 ]\n\t\t};\n\n\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\tconst objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t// Object names must be checked against an allowlist. Otherwise, there\n\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t// include '.' characters).\n\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\tresults.objectName = objectName;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t}\n\n\t\treturn results;\n\n\t}\n\n\tstatic findNode( root, nodeName ) {\n\n\t\tif ( nodeName === undefined || nodeName === '' || nodeName === '.' || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tconst bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tconst searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( let i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tconst childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tconst subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable() {}\n\t_setValue_unavailable() {}\n\n\t// Getters\n\n\t_getValue_direct( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.targetObject[ this.propertyName ];\n\n\t}\n\n\t_getValue_array( buffer, offset ) {\n\n\t\tconst source = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t}\n\n\t}\n\n\t_getValue_arrayElement( buffer, offset ) {\n\n\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t}\n\n\t_getValue_toArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t}\n\n\t// Direct\n\n\t_setValue_direct( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// EntireArray\n\n\t_setValue_array( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t}\n\n\t_setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tconst dest = this.resolvedProperty;\n\n\t\tfor ( let i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t}\n\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// ArrayElement\n\n\t_setValue_arrayElement( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t}\n\n\t_setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t// HasToFromArray\n\n\t_setValue_fromArray( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t}\n\n\t_setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.needsUpdate = true;\n\n\t}\n\n\t_setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t}\n\n\t_getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t}\n\n\t_setValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t}\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind() {\n\n\t\tlet targetObject = this.node;\n\t\tconst parsedPath = this.parsedPath;\n\n\t\tconst objectName = parsedPath.objectName;\n\t\tconst propertyName = parsedPath.propertyName;\n\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName );\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.warn( 'THREE.PropertyBinding: No target node found for track: ' + this.path + '.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tlet objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( let i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'map':\n\n\t\t\t\t\tif ( 'map' in targetObject ) {\n\n\t\t\t\t\t\ttargetObject = targetObject.map;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.map ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.map;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tconst nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tconst nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tlet versioning = this.Versioning.None;\n\n\t\tthis.targetObject = targetObject;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tlet bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === 'morphTargetInfluences' ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.morphTargetDictionary[ propertyIndex ] !== undefined ) {\n\n\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[ propertyIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t}\n\n\tunbind() {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n}\n\nPropertyBinding.Composite = Composite;\n\nPropertyBinding.prototype.BindingType = {\n\tDirect: 0,\n\tEntireArray: 1,\n\tArrayElement: 2,\n\tHasFromToArray: 3\n};\n\nPropertyBinding.prototype.Versioning = {\n\tNone: 0,\n\tNeedsUpdate: 1,\n\tMatrixWorldNeedsUpdate: 2\n};\n\nPropertyBinding.prototype.GetterByBindingType = [\n\n\tPropertyBinding.prototype._getValue_direct,\n\tPropertyBinding.prototype._getValue_array,\n\tPropertyBinding.prototype._getValue_arrayElement,\n\tPropertyBinding.prototype._getValue_toArray,\n\n];\n\nPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [\n\n\t[\n\t\t// Direct\n\t\tPropertyBinding.prototype._setValue_direct,\n\t\tPropertyBinding.prototype._setValue_direct_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// EntireArray\n\n\t\tPropertyBinding.prototype._setValue_array,\n\t\tPropertyBinding.prototype._setValue_array_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// ArrayElement\n\t\tPropertyBinding.prototype._setValue_arrayElement,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate,\n\n\t], [\n\n\t\t// HasToFromArray\n\t\tPropertyBinding.prototype._setValue_fromArray,\n\t\tPropertyBinding.prototype._setValue_fromArray_setNeedsUpdate,\n\t\tPropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate,\n\n\t]\n\n];\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n *  - Add objects you would otherwise pass as 'root' to the\n *    constructor or the .clipAction method of AnimationMixer.\n *\n *  - Instead pass this object as 'root'.\n *\n *  - You can also add and remove objects later when the mixer\n *    is running.\n *\n * Note:\n *\n *    Objects of this class appear as one object to the mixer,\n *    so cache control of the individual objects must be done\n *    on the group.\n *\n * Limitation:\n *\n *  - The animated properties must be compatible among the\n *    all objects in the group.\n *\n *  - A single property can either be controlled through a\n *    target group or directly, but not both.\n */\n\nclass AnimationObjectGroup {\n\n\tconstructor() {\n\n\t\tthis.isAnimationObjectGroup = true;\n\n\t\tthis.uuid = generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tconst indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tadd() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet knownObject = undefined,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid;\n\t\t\tlet index = indicesByUUID[ uuid ];\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ];\n\n\t\t\t\t\tlet binding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\tremove() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tconst lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// remove & forget\n\tuncache() {\n\n\t\tconst objects = this._objects,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\tnObjects = objects.length;\n\n\t\tfor ( let i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tconst object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tconst firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tconst lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( let j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tconst bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t}\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\tlet index = indicesByPath[ path ];\n\t\tconst bindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tconst paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( let i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tconst object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t}\n\n\tunsubscribe_( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tconst paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n}\n\nclass AnimationAction {\n\n\tconstructor( mixer, clip, localRoot = null, blendMode = clip.blendMode ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot;\n\t\tthis.blendMode = blendMode;\n\n\t\tconst tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tconst interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\t// State & Scheduling\n\n\tplay() {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t}\n\n\tstop() {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t}\n\n\treset() {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0; // restart clip\n\t\tthis._loopCount = - 1;// forget previous loops\n\t\tthis._startTime = null;// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t}\n\n\tisRunning() {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t}\n\n\t// return true when play has been called\n\tisScheduled() {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t}\n\n\tstartAt( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t}\n\n\tsetLoop( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t}\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t}\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight() {\n\n\t\treturn this._effectiveWeight;\n\n\t}\n\n\tfadeIn( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t}\n\n\tfadeOut( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t}\n\n\tcrossFadeFrom( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tcrossFadeTo( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t}\n\n\tstopFading() {\n\n\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale() {\n\n\t\treturn this._effectiveTimeScale;\n\n\t}\n\n\tsetDuration( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\tsyncWith( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t}\n\n\thalt( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t}\n\n\twarp( startTimeScale, endTimeScale, duration ) {\n\n\t\tconst mixer = this._mixer,\n\t\t\tnow = mixer.time,\n\t\t\ttimeScale = this.timeScale;\n\n\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t}\n\n\tstopWarping() {\n\n\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Object Accessors\n\n\tgetMixer() {\n\n\t\treturn this._mixer;\n\n\t}\n\n\tgetClip() {\n\n\t\treturn this._clip;\n\n\t}\n\n\tgetRoot() {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t}\n\n\t// Interna\n\n\t_update( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tconst startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tconst timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\tdeltaTime = 0;\n\n\t\t\t} else {\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tconst clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tconst weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tconst interpolants = this._interpolants;\n\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\tswitch ( this.blendMode ) {\n\n\t\t\t\tcase AdditiveAnimationBlendMode:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulateAdditive( weight );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\tdefault:\n\n\t\t\t\t\tfor ( let j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_updateWeight( time ) {\n\n\t\tlet weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t}\n\n\t_updateTimeScale( time ) {\n\n\t\tlet timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tconst interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t}\n\n\t_updateTime( deltaTime ) {\n\n\t\tconst duration = this._clip.duration;\n\t\tconst loop = this.loop;\n\n\t\tlet time = this.time + deltaTime;\n\t\tlet loopCount = this._loopCount;\n\n\t\tconst pingPong = ( loop === LoopPingPong );\n\n\t\tif ( deltaTime === 0 ) {\n\n\t\t\tif ( loopCount === - 1 ) return time;\n\n\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t}\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t}\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis.time = time;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tconst loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.time = time;\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn time;\n\n\t}\n\n\t_setEndings( atStart, atEnd, pingPong ) {\n\n\t\tconst settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_scheduleFading( duration, weightNow, weightThen ) {\n\n\t\tconst mixer = this._mixer, now = mixer.time;\n\t\tlet interpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tconst times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\n\t\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n}\n\nconst _controlInterpolantsResultBuffer = new Float32Array( 1 );\n\n\nclass AnimationMixer extends EventDispatcher {\n\n\tconstructor( root ) {\n\n\t\tsuper();\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\t\tthis.time = 0;\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\t_bindAction( action, prototypeAction ) {\n\n\t\tconst root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\n\t\tlet bindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( let i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tconst track = tracks[ i ],\n\t\t\t\ttrackName = track.name;\n\n\t\t\tlet binding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tconst path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t}\n\n\t_activateAction( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tconst rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t}\n\n\t_deactivateAction( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tconst binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t}\n\n\t// Memory manager\n\n\t_initMemoryManager() {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tconst scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction( action ) {\n\n\t\tconst index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t}\n\n\t_addInactiveAction( action, clipUuid, rootUuid ) {\n\n\t\tconst actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tlet actionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tconst knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t}\n\n\t_removeInactiveAction( action ) {\n\n\t\tconst actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tconst clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t}\n\n\t_removeInactiveBindingsForAction( action ) {\n\n\t\tconst bindings = action._propertyBindings;\n\n\t\tfor ( let i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tconst binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t_lendAction( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t}\n\n\t_takeBackAction( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tconst actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t}\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding( binding, rootUuid, trackName ) {\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindings = this._bindings;\n\n\t\tlet bindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t}\n\n\t_removeInactiveBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t}\n\n\t_lendBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t}\n\n\t_takeBackBinding( binding ) {\n\n\t\tconst bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t}\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant() {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++;\n\n\t\tlet interpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, _controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t}\n\n\t_takeBackControlInterpolant( interpolant ) {\n\n\t\tconst interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t}\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction( clip, optionalRoot, blendMode ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid;\n\n\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName( root, clip ) : clip;\n\n\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\n\t\tconst actionsForClip = this._actionsByClip[ clipUuid ];\n\t\tlet prototypeAction = null;\n\n\t\tif ( blendMode === undefined ) {\n\n\t\t\tif ( clipObject !== null ) {\n\n\t\t\t\tblendMode = clipObject.blendMode;\n\n\t\t\t} else {\n\n\t\t\t\tblendMode = NormalAnimationBlendMode;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tconst existingAction = actionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined && existingAction.blendMode === blendMode ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tconst newAction = new AnimationAction( this, clipObject, optionalRoot, blendMode );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t}\n\n\t// get an existing action\n\texistingAction( clip, optionalRoot ) {\n\n\t\tconst root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction() {\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions;\n\n\t\tfor ( let i = nActions - 1; i >= 0; -- i ) {\n\n\t\t\tactions[ i ].stop();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// advance the time and update apply the animation\n\tupdate( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tconst actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( let i = 0; i !== nActions; ++ i ) {\n\n\t\t\tconst action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tconst bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( let i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\t// Allows you to seek to a specific time in an animation.\n\tsetTime( timeInSeconds ) {\n\n\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\tfor ( let i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t}\n\n\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t}\n\n\t// return this mixer's root target object\n\tgetRoot() {\n\n\t\treturn this._root;\n\n\t}\n\n\t// free all resources specific to a particular clip\n\tuncacheClip( clip ) {\n\n\t\tconst actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( let i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tconst action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t}\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot( root ) {\n\n\t\tconst rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( const clipUuid in actionsByClip ) {\n\n\t\t\tconst actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( const trackName in bindingByName ) {\n\n\t\t\t\tconst binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// remove a targeted clip from the cache\n\tuncacheAction( clip, optionalRoot ) {\n\n\t\tconst action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n}\n\nclass Uniform {\n\n\tconstructor( value ) {\n\n\t\tthis.value = value;\n\n\t}\n\n\tclone() {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t}\n\n}\n\nlet _id = 0;\n\nclass UniformsGroup extends EventDispatcher {\n\n\tconstructor() {\n\n\t\tsuper();\n\n\t\tthis.isUniformsGroup = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _id ++ } );\n\n\t\tthis.name = '';\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.uniforms = [];\n\n\t}\n\n\tadd( uniform ) {\n\n\t\tthis.uniforms.push( uniform );\n\n\t\treturn this;\n\n\t}\n\n\tremove( uniform ) {\n\n\t\tconst index = this.uniforms.indexOf( uniform );\n\n\t\tif ( index !== - 1 ) this.uniforms.splice( index, 1 );\n\n\t\treturn this;\n\n\t}\n\n\tsetName( name ) {\n\n\t\tthis.name = name;\n\n\t\treturn this;\n\n\t}\n\n\tsetUsage( value ) {\n\n\t\tthis.usage = value;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\t\tthis.usage = source.usage;\n\n\t\tconst uniformsSource = source.uniforms;\n\n\t\tthis.uniforms.length = 0;\n\n\t\tfor ( let i = 0, l = uniformsSource.length; i < l; i ++ ) {\n\n\t\t\tthis.uniforms.push( uniformsSource[ i ].clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\n\tconstructor( array, stride, meshPerAttribute = 1 ) {\n\n\t\tsuper( array, stride );\n\n\t\tthis.isInstancedInterleavedBuffer = true;\n\n\t\tthis.meshPerAttribute = meshPerAttribute;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n\tclone( data ) {\n\n\t\tconst ib = super.clone( data );\n\n\t\tib.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn ib;\n\n\t}\n\n\ttoJSON( data ) {\n\n\t\tconst json = super.toJSON( data );\n\n\t\tjson.isInstancedInterleavedBuffer = true;\n\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\n\t\treturn json;\n\n\t}\n\n}\n\nclass GLBufferAttribute {\n\n\tconstructor( buffer, type, itemSize, elementSize, count ) {\n\n\t\tthis.isGLBufferAttribute = true;\n\n\t\tthis.name = '';\n\n\t\tthis.buffer = buffer;\n\t\tthis.type = type;\n\t\tthis.itemSize = itemSize;\n\t\tthis.elementSize = elementSize;\n\t\tthis.count = count;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\tsetBuffer( buffer ) {\n\n\t\tthis.buffer = buffer;\n\n\t\treturn this;\n\n\t}\n\n\tsetType( type, elementSize ) {\n\n\t\tthis.type = type;\n\t\tthis.elementSize = elementSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetItemSize( itemSize ) {\n\n\t\tthis.itemSize = itemSize;\n\n\t\treturn this;\n\n\t}\n\n\tsetCount( count ) {\n\n\t\tthis.count = count;\n\n\t\treturn this;\n\n\t}\n\n}\n\nclass Raycaster {\n\n\tconstructor( origin, direction, near = 0, far = Infinity ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near;\n\t\tthis.far = far;\n\t\tthis.camera = null;\n\t\tthis.layers = new Layers();\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: { threshold: 1 },\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t}\n\n\tset( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t}\n\n\tsetFromCamera( coords, camera ) {\n\n\t\tif ( camera.isPerspectiveCamera ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\tthis.camera = camera;\n\n\t\t} else if ( camera.isOrthographicCamera ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\tthis.camera = camera;\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type: ' + camera.type );\n\n\t\t}\n\n\t}\n\n\tintersectObject( object, recursive = true, intersects = [] ) {\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n\tintersectObjects( objects, recursive = true, intersects = [] ) {\n\n\t\tfor ( let i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.layers.test( raycaster.layers ) ) {\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t}\n\n\tif ( recursive === true ) {\n\n\t\tconst children = object.children;\n\n\t\tfor ( let i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n * The azimuthal angle (theta) is measured from the positive z-axis.\n */\n\n\nclass Spherical {\n\n\tconstructor( radius = 1, phi = 0, theta = 0 ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi; // polar angle\n\t\tthis.theta = theta; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t}\n\n\t// restrict phi to be between EPS and PI-EPS\n\tmakeSafe() {\n\n\t\tconst EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.phi = Math.acos( clamp( y / this.radius, - 1, 1 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\n/**\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n */\n\nclass Cylindrical {\n\n\tconstructor( radius = 1, theta = 0, y = 0 ) {\n\n\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = y; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tset( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tcopy( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t}\n\n\tsetFromVector3( v ) {\n\n\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t}\n\n\tsetFromCartesianCoords( x, y, z ) {\n\n\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\tthis.theta = Math.atan2( x, z );\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$4 = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector$4.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\treturn this.clampPoint( point, _vector$4 ).distanceTo( point );\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nconst _startP = /*@__PURE__*/ new Vector3();\nconst _startEnd = /*@__PURE__*/ new Vector3();\n\nclass Line3 {\n\n\tconstructor( start = new Vector3(), end = new Vector3() ) {\n\n\t\tthis.start = start;\n\t\tthis.end = end;\n\n\t}\n\n\tset( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t}\n\n\tdelta( target ) {\n\n\t\treturn target.subVectors( this.end, this.start );\n\n\t}\n\n\tdistanceSq() {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t}\n\n\tdistance() {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t}\n\n\tat( t, target ) {\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tclosestPointToPointParameter( point, clampToLine ) {\n\n\t\t_startP.subVectors( point, this.start );\n\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\tconst startEnd2 = _startEnd.dot( _startEnd );\n\t\tconst startEnd_startP = _startEnd.dot( _startP );\n\n\t\tlet t = startEnd_startP / startEnd2;\n\n\t\tif ( clampToLine ) {\n\n\t\t\tt = clamp( t, 0, 1 );\n\n\t\t}\n\n\t\treturn t;\n\n\t}\n\n\tclosestPointToPoint( point, clampToLine, target ) {\n\n\t\tconst t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t}\n\n\tapplyMatrix4( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t}\n\n\tequals( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n}\n\nconst _vector$3 = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$3.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\nconst _vector$2 = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$2.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$2.x, _vector$2.y, _vector$2.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nclass PointLightHelper extends Mesh {\n\n\tconstructor( light, sphereSize, color ) {\n\n\t\tconst geometry = new SphereGeometry( sphereSize, 4, 2 );\n\t\tconst material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.light = light;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'PointLightHelper';\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t// TODO: delete this comment?\n\tconst distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tconst d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tconst d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t}\n\n}\n\nconst _vector$1 = /*@__PURE__*/ new Vector3();\nconst _color1 = /*@__PURE__*/ new Color();\nconst _color2 = /*@__PURE__*/ new Color();\n\nclass HemisphereLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'HemisphereLightHelper';\n\n\t\tconst geometry = new OctahedronGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false, toneMapped: false } );\n\t\tif ( this.color === undefined ) this.material.vertexColors = true;\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\t\tconst colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tconst mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tconst colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( let i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tconst color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\n\t\tmesh.lookAt( _vector$1.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t}\n\n}\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nconst _box = /*@__PURE__*/ new Box3();\n\nclass BoxHelper extends LineSegments {\n\n\tconstructor( object, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tconst positions = new Float32Array( 8 * 3 );\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.object = object;\n\t\tthis.type = 'BoxHelper';\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tupdate( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box.isEmpty() ) return;\n\n\t\tconst min = _box.min;\n\t\tconst max = _box.max;\n\n\t\t/*\n\t\t\t5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tconst position = this.geometry.attributes.position;\n\t\tconst array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tsetFromObject( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source, recursive ) {\n\n\t\tsuper.copy( source, recursive );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass Box3Helper extends LineSegments {\n\n\tconstructor( box, color = 0xffff00 ) {\n\n\t\tconst indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tconst positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.box = box;\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst box = this.box;\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass PlaneHelper extends Line {\n\n\tconstructor( plane, size = 1, hex = 0xffff00 ) {\n\n\t\tconst color = hex;\n\n\t\tconst positions = [ 1, - 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tsuper( geometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = size;\n\n\t\tconst positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tconst geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false, toneMapped: false } ) ) );\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tthis.position.set( 0, 0, 0 );\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, 1 );\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tthis.translateZ( - this.plane.constant );\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t}\n\n}\n\nconst _axis = /*@__PURE__*/ new Vector3();\nlet _lineGeometry, _coneGeometry;\n\nclass ArrowHelper extends Object3D {\n\n\t// dir is assumed to be normalized\n\n\tconstructor( dir = new Vector3( 0, 0, 1 ), origin = new Vector3( 0, 0, 0 ), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tsuper();\n\n\t\tthis.type = 'ArrowHelper';\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color, toneMapped: false } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tsetDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tconst radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t}\n\n\tsetLength( length, headLength = length * 0.2, headWidth = headLength * 0.2 ) {\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t}\n\n\tsetColor( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.line.geometry.dispose();\n\t\tthis.line.material.dispose();\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n}\n\nclass AxesHelper extends LineSegments {\n\n\tconstructor( size = 1 ) {\n\n\t\tconst vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tconst colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'AxesHelper';\n\n\t}\n\n\tsetColors( xAxisColor, yAxisColor, zAxisColor ) {\n\n\t\tconst color = new Color();\n\t\tconst array = this.geometry.attributes.color.array;\n\n\t\tcolor.set( xAxisColor );\n\t\tcolor.toArray( array, 0 );\n\t\tcolor.toArray( array, 3 );\n\n\t\tcolor.set( yAxisColor );\n\t\tcolor.toArray( array, 6 );\n\t\tcolor.toArray( array, 9 );\n\n\t\tcolor.set( zAxisColor );\n\t\tcolor.toArray( array, 12 );\n\t\tcolor.toArray( array, 15 );\n\n\t\tthis.geometry.attributes.color.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\nclass ShapePath {\n\n\tconstructor() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tmoveTo( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tlineTo( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t\treturn this;\n\n\t}\n\n\tquadraticCurveTo( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tbezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\treturn this;\n\n\t}\n\n\tsplineThru( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t\treturn this;\n\n\t}\n\n\ttoShapes( isCCW ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tconst shapes = [];\n\n\t\t\tfor ( let i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tconst tmpPath = inSubpaths[ i ];\n\n\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tconst polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tlet inside = false;\n\t\t\tfor ( let p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tlet edgeLowPt = inPolygon[ p ];\n\t\t\t\tlet edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconst perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tconst isClockWise = ShapeUtils.isClockWise;\n\n\t\tconst subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tlet solid, tmpPath, tmpShape;\n\t\tconst shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tlet holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tconst betterShapeHoles = [];\n\t\tconst newShapes = [];\n\t\tlet newShapeHoles = [];\n\t\tlet mainIdx = 0;\n\t\tlet tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( let i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tlet ambiguous = false;\n\t\t\tlet toChange = 0;\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tconst sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( let hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tconst ho = sho[ hIdx ];\n\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\tfor ( let s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange ++;\n\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( toChange > 0 && ambiguous === false ) {\n\n\t\t\t\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet tmpHoles;\n\n\t\tfor ( let i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( let j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n}\n\nif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\trevision: REVISION,\n\t} } ) );\n\n}\n\nif ( typeof window !== 'undefined' ) {\n\n\tif ( window.__THREE__ ) {\n\n\t\tconsole.warn( 'WARNING: Multiple instances of Three.js being imported.' );\n\n\t} else {\n\n\t\twindow.__THREE__ = REVISION;\n\n\t}\n\n}\n\nexport { ACESFilmicToneMapping, AddEquation, AddOperation, AdditiveAnimationBlendMode, AdditiveBlending, AlphaFormat, AlwaysCompare, AlwaysDepth, AlwaysStencilFunc, AmbientLight, AnimationAction, AnimationClip, AnimationLoader, AnimationMixer, AnimationObjectGroup, AnimationUtils, ArcCurve, ArrayCamera, ArrowHelper, AttachedBindMode, Audio, AudioAnalyser, AudioContext, AudioListener, AudioLoader, AxesHelper, BackSide, BasicDepthPacking, BasicShadowMap, BatchedMesh, Bone, BooleanKeyframeTrack, Box2, Box3, Box3Helper, BoxGeometry, BoxHelper, BufferAttribute, BufferGeometry, BufferGeometryLoader, ByteType, Cache, Camera, CameraHelper, CanvasTexture, CapsuleGeometry, CatmullRomCurve3, CineonToneMapping, CircleGeometry, ClampToEdgeWrapping, Clock, Color, ColorKeyframeTrack, ColorManagement, CompressedArrayTexture, CompressedCubeTexture, CompressedTexture, CompressedTextureLoader, ConeGeometry, ConstantAlphaFactor, ConstantColorFactor, CubeCamera, CubeReflectionMapping, CubeRefractionMapping, CubeTexture, CubeTextureLoader, CubeUVReflectionMapping, CubicBezierCurve, CubicBezierCurve3, CubicInterpolant, CullFaceBack, CullFaceFront, CullFaceFrontBack, CullFaceNone, Curve, CurvePath, CustomBlending, CustomToneMapping, CylinderGeometry, Cylindrical, Data3DTexture, DataArrayTexture, DataTexture, DataTextureLoader, DataUtils, DecrementStencilOp, DecrementWrapStencilOp, DefaultLoadingManager, DepthFormat, DepthStencilFormat, DepthTexture, DetachedBindMode, DirectionalLight, DirectionalLightHelper, DiscreteInterpolant, DisplayP3ColorSpace, DodecahedronGeometry, DoubleSide, DstAlphaFactor, DstColorFactor, DynamicCopyUsage, DynamicDrawUsage, DynamicReadUsage, EdgesGeometry, EllipseCurve, EqualCompare, EqualDepth, EqualStencilFunc, EquirectangularReflectionMapping, EquirectangularRefractionMapping, Euler, EventDispatcher, ExtrudeGeometry, FileLoader, Float16BufferAttribute, Float32BufferAttribute, Float64BufferAttribute, FloatType, Fog, FogExp2, FramebufferTexture, FrontSide, Frustum, GLBufferAttribute, GLSL1, GLSL3, GreaterCompare, GreaterDepth, GreaterEqualCompare, GreaterEqualDepth, GreaterEqualStencilFunc, GreaterStencilFunc, GridHelper, Group, HalfFloatType, HemisphereLight, HemisphereLightHelper, IcosahedronGeometry, ImageBitmapLoader, ImageLoader, ImageUtils, IncrementStencilOp, IncrementWrapStencilOp, InstancedBufferAttribute, InstancedBufferGeometry, InstancedInterleavedBuffer, InstancedMesh, Int16BufferAttribute, Int32BufferAttribute, Int8BufferAttribute, IntType, InterleavedBuffer, InterleavedBufferAttribute, Interpolant, InterpolateDiscrete, InterpolateLinear, InterpolateSmooth, InvertStencilOp, KeepStencilOp, KeyframeTrack, LOD, LatheGeometry, Layers, LessCompare, LessDepth, LessEqualCompare, LessEqualDepth, LessEqualStencilFunc, LessStencilFunc, Light, LightProbe, Line, Line3, LineBasicMaterial, LineCurve, LineCurve3, LineDashedMaterial, LineLoop, LineSegments, LinearDisplayP3ColorSpace, LinearEncoding, LinearFilter, LinearInterpolant, LinearMipMapLinearFilter, LinearMipMapNearestFilter, LinearMipmapLinearFilter, LinearMipmapNearestFilter, LinearSRGBColorSpace, LinearToneMapping, LinearTransfer, Loader, LoaderUtils, LoadingManager, LoopOnce, LoopPingPong, LoopRepeat, LuminanceAlphaFormat, LuminanceFormat, MOUSE, Material, MaterialLoader, MathUtils, Matrix3, Matrix4, MaxEquation, Mesh, MeshBasicMaterial, MeshDepthMaterial, MeshDistanceMaterial, MeshLambertMaterial, MeshMatcapMaterial, MeshNormalMaterial, MeshPhongMaterial, MeshPhysicalMaterial, MeshStandardMaterial, MeshToonMaterial, MinEquation, MirroredRepeatWrapping, MixOperation, MultiplyBlending, MultiplyOperation, NearestFilter, NearestMipMapLinearFilter, NearestMipMapNearestFilter, NearestMipmapLinearFilter, NearestMipmapNearestFilter, NeverCompare, NeverDepth, NeverStencilFunc, NoBlending, NoColorSpace, NoToneMapping, NormalAnimationBlendMode, NormalBlending, NotEqualCompare, NotEqualDepth, NotEqualStencilFunc, NumberKeyframeTrack, Object3D, ObjectLoader, ObjectSpaceNormalMap, OctahedronGeometry, OneFactor, OneMinusConstantAlphaFactor, OneMinusConstantColorFactor, OneMinusDstAlphaFactor, OneMinusDstColorFactor, OneMinusSrcAlphaFactor, OneMinusSrcColorFactor, OrthographicCamera, P3Primaries, PCFShadowMap, PCFSoftShadowMap, PMREMGenerator, Path, PerspectiveCamera, Plane, PlaneGeometry, PlaneHelper, PointLight, PointLightHelper, Points, PointsMaterial, PolarGridHelper, PolyhedronGeometry, PositionalAudio, PropertyBinding, PropertyMixer, QuadraticBezierCurve, QuadraticBezierCurve3, Quaternion, QuaternionKeyframeTrack, QuaternionLinearInterpolant, RED_GREEN_RGTC2_Format, RED_RGTC1_Format, REVISION, RGBADepthPacking, RGBAFormat, RGBAIntegerFormat, RGBA_ASTC_10x10_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_BPTC_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT1_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT5_Format, RGB_BPTC_SIGNED_Format, RGB_BPTC_UNSIGNED_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGB_S3TC_DXT1_Format, RGFormat, RGIntegerFormat, RawShaderMaterial, Ray, Raycaster, Rec709Primaries, RectAreaLight, RedFormat, RedIntegerFormat, ReinhardToneMapping, RenderTarget, RepeatWrapping, ReplaceStencilOp, ReverseSubtractEquation, RingGeometry, SIGNED_RED_GREEN_RGTC2_Format, SIGNED_RED_RGTC1_Format, SRGBColorSpace, SRGBTransfer, Scene, ShaderChunk, ShaderLib, ShaderMaterial, ShadowMaterial, Shape, ShapeGeometry, ShapePath, ShapeUtils, ShortType, Skeleton, SkeletonHelper, SkinnedMesh, Source, Sphere, SphereGeometry, Spherical, SphericalHarmonics3, SplineCurve, SpotLight, SpotLightHelper, Sprite, SpriteMaterial, SrcAlphaFactor, SrcAlphaSaturateFactor, SrcColorFactor, StaticCopyUsage, StaticDrawUsage, StaticReadUsage, StereoCamera, StreamCopyUsage, StreamDrawUsage, StreamReadUsage, StringKeyframeTrack, SubtractEquation, SubtractiveBlending, TOUCH, TangentSpaceNormalMap, TetrahedronGeometry, Texture, TextureLoader, TorusGeometry, TorusKnotGeometry, Triangle, TriangleFanDrawMode, TriangleStripDrawMode, TrianglesDrawMode, TubeGeometry, TwoPassDoubleSide, UVMapping, Uint16BufferAttribute, Uint32BufferAttribute, Uint8BufferAttribute, Uint8ClampedBufferAttribute, Uniform, UniformsGroup, UniformsLib, UniformsUtils, UnsignedByteType, UnsignedInt248Type, UnsignedIntType, UnsignedShort4444Type, UnsignedShort5551Type, UnsignedShortType, VSMShadowMap, Vector2, Vector3, Vector4, VectorKeyframeTrack, VideoTexture, WebGL1Renderer, WebGL3DRenderTarget, WebGLArrayRenderTarget, WebGLCoordinateSystem, WebGLCubeRenderTarget, WebGLMultipleRenderTargets, WebGLRenderTarget, WebGLRenderer, WebGLUtils, WebGPUCoordinateSystem, WireframeGeometry, WrapAroundEnding, ZeroCurvatureEnding, ZeroFactor, ZeroSlopeEnding, ZeroStencilOp, _SRGBAFormat, createCanvasElement, sRGBEncoding };\n","import {\n\tEventDispatcher,\n\tMathUtils,\n\tMOUSE,\n\tQuaternion,\n\tVector2,\n\tVector3\n} from 'three';\n\nconst _changeEvent = { type: 'change' };\nconst _startEvent = { type: 'start' };\nconst _endEvent = { type: 'end' };\n\nclass TrackballControls extends EventDispatcher {\n\n\tconstructor( object, domElement ) {\n\n\t\tsuper();\n\n\t\tconst scope = this;\n\t\tconst STATE = { NONE: - 1, ROTATE: 0, ZOOM: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_ZOOM_PAN: 4 };\n\n\t\tthis.object = object;\n\t\tthis.domElement = domElement;\n\t\tthis.domElement.style.touchAction = 'none'; // disable touch scroll\n\n\t\t// API\n\n\t\tthis.enabled = true;\n\n\t\tthis.screen = { left: 0, top: 0, width: 0, height: 0 };\n\n\t\tthis.rotateSpeed = 1.0;\n\t\tthis.zoomSpeed = 1.2;\n\t\tthis.panSpeed = 0.3;\n\n\t\tthis.noRotate = false;\n\t\tthis.noZoom = false;\n\t\tthis.noPan = false;\n\n\t\tthis.staticMoving = false;\n\t\tthis.dynamicDampingFactor = 0.2;\n\n\t\tthis.minDistance = 0;\n\t\tthis.maxDistance = Infinity;\n\n\t\tthis.minZoom = 0;\n\t\tthis.maxZoom = Infinity;\n\n\t\tthis.keys = [ 'KeyA' /*A*/, 'KeyS' /*S*/, 'KeyD' /*D*/ ];\n\n\t\tthis.mouseButtons = { LEFT: MOUSE.ROTATE, MIDDLE: MOUSE.DOLLY, RIGHT: MOUSE.PAN };\n\n\t\t// internals\n\n\t\tthis.target = new Vector3();\n\n\t\tconst EPS = 0.000001;\n\n\t\tconst lastPosition = new Vector3();\n\t\tlet lastZoom = 1;\n\n\t\tlet _state = STATE.NONE,\n\t\t\t_keyState = STATE.NONE,\n\n\t\t\t_touchZoomDistanceStart = 0,\n\t\t\t_touchZoomDistanceEnd = 0,\n\n\t\t\t_lastAngle = 0;\n\n\t\tconst _eye = new Vector3(),\n\n\t\t\t_movePrev = new Vector2(),\n\t\t\t_moveCurr = new Vector2(),\n\n\t\t\t_lastAxis = new Vector3(),\n\n\t\t\t_zoomStart = new Vector2(),\n\t\t\t_zoomEnd = new Vector2(),\n\n\t\t\t_panStart = new Vector2(),\n\t\t\t_panEnd = new Vector2(),\n\n\t\t\t_pointers = [],\n\t\t\t_pointerPositions = {};\n\n\t\t// for reset\n\n\t\tthis.target0 = this.target.clone();\n\t\tthis.position0 = this.object.position.clone();\n\t\tthis.up0 = this.object.up.clone();\n\t\tthis.zoom0 = this.object.zoom;\n\n\t\t// methods\n\n\t\tthis.handleResize = function () {\n\n\t\t\tconst box = scope.domElement.getBoundingClientRect();\n\t\t\t// adjustments come from similar code in the jquery offset() function\n\t\t\tconst d = scope.domElement.ownerDocument.documentElement;\n\t\t\tscope.screen.left = box.left + window.pageXOffset - d.clientLeft;\n\t\t\tscope.screen.top = box.top + window.pageYOffset - d.clientTop;\n\t\t\tscope.screen.width = box.width;\n\t\t\tscope.screen.height = box.height;\n\n\t\t};\n\n\t\tconst getMouseOnScreen = ( function () {\n\n\t\t\tconst vector = new Vector2();\n\n\t\t\treturn function getMouseOnScreen( pageX, pageY ) {\n\n\t\t\t\tvector.set(\n\t\t\t\t\t( pageX - scope.screen.left ) / scope.screen.width,\n\t\t\t\t\t( pageY - scope.screen.top ) / scope.screen.height\n\t\t\t\t);\n\n\t\t\t\treturn vector;\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tconst getMouseOnCircle = ( function () {\n\n\t\t\tconst vector = new Vector2();\n\n\t\t\treturn function getMouseOnCircle( pageX, pageY ) {\n\n\t\t\t\tvector.set(\n\t\t\t\t\t( ( pageX - scope.screen.width * 0.5 - scope.screen.left ) / ( scope.screen.width * 0.5 ) ),\n\t\t\t\t\t( ( scope.screen.height + 2 * ( scope.screen.top - pageY ) ) / scope.screen.width ) // screen.width intentional\n\t\t\t\t);\n\n\t\t\t\treturn vector;\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.rotateCamera = ( function () {\n\n\t\t\tconst axis = new Vector3(),\n\t\t\t\tquaternion = new Quaternion(),\n\t\t\t\teyeDirection = new Vector3(),\n\t\t\t\tobjectUpDirection = new Vector3(),\n\t\t\t\tobjectSidewaysDirection = new Vector3(),\n\t\t\t\tmoveDirection = new Vector3();\n\n\t\t\treturn function rotateCamera() {\n\n\t\t\t\tmoveDirection.set( _moveCurr.x - _movePrev.x, _moveCurr.y - _movePrev.y, 0 );\n\t\t\t\tlet angle = moveDirection.length();\n\n\t\t\t\tif ( angle ) {\n\n\t\t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n\n\t\t\t\t\teyeDirection.copy( _eye ).normalize();\n\t\t\t\t\tobjectUpDirection.copy( scope.object.up ).normalize();\n\t\t\t\t\tobjectSidewaysDirection.crossVectors( objectUpDirection, eyeDirection ).normalize();\n\n\t\t\t\t\tobjectUpDirection.setLength( _moveCurr.y - _movePrev.y );\n\t\t\t\t\tobjectSidewaysDirection.setLength( _moveCurr.x - _movePrev.x );\n\n\t\t\t\t\tmoveDirection.copy( objectUpDirection.add( objectSidewaysDirection ) );\n\n\t\t\t\t\taxis.crossVectors( moveDirection, _eye ).normalize();\n\n\t\t\t\t\tangle *= scope.rotateSpeed;\n\t\t\t\t\tquaternion.setFromAxisAngle( axis, angle );\n\n\t\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t\tscope.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t\t_lastAxis.copy( axis );\n\t\t\t\t\t_lastAngle = angle;\n\n\t\t\t\t} else if ( ! scope.staticMoving && _lastAngle ) {\n\n\t\t\t\t\t_lastAngle *= Math.sqrt( 1.0 - scope.dynamicDampingFactor );\n\t\t\t\t\t_eye.copy( scope.object.position ).sub( scope.target );\n\t\t\t\t\tquaternion.setFromAxisAngle( _lastAxis, _lastAngle );\n\t\t\t\t\t_eye.applyQuaternion( quaternion );\n\t\t\t\t\tscope.object.up.applyQuaternion( quaternion );\n\n\t\t\t\t}\n\n\t\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t\t};\n\n\t\t}() );\n\n\n\t\tthis.zoomCamera = function () {\n\n\t\t\tlet factor;\n\n\t\t\tif ( _state === STATE.TOUCH_ZOOM_PAN ) {\n\n\t\t\t\tfactor = _touchZoomDistanceStart / _touchZoomDistanceEnd;\n\t\t\t\t_touchZoomDistanceStart = _touchZoomDistanceEnd;\n\n\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\tscope.object.zoom = MathUtils.clamp( scope.object.zoom / factor, scope.minZoom, scope.maxZoom );\n\n\t\t\t\t\tif ( lastZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfactor = 1.0 + ( _zoomEnd.y - _zoomStart.y ) * scope.zoomSpeed;\n\n\t\t\t\tif ( factor !== 1.0 && factor > 0.0 ) {\n\n\t\t\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\t\t\t_eye.multiplyScalar( factor );\n\n\t\t\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\tscope.object.zoom = MathUtils.clamp( scope.object.zoom / factor, scope.minZoom, scope.maxZoom );\n\n\t\t\t\t\t\tif ( lastZoom !== scope.object.zoom ) {\n\n\t\t\t\t\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( scope.staticMoving ) {\n\n\t\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_zoomStart.y += ( _zoomEnd.y - _zoomStart.y ) * this.dynamicDampingFactor;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.panCamera = ( function () {\n\n\t\t\tconst mouseChange = new Vector2(),\n\t\t\t\tobjectUp = new Vector3(),\n\t\t\t\tpan = new Vector3();\n\n\t\t\treturn function panCamera() {\n\n\t\t\t\tmouseChange.copy( _panEnd ).sub( _panStart );\n\n\t\t\t\tif ( mouseChange.lengthSq() ) {\n\n\t\t\t\t\tif ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\t\t\tconst scale_x = ( scope.object.right - scope.object.left ) / scope.object.zoom / scope.domElement.clientWidth;\n\t\t\t\t\t\tconst scale_y = ( scope.object.top - scope.object.bottom ) / scope.object.zoom / scope.domElement.clientWidth;\n\n\t\t\t\t\t\tmouseChange.x *= scale_x;\n\t\t\t\t\t\tmouseChange.y *= scale_y;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmouseChange.multiplyScalar( _eye.length() * scope.panSpeed );\n\n\t\t\t\t\tpan.copy( _eye ).cross( scope.object.up ).setLength( mouseChange.x );\n\t\t\t\t\tpan.add( objectUp.copy( scope.object.up ).setLength( mouseChange.y ) );\n\n\t\t\t\t\tscope.object.position.add( pan );\n\t\t\t\t\tscope.target.add( pan );\n\n\t\t\t\t\tif ( scope.staticMoving ) {\n\n\t\t\t\t\t\t_panStart.copy( _panEnd );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t_panStart.add( mouseChange.subVectors( _panEnd, _panStart ).multiplyScalar( scope.dynamicDampingFactor ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}() );\n\n\t\tthis.checkDistances = function () {\n\n\t\t\tif ( ! scope.noZoom || ! scope.noPan ) {\n\n\t\t\t\tif ( _eye.lengthSq() > scope.maxDistance * scope.maxDistance ) {\n\n\t\t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.maxDistance ) );\n\t\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _eye.lengthSq() < scope.minDistance * scope.minDistance ) {\n\n\t\t\t\t\tscope.object.position.addVectors( scope.target, _eye.setLength( scope.minDistance ) );\n\t\t\t\t\t_zoomStart.copy( _zoomEnd );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.update = function () {\n\n\t\t\t_eye.subVectors( scope.object.position, scope.target );\n\n\t\t\tif ( ! scope.noRotate ) {\n\n\t\t\t\tscope.rotateCamera();\n\n\t\t\t}\n\n\t\t\tif ( ! scope.noZoom ) {\n\n\t\t\t\tscope.zoomCamera();\n\n\t\t\t}\n\n\t\t\tif ( ! scope.noPan ) {\n\n\t\t\t\tscope.panCamera();\n\n\t\t\t}\n\n\t\t\tscope.object.position.addVectors( scope.target, _eye );\n\n\t\t\tif ( scope.object.isPerspectiveCamera ) {\n\n\t\t\t\tscope.checkDistances();\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\n\t\t\t\t}\n\n\t\t\t} else if ( scope.object.isOrthographicCamera ) {\n\n\t\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\t\tif ( lastPosition.distanceToSquared( scope.object.position ) > EPS || lastZoom !== scope.object.zoom ) {\n\n\t\t\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\t\t\tlastPosition.copy( scope.object.position );\n\t\t\t\t\tlastZoom = scope.object.zoom;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.TrackballControls: Unsupported camera type' );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.reset = function () {\n\n\t\t\t_state = STATE.NONE;\n\t\t\t_keyState = STATE.NONE;\n\n\t\t\tscope.target.copy( scope.target0 );\n\t\t\tscope.object.position.copy( scope.position0 );\n\t\t\tscope.object.up.copy( scope.up0 );\n\t\t\tscope.object.zoom = scope.zoom0;\n\n\t\t\tscope.object.updateProjectionMatrix();\n\n\t\t\t_eye.subVectors( scope.object.position, scope.target );\n\n\t\t\tscope.object.lookAt( scope.target );\n\n\t\t\tscope.dispatchEvent( _changeEvent );\n\n\t\t\tlastPosition.copy( scope.object.position );\n\t\t\tlastZoom = scope.object.zoom;\n\n\t\t};\n\n\t\t// listeners\n\n\t\tfunction onPointerDown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( _pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.setPointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.addEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.addEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\taddPointer( event );\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchStart( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseDown( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerMove( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchMove( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseMove( event );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onPointerUp( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( event.pointerType === 'touch' ) {\n\n\t\t\t\tonTouchEnd( event );\n\n\t\t\t} else {\n\n\t\t\t\tonMouseUp();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tremovePointer( event );\n\n\t\t\tif ( _pointers.length === 0 ) {\n\n\t\t\t\tscope.domElement.releasePointerCapture( event.pointerId );\n\n\t\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\t}\n\n\n\t\t}\n\n\t\tfunction onPointerCancel( event ) {\n\n\t\t\tremovePointer( event );\n\n\t\t}\n\n\t\tfunction keydown( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\twindow.removeEventListener( 'keydown', keydown );\n\n\t\t\tif ( _keyState !== STATE.NONE ) {\n\n\t\t\t\treturn;\n\n\t\t\t} else if ( event.code === scope.keys[ STATE.ROTATE ] && ! scope.noRotate ) {\n\n\t\t\t\t_keyState = STATE.ROTATE;\n\n\t\t\t} else if ( event.code === scope.keys[ STATE.ZOOM ] && ! scope.noZoom ) {\n\n\t\t\t\t_keyState = STATE.ZOOM;\n\n\t\t\t} else if ( event.code === scope.keys[ STATE.PAN ] && ! scope.noPan ) {\n\n\t\t\t\t_keyState = STATE.PAN;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction keyup() {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\t_keyState = STATE.NONE;\n\n\t\t\twindow.addEventListener( 'keydown', keydown );\n\n\t\t}\n\n\t\tfunction onMouseDown( event ) {\n\n\t\t\tif ( _state === STATE.NONE ) {\n\n\t\t\t\tswitch ( event.button ) {\n\n\t\t\t\t\tcase scope.mouseButtons.LEFT:\n\t\t\t\t\t\t_state = STATE.ROTATE;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.mouseButtons.MIDDLE:\n\t\t\t\t\t\t_state = STATE.ZOOM;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase scope.mouseButtons.RIGHT:\n\t\t\t\t\t\t_state = STATE.PAN;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconst state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n\n\t\t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t\t_movePrev.copy( _moveCurr );\n\n\t\t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n\n\t\t\t\t_zoomStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t\t_zoomEnd.copy( _zoomStart );\n\n\t\t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n\n\t\t\t\t_panStart.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\t\t\t\t_panEnd.copy( _panStart );\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t}\n\n\t\tfunction onMouseMove( event ) {\n\n\t\t\tconst state = ( _keyState !== STATE.NONE ) ? _keyState : _state;\n\n\t\t\tif ( state === STATE.ROTATE && ! scope.noRotate ) {\n\n\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\n\t\t\t} else if ( state === STATE.ZOOM && ! scope.noZoom ) {\n\n\t\t\t\t_zoomEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t\t} else if ( state === STATE.PAN && ! scope.noPan ) {\n\n\t\t\t\t_panEnd.copy( getMouseOnScreen( event.pageX, event.pageY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onMouseUp() {\n\n\t\t\t_state = STATE.NONE;\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onMouseWheel( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tif ( scope.noZoom === true ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t\tswitch ( event.deltaMode ) {\n\n\t\t\t\tcase 2:\n\t\t\t\t\t// Zoom in pages\n\t\t\t\t\t_zoomStart.y -= event.deltaY * 0.025;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\t// Zoom in lines\n\t\t\t\t\t_zoomStart.y -= event.deltaY * 0.01;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t// undefined, 0, assume pixels\n\t\t\t\t\t_zoomStart.y -= event.deltaY * 0.00025;\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction onTouchStart( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( _pointers.length ) {\n\n\t\t\t\tcase 1:\n\t\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t\t_moveCurr.copy( getMouseOnCircle( _pointers[ 0 ].pageX, _pointers[ 0 ].pageY ) );\n\t\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // 2 or more\n\t\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\t\t\t\t\tconst dx = _pointers[ 0 ].pageX - _pointers[ 1 ].pageX;\n\t\t\t\t\tconst dy = _pointers[ 0 ].pageY - _pointers[ 1 ].pageY;\n\t\t\t\t\t_touchZoomDistanceEnd = _touchZoomDistanceStart = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tconst x = ( _pointers[ 0 ].pageX + _pointers[ 1 ].pageX ) / 2;\n\t\t\t\t\tconst y = ( _pointers[ 0 ].pageY + _pointers[ 1 ].pageY ) / 2;\n\t\t\t\t\t_panStart.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t\t_panEnd.copy( _panStart );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _startEvent );\n\n\t\t}\n\n\t\tfunction onTouchMove( event ) {\n\n\t\t\ttrackPointer( event );\n\n\t\t\tswitch ( _pointers.length ) {\n\n\t\t\t\tcase 1:\n\t\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // 2 or more\n\n\t\t\t\t\tconst position = getSecondPointerPosition( event );\n\n\t\t\t\t\tconst dx = event.pageX - position.x;\n\t\t\t\t\tconst dy = event.pageY - position.y;\n\t\t\t\t\t_touchZoomDistanceEnd = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\t\tconst x = ( event.pageX + position.x ) / 2;\n\t\t\t\t\tconst y = ( event.pageY + position.y ) / 2;\n\t\t\t\t\t_panEnd.copy( getMouseOnScreen( x, y ) );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onTouchEnd( event ) {\n\n\t\t\tswitch ( _pointers.length ) {\n\n\t\t\t\tcase 0:\n\t\t\t\t\t_state = STATE.NONE;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\t_state = STATE.TOUCH_ROTATE;\n\t\t\t\t\t_moveCurr.copy( getMouseOnCircle( event.pageX, event.pageY ) );\n\t\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\t_state = STATE.TOUCH_ZOOM_PAN;\n\n\t\t\t\t\tfor ( let i = 0; i < _pointers.length; i ++ ) {\n\n\t\t\t\t\t\tif ( _pointers[ i ].pointerId !== event.pointerId ) {\n\n\t\t\t\t\t\t\tconst position = _pointerPositions[ _pointers[ i ].pointerId ];\n\t\t\t\t\t\t\t_moveCurr.copy( getMouseOnCircle( position.x, position.y ) );\n\t\t\t\t\t\t\t_movePrev.copy( _moveCurr );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tscope.dispatchEvent( _endEvent );\n\n\t\t}\n\n\t\tfunction contextmenu( event ) {\n\n\t\t\tif ( scope.enabled === false ) return;\n\n\t\t\tevent.preventDefault();\n\n\t\t}\n\n\t\tfunction addPointer( event ) {\n\n\t\t\t_pointers.push( event );\n\n\t\t}\n\n\t\tfunction removePointer( event ) {\n\n\t\t\tdelete _pointerPositions[ event.pointerId ];\n\n\t\t\tfor ( let i = 0; i < _pointers.length; i ++ ) {\n\n\t\t\t\tif ( _pointers[ i ].pointerId == event.pointerId ) {\n\n\t\t\t\t\t_pointers.splice( i, 1 );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction trackPointer( event ) {\n\n\t\t\tlet position = _pointerPositions[ event.pointerId ];\n\n\t\t\tif ( position === undefined ) {\n\n\t\t\t\tposition = new Vector2();\n\t\t\t\t_pointerPositions[ event.pointerId ] = position;\n\n\t\t\t}\n\n\t\t\tposition.set( event.pageX, event.pageY );\n\n\t\t}\n\n\t\tfunction getSecondPointerPosition( event ) {\n\n\t\t\tconst pointer = ( event.pointerId === _pointers[ 0 ].pointerId ) ? _pointers[ 1 ] : _pointers[ 0 ];\n\n\t\t\treturn _pointerPositions[ pointer.pointerId ];\n\n\t\t}\n\n\t\tthis.dispose = function () {\n\n\t\t\tscope.domElement.removeEventListener( 'contextmenu', contextmenu );\n\n\t\t\tscope.domElement.removeEventListener( 'pointerdown', onPointerDown );\n\t\t\tscope.domElement.removeEventListener( 'pointercancel', onPointerCancel );\n\t\t\tscope.domElement.removeEventListener( 'wheel', onMouseWheel );\n\n\t\t\tscope.domElement.removeEventListener( 'pointermove', onPointerMove );\n\t\t\tscope.domElement.removeEventListener( 'pointerup', onPointerUp );\n\n\t\t\twindow.removeEventListener( 'keydown', keydown );\n\t\t\twindow.removeEventListener( 'keyup', keyup );\n\n\t\t};\n\n\t\tthis.domElement.addEventListener( 'contextmenu', contextmenu );\n\n\t\tthis.domElement.addEventListener( 'pointerdown', onPointerDown );\n\t\tthis.domElement.addEventListener( 'pointercancel', onPointerCancel );\n\t\tthis.domElement.addEventListener( 'wheel', onMouseWheel, { passive: false } );\n\n\n\t\twindow.addEventListener( 'keydown', keydown );\n\t\twindow.addEventListener( 'keyup', keyup );\n\n\t\tthis.handleResize();\n\n\t\t// force an update at start\n\t\tthis.update();\n\n\t}\n\n}\n\nexport { TrackballControls };\n","import * as THREE from \"three\";\nimport { TrackballControls } from \"three/examples/jsm/controls/TrackballControls.js\";\n\n// Set up the scene\nconst scene = new THREE.Scene();\nconst camera = new THREE.PerspectiveCamera(\n  75,\n  window.innerWidth / window.innerHeight,\n);\n\n// const shiftY = -30;\n\nconst renderer = new THREE.WebGLRenderer();\nrenderer.setClearColor(new THREE.Color(0xc8c8c8));\nrenderer.setSize(window.innerWidth, window.innerHeight);\ndocument.body.appendChild(renderer.domElement);\n\n\nfunction brightenColor(hexColor, factor) {\n  // Extract the red, green, and blue components\n  const red = (hexColor >> 16) & 0xff;\n  const green = (hexColor >> 8) & 0xff;\n  const blue = hexColor & 0xff;\n\n  // Calculate the new RGB values with the brightness factor\n  const newRed = Math.min(255, red + factor);\n  const newGreen = Math.min(255, green + factor);\n  const newBlue = Math.min(255, blue + factor);\n\n  // Combine the new RGB values to get the new color number\n  const newColor = (newRed << 16) | (newGreen << 8) | newBlue;\n\n  return newColor;\n}\n\n\nconst raycaster = new THREE.Raycaster();\nconst mouse = new THREE.Vector2();\n\nfunction onMouseClick(event) {\n  // Calculate the mouse position in normalized device coordinates (NDC)\n  mouse.x = (event.clientX / window.innerWidth) * 2 - 1;\n  mouse.y = -(event.clientY / window.innerHeight) * 2 + 1;\n\n  // Update the raycaster's position based on the mouse coordinates\n  raycaster.setFromCamera(mouse, camera);\n\n  // Find the intersected objects\n  const intersects = raycaster.intersectObjects(scene.children);\n\n  if (intersects.length > 0) {\n    // The first object in the intersects array is the one that was clicked\n    const clickedMesh = intersects[0].object;\n    //console.log('Clicked Mesh:', clickedMesh.position.x, clickedMesh.position.y, clickedMesh.position.z, clickedMesh.data);\n\n  }\n}\n\nrenderer.domElement.addEventListener('click', onMouseClick);\n\n// random float between x, y:\nconst rnd  = (x:number, y:number) => Math.random() * (y - x) + x;\n\n// Create an array to hold the cubes\nconst cubes = [];\n\n// [backtop, frontbottom, frontop, backbottom, ...]\n// random floats between 0.4 and 0.7\nconst whiteProbabilities = [rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7)];\nconst blackProbabilities = [rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7), rnd(0.4, 0.7)];\n\n// between 0.5 and 0.8\nconst shouldColorBeTheSameProb = Math.random() * (0.8 - 0.4) + 0.4;\n\n\n// Define the heart shape by setting 1s at the appropriate positions\n// This represents the heart shape\nconst shapeArray = Array(20).fill(0).map(() => Array(20).fill(0));\n\n// Define the heart shape by setting 1s at the appropriate positions\n// This represents the heart shape\nconst heartShape = [\n  \n  \"0001111000011110000\",\n  \"0111111100111111100\",\n  \"0111111111111111100\",\n  \"1111111111111111110\",\n  \"1111111111111111110\",\n  \"1111111111111111110\",\n  \"1111111111111111110\",\n  \"0111111111111111100\",\n  \"0011111111111111000\",\n  \"0001111111111110000\",\n  \"0000111111111100000\",\n  \"0000011111111000000\",\n  \"0000001111110000000\",\n  \"0000000111100000000\",\n  \"0000000011000000000\",\n];\n\n// Fill the heartArray with the heart shape\n// put shape in the middle of the 20x20 array\nfor (let i = 0; i < heartShape.length; i++) {\n  for (let j = 0; j < heartShape[i].length; j++) {\n    shapeArray[i + 2][j + 1] = parseInt(heartShape[i][j]);\n  }\n}\n// turn 2d array \"upside down\":\nshapeArray.reverse();\nconst shapeRandomColor = Math.random() * 0xffffff;\nconst outerShapeRandomColor = Math.random() * 0xffffff;\nconst shapeContourRandomColor = Math.random() * 0xffffff;\n// 2 or 3\nconst shapeRandomFace = Math.floor(Math.random() * 2) + 2;\n// Create and position 10x10 cubes with random colors for each face\nfor (let i = -10; i < 10; i++) {\n  for (let j = -10; j < 10; j++) {\n    const cubeGeometry = new THREE.BoxGeometry();\n    const cubeMaterials = [];\n\n\n    // Generate random colors for each face of the cube\n    for (let k = 0; k < 6; k++) {\n\n\n      if (k === 4 || k === 5) {\n        cubeMaterials.push(new THREE.MeshBasicMaterial({ color: 0xffffff })); // White\n        continue;\n      }\n\n\n\n      // Adjusted probability: Increase the chances of selecting white or black\n  /*    if (Math.random() < whiteProbabilities[k]) {\n        cubeMaterials.push(new THREE.MeshBasicMaterial({ color: 0xffffff })); // White\n      } else if (Math.random() < blackProbabilities[k]) {\n        cubeMaterials.push(new THREE.MeshBasicMaterial({ color: 0x000000 })); // Black\n      } else {\n*/\n        cubeMaterials.push(\n          new THREE.MeshBasicMaterial({ color: Math.random() * 0xffffff }),\n        );\n      //}\n\n    }\n\n\n\n    const cube = new THREE.Mesh(cubeGeometry, cubeMaterials);\n    cube.data = { i, j };\n\n\n    cube.position.set(i, i + 1, j + 0.5); // Position cubes evenly in a grid and offset along the Z-axis\n    scene.add(cube);\n    cubes.push(cube);\n\n\n  }\n}\n\n// change colors based on the previous cube\nfor (let i = -10; i < 10; i++) {\n  for (let j = -10; j < 10; j++) {\n    const cubeGeometry = new THREE.BoxGeometry();\n    const cubeMaterials = [];\n\n    // Generate random colors for each face of the cube\n    for (let k = 0; k < 6; k++) {\n\n      if (k === 4 || k === 5) {\n        cubeMaterials.push(new THREE.MeshBasicMaterial({ color: 0xffffff })); // White\n        continue;\n      }\n\n      if (k === shapeRandomFace) {\n        let shapeMaterial;\n        if (shapeArray[i + 10][j + 10] === 1) {\n          shapeMaterial = new THREE.MeshBasicMaterial({ color: shapeRandomColor });\n        } // if there is a 1 next to the 0, make it black\n        else if (shapeArray[i + 10]?.[j + 11] === 1 || shapeArray[i + 10]?.[j + 9] === 1 || shapeArray[i + 11]?.[j + 10] === 1 || shapeArray[i + 9]?.[j + 10] === 1) {\n          shapeMaterial = new THREE.MeshBasicMaterial({ color: shapeContourRandomColor });\n        }\n        else {\n          // random color\n          shapeMaterial = new THREE.MeshBasicMaterial({ color: outerShapeRandomColor});\n        }\n        const currentCube = cubes.find(cube => cube.data.i === i && cube.data.j === j);\n        currentCube.material[k] = shapeMaterial\n        continue;\n      }\n\n\n      ///\n      if (shouldColorBeTheSameProb > Math.random()) {\n        // consider modulu if it's the first cube in the row\n        const cubeOnTheLeft = cubes.find(cube => cube.data.i === i - 1 && cube.data.j === j);\n\n        if (!cubeOnTheLeft) {\n          continue;\n        }\n\n        const previousCubeMaterials = cubeOnTheLeft.material;\n        // if white or black continue:\n        if (previousCubeMaterials[k].color.getHex() === 0xffffff || previousCubeMaterials[k].color.getHex() === 0x000000) {\n          continue;\n        }\n\n        const previousColor = previousCubeMaterials[k].color.getHex();\n        const newColor = brightenColor(previousColor, Math.random() * 10);\n        const newMaterials = new THREE.MeshBasicMaterial({ color: newColor });\n        const currentCube = cubes.find(cube => cube.data.i === i && cube.data.j === j);\n        currentCube.material[k] = newMaterials\n        continue;\n      }\n\n      if (shouldColorBeTheSameProb > Math.random()) {\n        // consider modulu if it's the first cube in the row\n        const cubeOneTheTop = cubes.find(cube => cube.data.i === i && cube.data.j === j - 1);\n\n        if (!cubeOneTheTop) {\n          continue;\n        }\n\n        const previousCubeMaterials = cubeOneTheTop.material;\n        // if white or black continue:\n        if (previousCubeMaterials[k].color.getHex() === 0xffffff || previousCubeMaterials[k].color.getHex() === 0x000000) {\n          continue;\n        }\n        const previousColor = previousCubeMaterials[k].color.getHex();\n        const newColor = brightenColor(previousColor, Math.random() * 10);\n        const newMaterials = new THREE.MeshBasicMaterial({ color: newColor });\n        const currentCube = cubes.find(cube => cube.data.i === i && cube.data.j === j);\n        currentCube.material[k] = newMaterials\n        continue;\n      }\n\n      if (shouldColorBeTheSameProb > Math.random()) {\n        // consider modulu if it's the first cube in the row\n        const cubeOneTheTopLeft = cubes.find(cube => cube.data.i === i - 1 && cube.data.j === j - 1);\n\n        if (!cubeOneTheTopLeft) {\n          continue;\n        }\n\n        const previousCubeMaterials = cubeOneTheTopLeft.material;\n        // if white or black continue:\n        if (previousCubeMaterials[k].color.getHex() === 0xffffff || previousCubeMaterials[k].color.getHex() === 0x000000) {\n          continue;\n        }\n        const previousColor = previousCubeMaterials[k].color.getHex();\n        const newColor = brightenColor(previousColor, Math.random() * 10);\n        const newMaterials = new THREE.MeshBasicMaterial({ color: newColor });\n        const currentCube = cubes.find(cube => cube.data.i === i && cube.data.j === j);\n        currentCube.material[k] = newMaterials\n        continue;\n      }\n\n      if (shouldColorBeTheSameProb > Math.random()) {\n        // consider modulu if it's the first cube in the row\n        const cubeOneTheTopRight = cubes.find(cube => cube.data.i === i + 1 && cube.data.j === j - 1);\n\n        if (!cubeOneTheTopRight) {\n          continue;\n        }\n\n        const previousCubeMaterials = cubeOneTheTopRight.material;\n        // if white or black continue:\n        if (previousCubeMaterials[k].color.getHex() === 0xffffff || previousCubeMaterials[k].color.getHex() === 0x000000) {\n          continue;\n        }\n        const previousColor = previousCubeMaterials[k].color.getHex();\n        const newColor = brightenColor(previousColor, Math.random() * 10);\n        const newMaterials = new THREE.MeshBasicMaterial({ color: newColor });\n        const currentCube = cubes.find(cube => cube.data.i === i && cube.data.j === j);\n        currentCube.material[k] = newMaterials\n        continue;\n      }\n\n    }\n\n\n\n\n\n  }\n}\n\ncamera.position.y = 30;\ncamera.position.x = -30;\n\n\n// Create OrbitControls for camera manipulation\nconst controls = new TrackballControls(camera, renderer.domElement);\ncontrols.enableDamping = true; // Add damping effect for smoother movement\n\n// Add rotation animation\nconst animate = () => {\n  requestAnimationFrame(animate);\n\n  renderer.render(scene, camera);\n  controls.update();\n};\n\nanimate();\n\n","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}